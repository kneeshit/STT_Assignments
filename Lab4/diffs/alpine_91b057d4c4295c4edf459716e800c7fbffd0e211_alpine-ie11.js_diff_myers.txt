diff --git a/dist/alpine-ie11.js b/dist/alpine-ie11.js
index 82c67d86..383f7ea2 100644
--- a/dist/alpine-ie11.js
+++ b/dist/alpine-ie11.js
@@ -5884,7 +5884,7 @@
 
         stages.end(); // Assign current transition to el in case we need to force it.
 
-        el.__x_transition_remaining = once(function () {
+        setTimeout(function () {
           _newArrowCheck(this, _this14);
 
           stages.hide(); // Adding an "isConnected" check, in case the callback
@@ -5892,27 +5892,14 @@
 
           if (el.isConnected) {
             stages.cleanup();
-          } // Safe to remove transition from el since it is completed.
-
-
-          delete el.__x_transition_remaining;
-        }.bind(this));
-        setTimeout(el.__x_transition_remaining, duration);
+          }
+        }.bind(this), duration);
       }.bind(this));
     }.bind(this));
   }
   function isNumeric(subject) {
     return !isNaN(subject);
   }
-  function once(callback) {
-    var called = false;
-    return function () {
-      if (!called) {
-        called = true;
-        callback.apply(this, arguments);
-      }
-    };
-  }
 
   function handleForDirective(component, templateEl, expression, initialUpdate, extraVars) {
     var _this = this;
@@ -6212,11 +6199,6 @@
 
     var initialUpdate = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
 
-    // if value is changed resolve any previous pending transitions before starting a new one.
-    if (el.__x_transition_remaining && el.__x_transition_last_value !== value) {
-      el.__x_transition_remaining();
-    }
-
     var hide = function hide() {
       _newArrowCheck(this, _this);
 
@@ -6234,9 +6216,6 @@
     }.bind(this);
 
     if (initialUpdate === true) {
-      // Assign current value to el to check later on for preventing transition overlaps.
-      el.__x_transition_last_value = value;
-
       if (value) {
         show();
       } else {
@@ -6278,10 +6257,7 @@
             _newArrowCheck(this, _this2);
           }.bind(this));
         }
-      } // Assign current value to el.
-
-
-      el.__x_transition_last_value = value;
+      }
     }.bind(this); // The working of x-show is a bit complex because we need to
     // wait for any child transitions to finish before hiding
     // some element. Also, this has to be done recursively.
@@ -6304,12 +6280,9 @@
       component.executeAndClearRemainingShowDirectiveStack();
     }
 
-    if (el.__x_transition_last_value !== value) {
-      // We'll push the handler onto a stack to be handled later.
     component.showDirectiveStack.push(handle);
     component.showDirectiveLastElement = el;
   }
-  }
 
   function handleIfDirective(component, el, expressionResult, initialUpdate, extraVars) {
     var _this = this;
