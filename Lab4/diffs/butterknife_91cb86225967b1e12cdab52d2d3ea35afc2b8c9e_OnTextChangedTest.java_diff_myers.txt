diff --git a/butterknife-compiler/src/test/java/butterknife/OnTextChangedTest.java b/butterknife-compiler/src/test/java/butterknife/OnTextChangedTest.java
index 3876c5e..9c5d2e6 100644
--- a/butterknife-compiler/src/test/java/butterknife/OnTextChangedTest.java
+++ b/butterknife-compiler/src/test/java/butterknife/OnTextChangedTest.java
@@ -19,7 +19,22 @@ public class OnTextChangedTest {
         + "}"
     );
 
-    JavaFileObject expectedSource = JavaFileObjects.forSourceString("test/Test$$ViewBinder", ""
+    JavaFileObject binderSource = JavaFileObjects.forSourceString("test/Test_ViewBinder", ""
+        + "package test;\n"
+        + "import butterknife.Unbinder;\n"
+        + "import butterknife.internal.Finder;\n"
+        + "import butterknife.internal.ViewBinder;\n"
+        + "import java.lang.Object;\n"
+        + "import java.lang.Override;\n"
+        + "public class Test_ViewBinder<T extends Test> implements ViewBinder<T> {\n"
+        + "  @Override\n"
+        + "  public Unbinder bind(Finder finder, T target, Object source) {\n"
+        + "    return new Test_ViewBinding<>(target, finder, source);\n"
+        + "  }\n"
+        + "}"
+    );
+
+    JavaFileObject bindingSource = JavaFileObjects.forSourceString("test/Test_ViewBinding", ""
         + "package test;\n"
         + "import android.text.Editable;\n"
         + "import android.text.TextWatcher;\n"
@@ -27,21 +42,15 @@ public class OnTextChangedTest {
         + "import android.widget.TextView;\n"
         + "import butterknife.Unbinder;\n"
         + "import butterknife.internal.Finder;\n"
-        + "import butterknife.internal.ViewBinder;\n"
         + "import java.lang.CharSequence;\n"
         + "import java.lang.IllegalStateException;\n"
         + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
-        + "public class Test$$ViewBinder<T extends Test> implements ViewBinder<T> {\n"
-        + "  @Override\n"
-        + "  public Unbinder bind(Finder finder, T target, Object source) {\n"
-        + "    return new InnerUnbinder<>(target, finder, source);\n"
-        + "  }\n"
-        + "  protected static class InnerUnbinder<T extends Test> implements Unbinder {\n"
+        + "public class Test_ViewBinding<T extends Test> implements Unbinder {\n"
         + "  protected T target;\n"
         + "  private View view1;\n"
         + "  private TextWatcher view1TextWatcher;\n"
-        + "    protected InnerUnbinder(final T target, Finder finder, Object source) {\n"
+        + "  public Test_ViewBinding(final T target, Finder finder, Object source) {\n"
         + "    this.target = target;\n"
         + "    View view;\n"
         + "    view = finder.findRequiredView(source, 1, \"method 'doStuff'\");\n"
@@ -68,7 +77,6 @@ public class OnTextChangedTest {
         + "    view1 = null;\n"
         + "    this.target = null;\n"
         + "  }\n"
-        + "  }\n"
         + "}"
     );
 
@@ -76,6 +84,6 @@ public class OnTextChangedTest {
         .processedWith(new ButterKnifeProcessor())
         .compilesWithoutError()
         .and()
-        .generatesSources(expectedSource);
+        .generatesSources(binderSource, bindingSource);
   }
 }
