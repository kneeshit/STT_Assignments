diff --git a/butterknife-gradle-plugin/src/main/java/butterknife/plugin/FinalRClassBuilder.java b/butterknife-gradle-plugin/src/main/java/butterknife/plugin/FinalRClassBuilder.java
index 672da6d..e513a44 100644
--- a/butterknife-gradle-plugin/src/main/java/butterknife/plugin/FinalRClassBuilder.java
+++ b/butterknife-gradle-plugin/src/main/java/butterknife/plugin/FinalRClassBuilder.java
@@ -28,6 +28,7 @@ import static javax.lang.model.element.Modifier.STATIC;
  */
 public final class FinalRClassBuilder {
   private static final String SUPPORT_ANNOTATION_PACKAGE = "android.support.annotation";
+  private static final String ANDROIDX_ANNOTATION_PACKAGE = "androidx.annotation";
   private static final String[] SUPPORTED_TYPES = {
       "anim", "array", "attr", "bool", "color", "dimen", "drawable", "id", "integer", "layout", "menu", "plurals",
       "string", "style", "styleable"
@@ -35,7 +36,7 @@ public final class FinalRClassBuilder {
 
   private FinalRClassBuilder() { }
 
-  public static void brewJava(File rFile, File outputDir, String packageName, String className)
+  public static void brewJava(File rFile, File outputDir, String packageName, String className, boolean useAndroidX)
       throws Exception {
     CompilationUnit compilationUnit = JavaParser.parse(rFile);
     TypeDeclaration resourceClass = compilationUnit.getTypes().get(0);
@@ -45,7 +46,7 @@ public final class FinalRClassBuilder {
 
     for (Node node : resourceClass.getChildNodes()) {
       if (node instanceof ClassOrInterfaceDeclaration) {
-        addResourceType(Arrays.asList(SUPPORTED_TYPES), result, (ClassOrInterfaceDeclaration) node);
+        addResourceType(Arrays.asList(SUPPORTED_TYPES), result, (ClassOrInterfaceDeclaration) node, useAndroidX);
       }
     }
 
@@ -57,7 +58,7 @@ public final class FinalRClassBuilder {
   }
 
   private static void addResourceType(List<String> supportedTypes, TypeSpec.Builder result,
-      ClassOrInterfaceDeclaration node) {
+      ClassOrInterfaceDeclaration node, boolean useAndroidX) {
     if (!supportedTypes.contains(node.getNameAsString())) {
       return;
     }
@@ -72,7 +73,7 @@ public final class FinalRClassBuilder {
         // used in annotations.
         if (isInt(declaration)) {
           addResourceField(resourceType, declaration.getVariables().get(0),
-                  getSupportAnnotationClass(type));
+                  getSupportAnnotationClass(type, useAndroidX));
         }
       }
     }
@@ -101,8 +102,9 @@ public final class FinalRClassBuilder {
     resourceType.addField(fieldSpecBuilder.build());
   }
 
-  private static ClassName getSupportAnnotationClass(String type) {
-    return ClassName.get(SUPPORT_ANNOTATION_PACKAGE, capitalize(type) + "Res");
+  private static ClassName getSupportAnnotationClass(String type, boolean useAndroidX) {
+    String supportPackage = useAndroidX ? ANDROIDX_ANNOTATION_PACKAGE : SUPPORT_ANNOTATION_PACKAGE;
+    return ClassName.get(supportPackage, capitalize(type) + "Res");
   }
 
   private static String capitalize(String word) {
