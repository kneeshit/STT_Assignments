diff --git a/examples/auth.rs b/examples/auth.rs
index a643406..00cfe70 100644
--- a/examples/auth.rs
+++ b/examples/auth.rs
@@ -1,4 +1,4 @@
-use std::time;
+use std::{path::PathBuf, time};
 
 use openai::auth::{
     model::{AuthAccountBuilder, AuthStrategy},
@@ -7,11 +7,20 @@ use openai::auth::{
 
 #[tokio::main]
 async fn main() -> anyhow::Result<()> {
+    let ctx = openai::context::ContextArgsBuilder::default()
+        .arkose_auth_har_file(PathBuf::from(
+            "/Users/gngpp/VSCode/ninja/login.chat.openai.com.har",
+        ))
+        .build()
+        .unwrap();
+    openai::context::init(ctx);
     let email = std::env::var("EMAIL")?;
     let password = std::env::var("PASSWORD")?;
     let auth = openai::auth::AuthClientBuilder::builder()
         .user_agent(openai::HEADER_UA)
         .timeout(time::Duration::from_secs(1000))
+        .proxy(Some("socks5://10.0.2.1:1081".to_owned()))
+        .preauth_api(Some("https://ai.fakeopen.com/auth/preauth".to_owned()))
         .connect_timeout(time::Duration::from_secs(1000))
         .build();
     let token = auth
@@ -19,7 +28,7 @@ async fn main() -> anyhow::Result<()> {
             &AuthAccountBuilder::default()
                 .username(email)
                 .password(password)
-                .option(AuthStrategy::Platform)
+                .option(AuthStrategy::Apple)
                 .build()?,
         )
         .await?;
@@ -30,8 +39,9 @@ async fn main() -> anyhow::Result<()> {
     tokio::time::sleep(std::time::Duration::from_secs(5)).await;
     if let Some(refresh_token) = auth_token.refresh_token() {
         println!("RefreshToken: {}", refresh_token);
-        auth.do_refresh_token(refresh_token).await?;
-        auth.do_revoke_token(refresh_token).await?;
+        let refresh_token = auth.do_refresh_token(refresh_token).await?;
+        println!("RefreshToken: {}", refresh_token.refresh_token);
+        auth.do_revoke_token(&refresh_token.refresh_token).await?;
     }
 
     Ok(())
