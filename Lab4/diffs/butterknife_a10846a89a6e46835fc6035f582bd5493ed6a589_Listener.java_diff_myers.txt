diff --git a/butterknife/src/main/java/butterknife/internal/Listener.java b/butterknife/src/main/java/butterknife/internal/Listener.java
index 97f6d4f..b8e7c41 100644
--- a/butterknife/src/main/java/butterknife/internal/Listener.java
+++ b/butterknife/src/main/java/butterknife/internal/Listener.java
@@ -38,7 +38,7 @@ final class Listener {
 
     TypeMirror ownerTypeMirror = listenerElement.getEnclosingElement().asType();
     ownerTypeMirror = typeUtils.erasure(ownerTypeMirror);
-    String ownerType = ownerTypeMirror.toString();
+    String ownerType = stripTypeParameters(ownerTypeMirror.toString());
     String setterName = "set" + listenerElement.getSimpleName();
     String type = listenerElement.getQualifiedName().toString();
     String methodName = listenerMethod.getSimpleName().toString();
@@ -74,6 +74,18 @@ final class Listener {
     this.parameterTypes = parameterTypes; // No defensive copy, only instantiated internally.
   }
 
+  // Fix issue #83 - when built with Eclipse, the generated listener code contains an errant
+  // type parameter
+  private static String stripTypeParameters(String type) {
+    int typeParamStart = type.indexOf("<");
+
+    if (typeParamStart != -1) {
+      return type.substring(0, typeParamStart);
+    } else {
+      return type;
+    }
+  }
+
   public String getOwnerType() {
     return ownerType;
   }
