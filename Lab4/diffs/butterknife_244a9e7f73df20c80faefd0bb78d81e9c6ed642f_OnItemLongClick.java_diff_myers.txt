diff --git a/butterknife/src/main/java/butterknife/OnItemLongClick.java b/butterknife/src/main/java/butterknife/OnItemLongClick.java
index 43f38c7..4fa426f 100644
--- a/butterknife/src/main/java/butterknife/OnItemLongClick.java
+++ b/butterknife/src/main/java/butterknife/OnItemLongClick.java
@@ -1,6 +1,7 @@
 package butterknife;
 
 import butterknife.internal.ListenerClass;
+import butterknife.internal.ListenerMethod;
 import java.lang.annotation.Retention;
 import java.lang.annotation.Target;
 
@@ -9,33 +10,46 @@ import static java.lang.annotation.ElementType.METHOD;
 import static java.lang.annotation.RetentionPolicy.CLASS;
 
 /**
- * Annotation for methods which indicate that they should be called when an item is long pressed.
- * Corresponds to adding a {@link OnItemLongClickListener} to the views specified by
- * {@link #value()}.
+ * Annotation for methods which indicate that they should be called when an item is long clicked.
+ * Corresponds to adding an {@link OnItemLongClickListener OnItemLongClickListener} to the views
+ * specified.
  * <pre><code>
  * {@literal @}OnItemLongClick(R.id.example_list) boolean onItemLongClick(int position) {
  *   Toast.makeText(this, "Long clicked position " + position + "!", LENGTH_SHORT).show();
  *   return true;
  * }
  * </code></pre>
- * Any number of parameters from {@link OnItemLongClickListener} may be used on the method.
+ * Any number of parameters from
+ * {@link OnItemLongClickListener#onItemLongClick(android.widget.AdapterView, android.view.View,
+ * int, long) onItemLongClick} may be used on the method.
  *
  * @see OnItemLongClickListener
  * @see Optional
  */
-@Retention(CLASS) @Target(METHOD)
+@Target(METHOD)
+@Retention(CLASS)
 @ListenerClass(
     targetType = "android.widget.AdapterView<?>",
-    setter = "setOnFocusChangeListener",
-    type = "android.widget.AdapterView.OnItemClickListener",
-    name = "onItemClick",
+    setter = "setOnItemLongClickListener",
+    type = "android.widget.AdapterView.OnItemLongClickListener",
+    callbacks = OnItemLongClick.Callback.class
+)
+public @interface OnItemLongClick {
+  int[] value();
+  Callback callback() default Callback.ITEM_CLICK;
+
+  enum Callback {
+    @ListenerMethod(
+        name = "onItemLongClick",
         parameters = {
             "android.widget.AdapterView<?>",
-        "andorid.view.View",
+            "android.view.View",
             "int",
             "long"
-    }
+        },
+        returnType = "boolean",
+        defaultReturn = "false"
     )
-public @interface OnItemLongClick {
-  int[] value();
+    ITEM_CLICK
+  }
 }
