diff --git a/butterknife-compiler/src/test/java/butterknife/BindViewsTest.java b/butterknife-compiler/src/test/java/butterknife/BindViewsTest.java
index 511dc41..d8b7897 100644
--- a/butterknife-compiler/src/test/java/butterknife/BindViewsTest.java
+++ b/butterknife-compiler/src/test/java/butterknife/BindViewsTest.java
@@ -53,10 +53,10 @@ public class BindViewsTest {
         + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
         + "import java.lang.Override;\n"
-        + "public class Test_ViewBinding<T extends Test> implements Unbinder {\n"
-        + "  protected T target;\n"
+        + "public class Test_ViewBinding implements Unbinder {\n"
+        + "  private Test target;\n"
         + "  @UiThread\n"
-        + "  public Test_ViewBinding(T target, View source) {\n"
+        + "  public Test_ViewBinding(Test target, View source) {\n"
         + "    this.target = target;\n"
         + "    target.thing = Utils.arrayOf(\n"
         + "        Utils.findRequiredView(source, 1, \"field 'thing'\"), \n"
@@ -66,10 +66,10 @@ public class BindViewsTest {
         + "  @Override\n"
         + "  @CallSuper\n"
         + "  public void unbind() {\n"
-        + "    T target = this.target;\n"
+        + "    Test target = this.target;\n"
         + "    if (target == null) throw new IllegalStateException(\"Bindings already cleared.\");\n"
-        + "    target.thing = null;\n"
         + "    this.target = null;\n"
+        + "    target.thing = null;\n"
         + "  }\n"
         + "}"
     );
@@ -102,10 +102,10 @@ public class BindViewsTest {
         + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
         + "import java.lang.Override;\n"
-        + "public class Test_ViewBinding<T extends Test> implements Unbinder {\n"
-        + "  protected T target;\n"
+        + "public class Test_ViewBinding implements Unbinder {\n"
+        + "  private Test target;\n"
         + "  @UiThread\n"
-        + "  public Test_ViewBinding(T target, View source) {\n"
+        + "  public Test_ViewBinding(Test target, View source) {\n"
         + "    this.target = target;\n"
         + "    target.thing = Utils.arrayOf(\n"
         + "        Utils.findRequiredView(source, 1, \"field 'thing'\"), \n"
@@ -115,10 +115,10 @@ public class BindViewsTest {
         + "  @Override\n"
         + "  @CallSuper\n"
         + "  public void unbind() {\n"
-        + "    T target = this.target;\n"
+        + "    Test target = this.target;\n"
         + "    if (target == null) throw new IllegalStateException(\"Bindings already cleared.\");\n"
-        + "    target.thing = null;\n"
         + "    this.target = null;\n"
+        + "    target.thing = null;\n"
         + "  }\n"
         + "}"
     );
@@ -154,10 +154,10 @@ public class BindViewsTest {
         + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
         + "import java.lang.Override;\n"
-        + "public class Test_ViewBinding<T extends Test> implements Unbinder {\n"
-        + "  protected T target;\n"
+        + "public class Test_ViewBinding implements Unbinder {\n"
+        + "  private Test target;\n"
         + "  @UiThread\n"
-        + "  public Test_ViewBinding(T target, View source) {\n"
+        + "  public Test_ViewBinding(Test target, View source) {\n"
         + "    this.target = target;\n"
         + "    target.thing = Utils.arrayOf(\n"
         + "        Utils.findRequiredViewAsType(source, 1, \"field 'thing'\", TextView.class), \n"
@@ -167,10 +167,10 @@ public class BindViewsTest {
         + "  @Override\n"
         + "  @CallSuper\n"
         + "  public void unbind() {\n"
-        + "    T target = this.target;\n"
+        + "    Test target = this.target;\n"
         + "    if (target == null) throw new IllegalStateException(\"Bindings already cleared.\");\n"
-        + "    target.thing = null;\n"
         + "    this.target = null;\n"
+        + "    target.thing = null;\n"
         + "  }\n"
         + "}"
     );
@@ -204,10 +204,10 @@ public class BindViewsTest {
         + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
         + "import java.lang.Override;\n"
-        + "public class Test_ViewBinding<T extends Test> implements Unbinder {\n"
-        + "  protected T target;\n"
+        + "public class Test_ViewBinding implements Unbinder {\n"
+        + "  private Test target;\n"
         + "  @UiThread\n"
-        + "  public Test_ViewBinding(T target, View source) {\n"
+        + "  public Test_ViewBinding(Test target, View source) {\n"
         + "    this.target = target;\n"
         + "    target.thing = Utils.listOf(\n"
         + "        Utils.findRequiredView(source, 1, \"field 'thing'\"), \n"
@@ -217,10 +217,10 @@ public class BindViewsTest {
         + "  @Override\n"
         + "  @CallSuper\n"
         + "  public void unbind() {\n"
-        + "    T target = this.target;\n"
+        + "    Test target = this.target;\n"
         + "    if (target == null) throw new IllegalStateException(\"Bindings already cleared.\");\n"
-        + "    target.thing = null;\n"
         + "    this.target = null;\n"
+        + "    target.thing = null;\n"
         + "  }\n"
         + "}"
     );
@@ -292,10 +292,10 @@ public class BindViewsTest {
         + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
         + "import java.lang.Override;\n"
-        + "public class Test_ViewBinding<T extends Test> implements Unbinder {\n"
-        + "  protected T target;\n"
+        + "public class Test_ViewBinding implements Unbinder {\n"
+        + "  private Test target;\n"
         + "  @UiThread\n"
-        + "  public Test_ViewBinding(T target, View source) {\n"
+        + "  public Test_ViewBinding(Test target, View source) {\n"
         + "    this.target = target;\n"
         + "    target.thing = Utils.listOf(\n"
         + "        Utils.findRequiredViewAsType(source, 1, \"field 'thing'\", Test.TestInterface.class), \n"
@@ -305,10 +305,10 @@ public class BindViewsTest {
         + "  @Override\n"
         + "  @CallSuper\n"
         + "  public void unbind() {\n"
-        + "    T target = this.target;\n"
+        + "    Test target = this.target;\n"
         + "    if (target == null) throw new IllegalStateException(\"Bindings already cleared.\");\n"
-        + "    target.thing = null;\n"
         + "    this.target = null;\n"
+        + "    target.thing = null;\n"
         + "  }\n"
         + "}"
     );
@@ -342,10 +342,10 @@ public class BindViewsTest {
         + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
         + "import java.lang.Override;\n"
-        + "public class Test_ViewBinding<T extends Test> implements Unbinder {\n"
-        + "  protected T target;\n"
+        + "public class Test_ViewBinding implements Unbinder {\n"
+        + "  private Test target;\n"
         + "  @UiThread\n"
-        + "  public Test_ViewBinding(T target, View source) {\n"
+        + "  public Test_ViewBinding(Test target, View source) {\n"
         + "    this.target = target;\n"
         + "    target.thing = Utils.listOf(\n"
         + "        Utils.findRequiredView(source, 1, \"field 'thing'\"), \n"
@@ -355,10 +355,10 @@ public class BindViewsTest {
         + "  @Override\n"
         + "  @CallSuper\n"
         + "  public void unbind() {\n"
-        + "    T target = this.target;\n"
+        + "    Test target = this.target;\n"
         + "    if (target == null) throw new IllegalStateException(\"Bindings already cleared.\");\n"
-        + "    target.thing = null;\n"
         + "    this.target = null;\n"
+        + "    target.thing = null;\n"
         + "  }\n"
         + "}"
     );
@@ -395,10 +395,10 @@ public class BindViewsTest {
         + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
         + "import java.lang.Override;\n"
-        + "public class Test_ViewBinding<T extends Test> implements Unbinder {\n"
-        + "  protected T target;\n"
+        + "public class Test_ViewBinding implements Unbinder {\n"
+        + "  private Test target;\n"
         + "  @UiThread\n"
-        + "  public Test_ViewBinding(T target, View source) {\n"
+        + "  public Test_ViewBinding(Test target, View source) {\n"
         + "    this.target = target;\n"
         + "    target.thing = Utils.listOf(\n"
         + "        source.findViewById(1), \n"
@@ -408,10 +408,10 @@ public class BindViewsTest {
         + "  @Override\n"
         + "  @CallSuper\n"
         + "  public void unbind() {\n"
-        + "    T target = this.target;\n"
+        + "    Test target = this.target;\n"
         + "    if (target == null) throw new IllegalStateException(\"Bindings already cleared.\");\n"
-        + "    target.thing = null;\n"
         + "    this.target = null;\n"
+        + "    target.thing = null;\n"
         + "  }\n"
         + "}"
     );
