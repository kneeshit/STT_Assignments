diff --git a/butterknife-compiler/src/test/java/butterknife/UnbinderTest.java b/butterknife-compiler/src/test/java/butterknife/UnbinderTest.java
index 34dd772..4522cef 100644
--- a/butterknife-compiler/src/test/java/butterknife/UnbinderTest.java
+++ b/butterknife-compiler/src/test/java/butterknife/UnbinderTest.java
@@ -828,14 +828,14 @@ public class UnbinderTest {
         + "public class A$$ViewBinder<T extends A> implements ViewBinder<T> {\n"
         + "  @Override\n"
         + "  public Unbinder bind(Finder finder, T target, Object source) {\n"
-        + "    bindToTarget(target, finder, source);\n"
-        + "    return Unbinder.EMPTY;\n"
-        + "  }\n"
-        + "  @SuppressWarnings(\"ResourceType\")\n"
-        + "  protected static void bindToTarget(final A target, Finder finder, Object source) {\n"
         + "    Context context = finder.getContext(source);\n"
         + "    Resources res = context.getResources();\n"
         + "    Resources.Theme theme = context.getTheme();\n"
+        + "    bindToTarget(target, res, theme);\n"
+        + "    return Unbinder.EMPTY;\n"
+        + "  }\n"
+        + "  @SuppressWarnings(\"ResourceType\")\n"
+        + "  protected static void bindToTarget(final A target, Resources res, Resources.Theme theme) {\n"
         + "    target.blackColor = Utils.getColor(res, theme, 17170444);\n"
         + "  }\n"
         + "}"
@@ -854,15 +854,15 @@ public class UnbinderTest {
         + "public class B$$ViewBinder<T extends B> extends A$$ViewBinder<T> {\n"
         + "  @Override\n"
         + "  public Unbinder bind(Finder finder, T target, Object source) {\n"
-        + "    bindToTarget(target, finder, source);\n"
-        + "    return Unbinder.EMPTY;\n"
-        + "  }\n"
-        + "  @SuppressWarnings(\"ResourceType\")\n"
-        + "  protected static void bindToTarget(final B target, Finder finder, Object source) {\n"
-        + "    A$$ViewBinder.bindToTarget(target, finder, source);\n"
         + "    Context context = finder.getContext(source);\n"
         + "    Resources res = context.getResources();\n"
         + "    Resources.Theme theme = context.getTheme();\n"
+        + "    bindToTarget(target, res, theme);\n"
+        + "    return Unbinder.EMPTY;\n"
+        + "  }\n"
+        + "  @SuppressWarnings(\"ResourceType\")\n"
+        + "  protected static void bindToTarget(final B target, Resources res, Resources.Theme theme) {\n"
+        + "    A$$ViewBinder.bindToTarget(target, res, theme);\n"
         + "    target.whiteColor = Utils.getColor(res, theme, 17170443);\n"
         + "  }\n"
         + "}"
@@ -883,18 +883,18 @@ public class UnbinderTest {
         + "public class C$$ViewBinder<T extends C> extends B$$ViewBinder<T> {\n"
         + "  @Override\n"
         + "  public Unbinder bind(Finder finder, T target, Object source) {\n"
-        + "    bindToTarget(target, finder, source);\n"
-        + "    return new InnerUnbinder(target);\n"
-        + "  }\n"
-        + "  @SuppressWarnings(\"ResourceType\")\n"
-        + "  protected static void bindToTarget(final C target, Finder finder, Object source) {\n"
-        + "    B$$ViewBinder.bindToTarget(target, finder, source);\n"
-        + "    View view;\n"
-        + "    view = finder.findRequiredView(source, 16908313, \"field 'button1'\");\n"
-        + "    target.button1 = view;\n"
         + "    Context context = finder.getContext(source);\n"
         + "    Resources res = context.getResources();\n"
         + "    Resources.Theme theme = context.getTheme();\n"
+        + "    bindToTarget(target, finder, source, res, theme);\n"
+        + "    return new InnerUnbinder(target);\n"
+        + "  }\n"
+        + "  @SuppressWarnings(\"ResourceType\")\n"
+        + "  protected static void bindToTarget(final C target, Finder finder, Object source, Resources res, Resources.Theme theme) {\n"
+        + "    B$$ViewBinder.bindToTarget(target, res, theme);\n"
+        + "    View view;\n"
+        + "    view = finder.findRequiredView(source, 16908313, \"field 'button1'\");\n"
+        + "    target.button1 = view;\n"
         + "    target.transparentColor = Utils.getColor(res, theme, 17170445);\n"
         + "  }\n"
         + "  protected static class InnerUnbinder<T extends C> implements Unbinder {\n"
@@ -928,15 +928,15 @@ public class UnbinderTest {
         + "public class D$$ViewBinder<T extends D> extends C$$ViewBinder<T> {\n"
         + "  @Override\n"
         + "  public Unbinder bind(Finder finder, T target, Object source) {\n"
-        + "    bindToTarget(target, finder, source);\n"
-        + "    return new C$$ViewBinder.InnerUnbinder(target);\n"
-        + "  }\n"
-        + "  @SuppressWarnings(\"ResourceType\")\n"
-        + "  protected static void bindToTarget(final D target, Finder finder, Object source) {\n"
-        + "    C$$ViewBinder.bindToTarget(target, finder, source);\n"
         + "    Context context = finder.getContext(source);\n"
         + "    Resources res = context.getResources();\n"
         + "    Resources.Theme theme = context.getTheme();\n"
+        + "    bindToTarget(target, finder, source, res, theme);\n"
+        + "    return new C$$ViewBinder.InnerUnbinder(target);\n"
+        + "  }\n"
+        + "  @SuppressWarnings(\"ResourceType\")\n"
+        + "  protected static void bindToTarget(final D target, Finder finder, Object source, Resources res, Resources.Theme theme) {\n"
+        + "    C$$ViewBinder.bindToTarget(target, finder, source, res, theme);\n"
         + "    target.grayColor = Utils.getColor(res, theme, 17170432);\n"
         + "  }\n"
         + "}"
@@ -955,15 +955,15 @@ public class UnbinderTest {
         + "public class E$$ViewBinder<T extends E> extends C$$ViewBinder<T> {\n"
         + "  @Override\n"
         + "  public Unbinder bind(Finder finder, T target, Object source) {\n"
-        + "    bindToTarget(target, finder, source);\n"
-        + "    return new C$$ViewBinder.InnerUnbinder(target);\n"
-        + "  }\n"
-        + "  @SuppressWarnings(\"ResourceType\")\n"
-        + "  protected static void bindToTarget(final E target, Finder finder, Object source) {\n"
-        + "    C$$ViewBinder.bindToTarget(target, finder, source);\n"
         + "    Context context = finder.getContext(source);\n"
         + "    Resources res = context.getResources();\n"
         + "    Resources.Theme theme = context.getTheme();\n"
+        + "    bindToTarget(target, finder, source, res, theme);\n"
+        + "    return new C$$ViewBinder.InnerUnbinder(target);\n"
+        + "  }\n"
+        + "  @SuppressWarnings(\"ResourceType\")\n"
+        + "  protected static void bindToTarget(final E target, Finder finder, Object source, Resources res, Resources.Theme theme) {\n"
+        + "    C$$ViewBinder.bindToTarget(target, finder, source, res, theme);\n"
         + "    target.backgroundDarkColor = Utils.getColor(res, theme, 17170446);\n"
         + "  }\n"
         + "}"
@@ -982,15 +982,15 @@ public class UnbinderTest {
         + "public class F$$ViewBinder<T extends F> extends D$$ViewBinder<T> {\n"
         + "  @Override\n"
         + "  public Unbinder bind(Finder finder, T target, Object source) {\n"
-        + "    bindToTarget(target, finder, source);\n"
-        + "    return new C$$ViewBinder.InnerUnbinder(target);\n"
-        + "  }\n"
-        + "  @SuppressWarnings(\"ResourceType\")\n"
-        + "  protected static void bindToTarget(final F target, Finder finder, Object source) {\n"
-        + "    D$$ViewBinder.bindToTarget(target, finder, source);\n"
         + "    Context context = finder.getContext(source);\n"
         + "    Resources res = context.getResources();\n"
         + "    Resources.Theme theme = context.getTheme();\n"
+        + "    bindToTarget(target, finder, source, res, theme);\n"
+        + "    return new C$$ViewBinder.InnerUnbinder(target);\n"
+        + "  }\n"
+        + "  @SuppressWarnings(\"ResourceType\")\n"
+        + "  protected static void bindToTarget(final F target, Finder finder, Object source, Resources res, Resources.Theme theme) {\n"
+        + "    D$$ViewBinder.bindToTarget(target, finder, source, res, theme);\n"
         + "    target.backgroundLightColor = Utils.getColor(res, theme, 17170447);\n"
         + "  }\n"
         + "}"
@@ -1011,13 +1011,16 @@ public class UnbinderTest {
         + "public class G$$ViewBinder<T extends G> extends E$$ViewBinder<T> {\n"
         + "  @Override\n"
         + "  public Unbinder bind(Finder finder, T target, Object source) {\n"
+        + "    Context context = finder.getContext(source);\n"
+        + "    Resources res = context.getResources();\n"
+        + "    Resources.Theme theme = context.getTheme();\n"
         + "    InnerUnbinder unbinder = new InnerUnbinder(target);\n"
-        + "    bindToTarget(target, finder, source, unbinder);\n"
+        + "    bindToTarget(target, finder, source, res, theme, unbinder);\n"
         + "    return unbinder;\n"
         + "  }\n"
         + "  @SuppressWarnings(\"ResourceType\")\n"
-        + "  protected static void bindToTarget(final G target, Finder finder, Object source, InnerUnbinder unbinder) {\n"
-        + "    E$$ViewBinder.bindToTarget(target, finder, source);\n"
+        + "  protected static void bindToTarget(final G target, Finder finder, Object source, Resources res, Resources.Theme theme, InnerUnbinder unbinder) {\n"
+        + "    E$$ViewBinder.bindToTarget(target, finder, source, res, theme);\n"
         + "    View view;\n"
         + "    view = finder.findRequiredView(source, 16908314, \"field 'button2'\");\n"
         + "    target.button2 = view;\n"
@@ -1029,9 +1032,6 @@ public class UnbinderTest {
         + "        target.onClick();\n"
         + "      }\n"
         + "    });\n"
-        + "    Context context = finder.getContext(source);\n"
-        + "    Resources res = context.getResources();\n"
-        + "    Resources.Theme theme = context.getTheme();\n"
         + "    target.grayColor = Utils.getColor(res, theme, 17170432);\n"
         + "  }\n"
         + "  protected static class InnerUnbinder<T extends G> extends C$$ViewBinder.InnerUnbinder<T> {\n"
@@ -1063,19 +1063,19 @@ public class UnbinderTest {
         + "public class H$$ViewBinder<T extends H> extends G$$ViewBinder<T> {\n"
         + "  @Override\n"
         + "  public Unbinder bind(Finder finder, T target, Object source) {\n"
-        + "    InnerUnbinder unbinder = new InnerUnbinder(target);\n"
-        + "    bindToTarget(target, finder, source, unbinder);\n"
-        + "    return unbinder;\n"
-        + "  }\n"
-        + "  @SuppressWarnings(\"ResourceType\")\n"
-        + "  protected static void bindToTarget(final H target, Finder finder, Object source, InnerUnbinder unbinder) {\n"
-        + "    G$$ViewBinder.bindToTarget(target, finder, source, unbinder);\n"
-        + "    View view;\n"
-        + "    view = finder.findRequiredView(source, 16908315, \"field 'button3'\");\n"
-        + "    target.button3 = view;\n"
         + "    Context context = finder.getContext(source);\n"
         + "    Resources res = context.getResources();\n"
         + "    Resources.Theme theme = context.getTheme();\n"
+        + "    InnerUnbinder unbinder = new InnerUnbinder(target);\n"
+        + "    bindToTarget(target, finder, source, res, theme, unbinder);\n"
+        + "    return unbinder;\n"
+        + "  }\n"
+        + "  @SuppressWarnings(\"ResourceType\")\n"
+        + "  protected static void bindToTarget(final H target, Finder finder, Object source, Resources res, Resources.Theme theme, InnerUnbinder unbinder) {\n"
+        + "    G$$ViewBinder.bindToTarget(target, finder, source, res, theme, unbinder);\n"
+        + "    View view;\n"
+        + "    view = finder.findRequiredView(source, 16908315, \"field 'button3'\");\n"
+        + "    target.button3 = view;\n"
         + "    target.grayColor = Utils.getColor(res, theme, 17170433);\n"
         + "  }\n"
         + "  protected static class InnerUnbinder<T extends H> extends G$$ViewBinder.InnerUnbinder<T> {\n"
