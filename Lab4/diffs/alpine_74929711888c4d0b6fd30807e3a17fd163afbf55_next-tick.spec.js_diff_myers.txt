diff --git a/test/next-tick.spec.js b/test/next-tick.spec.js
index cb31a082..5e888053 100644
--- a/test/next-tick.spec.js
+++ b/test/next-tick.spec.js
@@ -23,7 +23,7 @@ test('$nextTick', async () => {
     await wait(() => expect(document.querySelector('span').innerText).toEqual('bob'))
 })
 
-test('nextTick wait for x-for to finish rendering', async () => {
+test('$nextTick waits for x-for to finish rendering', async () => {
     document.body.innerHTML = `
         <div x-data="{list: ['one', 'two'], check: 2}">
             <template x-for="item in list">
@@ -47,32 +47,28 @@ test('nextTick wait for x-for to finish rendering', async () => {
 
 test('$nextTick works with transition', async () => {
     jest.spyOn(window, 'requestAnimationFrame').mockImplementation((callback) => {
-        setTimeout(callback, 0)
-    });
+        setTimeout(callback, 10)
+    })
 
     document.body.innerHTML = `
-        <div x-data="{show: false, foo: '---'}">
-            <div id="A"
-                x-show="show"
-                x-transition:enter="enter"
-                x-transition:enter-start="enter-start"
-                x-transition:enter-end="enter-end">
-                <input x-ref="foo">
-            </div>
-            <span x-text="foo"></span>
-            <button x-on:click="show = true; $nextTick(() => {foo = document.querySelector('#A').getAttribute('style')})"></button>
+        <div x-data="{ show: false, loggedDisplayStyle: null }" x-init="$nextTick(() => { loggedDisplayStyle = document.querySelector('h1').style.display })">
+            <h1 x-show="show" x-transition:enter="animation-enter"></h1>
+
+            <h2 x-text="loggedDisplayStyle"></h2>
+
+            <button @click="show = true; $nextTick(() => { loggedDisplayStyle = document.querySelector('h1').style.display })"
         </div>
     `
 
     Alpine.start()
 
-    await wait(() => expect(document.querySelector('#A').getAttribute('style')).toEqual('display: none;'))
+    await wait(() => {
+        expect(document.querySelector('h2').innerText).toEqual('none')
+    })
 
     document.querySelector('button').click()
 
-    await wait(() => expect(document.querySelector('#A').getAttribute('style')).toEqual(null))
-
-    // Next tick should run after we show the element so the style property should be null
-    // We stash it in a variable so we can test it without worring about timing issues
-    expect(document.querySelector('span').innerText).toEqual(null)
+    await wait(() => {
+        expect(document.querySelector('h2').innerText).toEqual('')
+    })
 })
