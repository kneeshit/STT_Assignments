diff --git a/butterknife-compiler/src/test/java/butterknife/UnbinderTest.java b/butterknife-compiler/src/test/java/butterknife/UnbinderTest.java
index 682b6f6..a7c61b1 100644
--- a/butterknife-compiler/src/test/java/butterknife/UnbinderTest.java
+++ b/butterknife-compiler/src/test/java/butterknife/UnbinderTest.java
@@ -29,15 +29,14 @@ public class UnbinderTest {
 
     JavaFileObject binderSource = JavaFileObjects.forSourceString("test/Test_ViewBinder", ""
         + "package test;\n"
+        + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
-        + "import butterknife.internal.Finder;\n"
         + "import butterknife.internal.ViewBinder;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public final class Test_ViewBinder implements ViewBinder<Test> {\n"
         + "  @Override\n"
-        + "  public Unbinder bind(Finder finder, Test target, Object source) {\n"
-        + "    return new Test_ViewBinding<>(target, finder, source);\n"
+        + "  public Unbinder bind(Test target, View source) {\n"
+        + "    return new Test_ViewBinding<>(target, source);\n"
         + "  }\n"
         + "}"
     );
@@ -47,17 +46,16 @@ public class UnbinderTest {
         + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
         + "import butterknife.internal.DebouncingOnClickListener;\n"
-        + "import butterknife.internal.Finder;\n"
+        + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public class Test_ViewBinding<T extends Test> implements Unbinder {\n"
         + "  protected T target;\n"
         + "  private View view1;\n"
-        + "  public Test_ViewBinding(final T target, Finder finder, Object source) {\n"
+        + "  public Test_ViewBinding(final T target, View source) {\n"
         + "    this.target = target;\n"
         + "    View view;\n"
-        + "    view = finder.findRequiredView(source, 1, \"field 'view', method 'doStuff', and method 'doMoreStuff'\");\n"
+        + "    view = Utils.findRequiredView(source, 1, \"field 'view', method 'doStuff', and method 'doMoreStuff'\");\n"
         + "    target.view = view;\n"
         + "    view1 = view;\n"
         + "    view.setOnClickListener(new DebouncingOnClickListener() {\n"
@@ -72,7 +70,7 @@ public class UnbinderTest {
         + "        return target.doMoreStuff();\n"
         + "      }\n"
         + "    });\n"
-        + "    target.view2 = finder.findRequiredView(source, 2, \"field 'view2'\");\n"
+        + "    target.view2 = Utils.findRequiredView(source, 2, \"field 'view2'\");\n"
         + "  }\n"
         + "  @Override\n"
         + "  public void unbind() {\n"
@@ -108,15 +106,14 @@ public class UnbinderTest {
 
     JavaFileObject binderSource = JavaFileObjects.forSourceString("test/Test_ViewBinder", ""
         + "package test;\n"
+        + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
-        + "import butterknife.internal.Finder;\n"
         + "import butterknife.internal.ViewBinder;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public final class Test_ViewBinder implements ViewBinder<Test> {\n"
         + "  @Override\n"
-        + "  public Unbinder bind(Finder finder, Test target, Object source) {\n"
-        + "    return new Test_ViewBinding<>(target, finder, source);\n"
+        + "  public Unbinder bind(Test target, View source) {\n"
+        + "    return new Test_ViewBinding<>(target, source);\n"
         + "  }\n"
         + "}"
     );
@@ -126,17 +123,15 @@ public class UnbinderTest {
         + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
         + "import butterknife.internal.DebouncingOnClickListener;\n"
-        + "import butterknife.internal.Finder;\n"
         + "import java.lang.IllegalStateException;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public class Test_ViewBinding<T extends Test> implements Unbinder {\n"
         + "  protected T target;\n"
         + "  private View view1;\n"
-        + "  public Test_ViewBinding(final T target, Finder finder, Object source) {\n"
+        + "  public Test_ViewBinding(final T target, View source) {\n"
         + "    this.target = target;\n"
         + "    View view;\n"
-        + "    view = finder.findOptionalView(source, 1);\n"
+        + "    view = source.findViewById(1);\n"
         + "    if (view != null) {\n"
         + "      view1 = view;\n"
         + "      view.setOnClickListener(new DebouncingOnClickListener() {\n"
@@ -192,15 +187,14 @@ public class UnbinderTest {
 
     JavaFileObject binder1Source = JavaFileObjects.forSourceString("test/Test_ViewBinder", ""
         + "package test;\n"
+        + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
-        + "import butterknife.internal.Finder;\n"
         + "import butterknife.internal.ViewBinder;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public final class Test_ViewBinder implements ViewBinder<Test> {\n"
         + "  @Override\n"
-        + "  public Unbinder bind(Finder finder, Test target, Object source) {\n"
-        + "    return new Test_ViewBinding<>(target, finder, source);\n"
+        + "  public Unbinder bind(Test target, View source) {\n"
+        + "    return new Test_ViewBinding<>(target, source);\n"
         + "  }\n"
         + "}"
     );
@@ -210,17 +204,16 @@ public class UnbinderTest {
         + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
         + "import butterknife.internal.DebouncingOnClickListener;\n"
-        + "import butterknife.internal.Finder;\n"
+        + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public class Test_ViewBinding<T extends Test> implements Unbinder {\n"
         + "  protected T target;\n"
         + "  private View view1;\n"
-        + "  public Test_ViewBinding(final T target, Finder finder, Object source) {\n"
+        + "  public Test_ViewBinding(final T target, View source) {\n"
         + "    this.target = target;\n"
         + "    View view;\n"
-        + "    view = finder.findRequiredView(source, 1, \"method 'doStuff1'\");\n"
+        + "    view = Utils.findRequiredView(source, 1, \"method 'doStuff1'\");\n"
         + "    view1 = view;\n"
         + "    view.setOnClickListener(new DebouncingOnClickListener() {\n"
         + "      @Override\n"
@@ -241,15 +234,14 @@ public class UnbinderTest {
 
     JavaFileObject binder2Source = JavaFileObjects.forSourceString("test/TestOne_ViewBinder", ""
         + "package test;\n"
+        + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
-        + "import butterknife.internal.Finder;\n"
         + "import butterknife.internal.ViewBinder;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public final class TestOne_ViewBinder implements ViewBinder<TestOne> {\n"
         + "  @Override\n"
-        + "  public Unbinder bind(Finder finder, TestOne target, Object source) {\n"
-        + "    return new TestOne_ViewBinding<>(target, finder, source);\n"
+        + "  public Unbinder bind(TestOne target, View source) {\n"
+        + "    return new TestOne_ViewBinding<>(target, source);\n"
         + "  }\n"
         + "}"
     );
@@ -258,15 +250,14 @@ public class UnbinderTest {
         + "package test;\n"
         + "import android.view.View;\n"
         + "import butterknife.internal.DebouncingOnClickListener;\n"
-        + "import butterknife.internal.Finder;\n"
-        + "import java.lang.Object;\n"
+        + "import butterknife.internal.Utils;\n"
         + "import java.lang.Override;\n"
         + "public class TestOne_ViewBinding<T extends TestOne> extends Test_ViewBinding<T> {\n"
         + "  private View view1;\n"
-        + "  public TestOne_ViewBinding(final T target, Finder finder, Object source) {\n"
-        + "    super(target, finder, source);\n"
+        + "  public TestOne_ViewBinding(final T target, View source) {\n"
+        + "    super(target, source);\n"
         + "    View view;\n"
-        + "    view = finder.findRequiredView(source, 1, \"method 'doStuff2'\");\n"
+        + "    view = Utils.findRequiredView(source, 1, \"method 'doStuff2'\");\n"
         + "    view1 = view;\n"
         + "    view.setOnClickListener(new DebouncingOnClickListener() {\n"
         + "      @Override\n"
@@ -311,15 +302,14 @@ public class UnbinderTest {
 
     JavaFileObject binder1Source = JavaFileObjects.forSourceString("test/Test_ViewBinder", ""
         + "package test;\n"
+        + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
-        + "import butterknife.internal.Finder;\n"
         + "import butterknife.internal.ViewBinder;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public final class Test_ViewBinder implements ViewBinder<Test> {\n"
         + "  @Override\n"
-        + "  public Unbinder bind(Finder finder, Test target, Object source) {\n"
-        + "    return new Test_ViewBinding<>(target, finder, source);\n"
+        + "  public Unbinder bind(Test target, View source) {\n"
+        + "    return new Test_ViewBinding<>(target, source);\n"
         + "  }\n"
         + "}"
     );
@@ -329,17 +319,16 @@ public class UnbinderTest {
         + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
         + "import butterknife.internal.DebouncingOnClickListener;\n"
-        + "import butterknife.internal.Finder;\n"
+        + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public class Test_ViewBinding<T extends Test> implements Unbinder {\n"
         + "  protected T target;\n"
         + "  private View view1;\n"
-        + "  public Test_ViewBinding(final T target, Finder finder, Object source) {\n"
+        + "  public Test_ViewBinding(final T target, View source) {\n"
         + "    this.target = target;\n"
         + "    View view;\n"
-        + "    view = finder.findRequiredView(source, 1, \"method 'doStuff1'\");\n"
+        + "    view = Utils.findRequiredView(source, 1, \"method 'doStuff1'\");\n"
         + "    view1 = view;\n"
         + "    view.setOnClickListener(new DebouncingOnClickListener() {\n"
         + "      @Override\n"
@@ -360,15 +349,14 @@ public class UnbinderTest {
 
     JavaFileObject binder2Source = JavaFileObjects.forSourceString("test/TestOne_ViewBinder", ""
         + "package test;\n"
+        + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
-        + "import butterknife.internal.Finder;\n"
         + "import butterknife.internal.ViewBinder;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public final class TestOne_ViewBinder implements ViewBinder<TestOne> {\n"
         + "  @Override\n"
-        + "  public Unbinder bind(Finder finder, TestOne target, Object source) {\n"
-        + "    return new TestOne_ViewBinding<>(target, finder, source);\n"
+        + "  public Unbinder bind(TestOne target, View source) {\n"
+        + "    return new TestOne_ViewBinding<>(target, source);\n"
         + "  }\n"
         + "}"
     );
@@ -377,15 +365,14 @@ public class UnbinderTest {
         + "package test;\n"
         + "import android.view.View;\n"
         + "import butterknife.internal.DebouncingOnClickListener;\n"
-        + "import butterknife.internal.Finder;\n"
-        + "import java.lang.Object;\n"
+        + "import butterknife.internal.Utils;\n"
         + "import java.lang.Override;\n"
         + "public class TestOne_ViewBinding<T extends TestOne> extends Test_ViewBinding<T> {\n"
         + "  private View view1;\n"
-        + "  public TestOne_ViewBinding(final T target, Finder finder, Object source) {\n"
-        + "    super(target, finder, source);\n"
+        + "  public TestOne_ViewBinding(final T target, View source) {\n"
+        + "    super(target, source);\n"
         + "    View view;\n"
-        + "    view = finder.findRequiredView(source, 1, \"method 'doStuff2'\");\n"
+        + "    view = Utils.findRequiredView(source, 1, \"method 'doStuff2'\");\n"
         + "    view1 = view;\n"
         + "    view.setOnClickListener(new DebouncingOnClickListener() {\n"
         + "      @Override\n"
@@ -431,15 +418,14 @@ public class UnbinderTest {
 
     JavaFileObject binder1Source = JavaFileObjects.forSourceString("test/Test_ViewBinder", ""
         + "package test;\n"
+        + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
-        + "import butterknife.internal.Finder;\n"
         + "import butterknife.internal.ViewBinder;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public final class Test_ViewBinder implements ViewBinder<Test> {\n"
         + "  @Override\n"
-        + "  public Unbinder bind(Finder finder, Test target, Object source) {\n"
-        + "    return new Test_ViewBinding<>(target, finder, source);\n"
+        + "  public Unbinder bind(Test target, View source) {\n"
+        + "    return new Test_ViewBinding<>(target, source);\n"
         + "  }\n"
         + "}"
     );
@@ -449,17 +435,16 @@ public class UnbinderTest {
         + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
         + "import butterknife.internal.DebouncingOnClickListener;\n"
-        + "import butterknife.internal.Finder;\n"
+        + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public class Test_ViewBinding<T extends Test> implements Unbinder {\n"
         + "  protected T target;\n"
         + "  private View view1;\n"
-        + "  public Test_ViewBinding(final T target, Finder finder, Object source) {\n"
+        + "  public Test_ViewBinding(final T target, View source) {\n"
         + "    this.target = target;\n"
         + "    View view;\n"
-        + "    view = finder.findRequiredView(source, 1, \"method 'doStuff1'\");\n"
+        + "    view = Utils.findRequiredView(source, 1, \"method 'doStuff1'\");\n"
         + "    view1 = view;\n"
         + "    view.setOnClickListener(new DebouncingOnClickListener() {\n"
         + "      @Override\n"
@@ -480,15 +465,14 @@ public class UnbinderTest {
 
     JavaFileObject binder2Source = JavaFileObjects.forSourceString("test/one/TestOne_ViewBinder", ""
         + "package test.one;\n"
+        + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
-        + "import butterknife.internal.Finder;\n"
         + "import butterknife.internal.ViewBinder;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public final class TestOne_ViewBinder implements ViewBinder<TestOne> {\n"
         + "  @Override\n"
-        + "  public Unbinder bind(Finder finder, TestOne target, Object source) {\n"
-        + "    return new TestOne_ViewBinding<>(target, finder, source);\n"
+        + "  public Unbinder bind(TestOne target, View source) {\n"
+        + "    return new TestOne_ViewBinding<>(target, source);\n"
         + "  }\n"
         + "}"
     );
@@ -498,16 +482,15 @@ public class UnbinderTest {
             + "package test.one;\n"
             + "import android.view.View;\n"
             + "import butterknife.internal.DebouncingOnClickListener;\n"
-            + "import butterknife.internal.Finder;\n"
-            + "import java.lang.Object;\n"
+            + "import butterknife.internal.Utils;\n"
             + "import java.lang.Override;\n"
             + "import test.Test_ViewBinding;\n"
             + "public class TestOne_ViewBinding<T extends TestOne> extends Test_ViewBinding<T> {\n"
             + "  private View view2;\n"
-            + "  public TestOne_ViewBinding(final T target, Finder finder, Object source) {\n"
-            + "    super(target, finder, source);\n"
+            + "  public TestOne_ViewBinding(final T target, View source) {\n"
+            + "    super(target, source);\n"
             + "    View view;\n"
-            + "    view = finder.findRequiredView(source, 2, \"method 'doStuff2'\");\n"
+            + "    view = Utils.findRequiredView(source, 2, \"method 'doStuff2'\");\n"
             + "    view2 = view;\n"
             + "    view.setOnClickListener(new DebouncingOnClickListener() {\n"
             + "      @Override\n"
@@ -558,15 +541,14 @@ public class UnbinderTest {
 
     JavaFileObject binder1Source = JavaFileObjects.forSourceString("test/Test_ViewBinder", ""
         + "package test;\n"
+        + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
-        + "import butterknife.internal.Finder;\n"
         + "import butterknife.internal.ViewBinder;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public final class Test_ViewBinder implements ViewBinder<Test> {\n"
         + "  @Override\n"
-        + "  public Unbinder bind(Finder finder, Test target, Object source) {\n"
-        + "    return new Test_ViewBinding<>(target, finder, source);\n"
+        + "  public Unbinder bind(Test target, View source) {\n"
+        + "    return new Test_ViewBinding<>(target, source);\n"
         + "  }\n"
         + "}"
     );
@@ -576,17 +558,16 @@ public class UnbinderTest {
         + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
         + "import butterknife.internal.DebouncingOnClickListener;\n"
-        + "import butterknife.internal.Finder;\n"
+        + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public class Test_ViewBinding<T extends Test> implements Unbinder {\n"
         + "  protected T target;\n"
         + "  private View view1;\n"
-        + "  public Test_ViewBinding(final T target, Finder finder, Object source) {\n"
+        + "  public Test_ViewBinding(final T target, View source) {\n"
         + "    this.target = target;\n"
         + "    View view;\n"
-        + "    view = finder.findRequiredView(source, 1, \"method 'doStuff1'\");\n"
+        + "    view = Utils.findRequiredView(source, 1, \"method 'doStuff1'\");\n"
         + "    view1 = view;\n"
         + "    view.setOnClickListener(new DebouncingOnClickListener() {\n"
         + "      @Override\n"
@@ -607,15 +588,14 @@ public class UnbinderTest {
 
     JavaFileObject binder2Source = JavaFileObjects.forSourceString("test/TestTwo_ViewBinder", ""
         + "package test;\n"
+        + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
-        + "import butterknife.internal.Finder;\n"
         + "import butterknife.internal.ViewBinder;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public final class TestTwo_ViewBinder implements ViewBinder<TestTwo> {\n"
         + "  @Override\n"
-        + "  public Unbinder bind(Finder finder, TestTwo target, Object source) {\n"
-        + "    return new TestTwo_ViewBinding<>(target, finder, source);\n"
+        + "  public Unbinder bind(TestTwo target, View source) {\n"
+        + "    return new TestTwo_ViewBinding<>(target, source);\n"
         + "  }\n"
         + "}"
     );
@@ -624,15 +604,14 @@ public class UnbinderTest {
         + "package test;\n"
         + "import android.view.View;\n"
         + "import butterknife.internal.DebouncingOnClickListener;\n"
-        + "import butterknife.internal.Finder;\n"
-        + "import java.lang.Object;\n"
+        + "import butterknife.internal.Utils;\n"
         + "import java.lang.Override;\n"
         + "public class TestTwo_ViewBinding<T extends TestTwo> extends Test_ViewBinding<T> {\n"
         + "  private View view1;\n"
-        + "  public TestTwo_ViewBinding(final T target, Finder finder, Object source) {\n"
-        + "    super(target, finder, source);\n"
+        + "  public TestTwo_ViewBinding(final T target, View source) {\n"
+        + "    super(target, source);\n"
         + "    View view;\n"
-        + "    view = finder.findRequiredView(source, 1, \"method 'doStuff2'\");\n"
+        + "    view = Utils.findRequiredView(source, 1, \"method 'doStuff2'\");\n"
         + "    view1 = view;\n"
         + "    view.setOnClickListener(new DebouncingOnClickListener() {\n"
         + "      @Override\n"
@@ -782,16 +761,15 @@ public class UnbinderTest {
         + "package test;\n"
         + "import android.content.Context;\n"
         + "import android.content.res.Resources;\n"
+        + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
-        + "import butterknife.internal.Finder;\n"
         + "import butterknife.internal.Utils;\n"
         + "import butterknife.internal.ViewBinder;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public final class A_ViewBinder implements ViewBinder<A> {\n"
         + "  @Override\n"
-        + "  public Unbinder bind(Finder finder, A target, Object source) {\n"
-        + "    Context context = finder.getContext(source);\n"
+        + "  public Unbinder bind(A target, View source) {\n"
+        + "    Context context = source.getContext();\n"
         + "    Resources res = context.getResources();\n"
         + "    Resources.Theme theme = context.getTheme();\n"
         + "    bindToTarget(target, res, theme);\n"
@@ -807,16 +785,15 @@ public class UnbinderTest {
         + "package test;\n"
         + "import android.content.Context;\n"
         + "import android.content.res.Resources;\n"
+        + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
-        + "import butterknife.internal.Finder;\n"
         + "import butterknife.internal.Utils;\n"
         + "import butterknife.internal.ViewBinder;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public final class B_ViewBinder implements ViewBinder<B> {\n"
         + "  @Override\n"
-        + "  public Unbinder bind(Finder finder, B target, Object source) {\n"
-        + "    Context context = finder.getContext(source);\n"
+        + "  public Unbinder bind(B target, View source) {\n"
+        + "    Context context = source.getContext();\n"
         + "    Resources res = context.getResources();\n"
         + "    Resources.Theme theme = context.getTheme();\n"
         + "    bindToTarget(target, res, theme);\n"
@@ -833,18 +810,17 @@ public class UnbinderTest {
         + "package test;\n"
         + "import android.content.Context;\n"
         + "import android.content.res.Resources;\n"
+        + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
-        + "import butterknife.internal.Finder;\n"
         + "import butterknife.internal.ViewBinder;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public final class C_ViewBinder implements ViewBinder<C> {\n"
         + "  @Override\n"
-        + "  public Unbinder bind(Finder finder, C target, Object source) {\n"
-        + "    Context context = finder.getContext(source);\n"
+        + "  public Unbinder bind(C target, View source) {\n"
+        + "    Context context = source.getContext();\n"
         + "    Resources res = context.getResources();\n"
         + "    Resources.Theme theme = context.getTheme();\n"
-        + "    return new C_ViewBinding<>(target, finder, source, res, theme);\n"
+        + "    return new C_ViewBinding<>(target, source, res, theme);\n"
         + "  }\n"
         + "}"
     );
@@ -852,18 +828,17 @@ public class UnbinderTest {
     JavaFileObject bindingCSource = JavaFileObjects.forSourceString("test/C_ViewBinding", ""
         + "package test;\n"
         + "import android.content.res.Resources;\n"
+        + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
-        + "import butterknife.internal.Finder;\n"
         + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public class C_ViewBinding<T extends C> implements Unbinder {\n"
         + "  protected T target;\n"
-        + "  public C_ViewBinding(T target, Finder finder, Object source, Resources res, Resources.Theme theme) {\n"
+        + "  public C_ViewBinding(T target, View source, Resources res, Resources.Theme theme) {\n"
         + "    this.target = target;\n"
         + "    B_ViewBinder.bindToTarget(target, res, theme);\n"
-        + "    target.button1 = finder.findRequiredView(source, android.R.id.button1, \"field 'button1'\");\n"
+        + "    target.button1 = Utils.findRequiredView(source, android.R.id.button1, \"field 'button1'\");\n"
         + "    target.transparentColor = Utils.getColor(res, theme, android.R.color.transparent);\n"
         + "  }\n"
         + "  @Override\n"
@@ -880,18 +855,17 @@ public class UnbinderTest {
         + "package test;\n"
         + "import android.content.Context;\n"
         + "import android.content.res.Resources;\n"
+        + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
-        + "import butterknife.internal.Finder;\n"
         + "import butterknife.internal.ViewBinder;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public final class D_ViewBinder implements ViewBinder<D> {\n"
         + "  @Override\n"
-        + "  public Unbinder bind(Finder finder, D target, Object source) {\n"
-        + "    Context context = finder.getContext(source);\n"
+        + "  public Unbinder bind(D target, View source) {\n"
+        + "    Context context = source.getContext();\n"
         + "    Resources res = context.getResources();\n"
         + "    Resources.Theme theme = context.getTheme();\n"
-        + "    return new D_ViewBinding<>(target, finder, source, res, theme);\n"
+        + "    return new D_ViewBinding<>(target, source, res, theme);\n"
         + "  }\n"
         + "}"
     );
@@ -899,12 +873,11 @@ public class UnbinderTest {
     JavaFileObject bindingDSource = JavaFileObjects.forSourceString("test/D_ViewBinding", ""
         + "package test;\n"
         + "import android.content.res.Resources;\n"
-        + "import butterknife.internal.Finder;\n"
+        + "import android.view.View;\n"
         + "import butterknife.internal.Utils;\n"
-        + "import java.lang.Object;\n"
         + "public class D_ViewBinding<T extends D> extends C_ViewBinding<T> {\n"
-        + "  public D_ViewBinding(T target, Finder finder, Object source, Resources res, Resources.Theme theme) {\n"
-        + "    super(target, finder, source, res, theme);\n"
+        + "  public D_ViewBinding(T target, View source, Resources res, Resources.Theme theme) {\n"
+        + "    super(target, source, res, theme);\n"
         + "    target.grayColor = Utils.getColor(res, theme, android.R.color.darker_gray);\n"
         + "  }\n"
         + "}"
@@ -914,18 +887,17 @@ public class UnbinderTest {
         + "package test;\n"
         + "import android.content.Context;\n"
         + "import android.content.res.Resources;\n"
+        + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
-        + "import butterknife.internal.Finder;\n"
         + "import butterknife.internal.ViewBinder;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public final class E_ViewBinder implements ViewBinder<E> {\n"
         + "  @Override\n"
-        + "  public Unbinder bind(Finder finder, E target, Object source) {\n"
-        + "    Context context = finder.getContext(source);\n"
+        + "  public Unbinder bind(E target, View source) {\n"
+        + "    Context context = source.getContext();\n"
         + "    Resources res = context.getResources();\n"
         + "    Resources.Theme theme = context.getTheme();\n"
-        + "    return new E_ViewBinding<>(target, finder, source, res, theme);\n"
+        + "    return new E_ViewBinding<>(target, source, res, theme);\n"
         + "  }\n"
         + "}"
     );
@@ -933,12 +905,11 @@ public class UnbinderTest {
     JavaFileObject bindingESource = JavaFileObjects.forSourceString("test/E_ViewBinding", ""
         + "package test;\n"
         + "import android.content.res.Resources;\n"
-        + "import butterknife.internal.Finder;\n"
+        + "import android.view.View;\n"
         + "import butterknife.internal.Utils;\n"
-        + "import java.lang.Object;\n"
         + "public class E_ViewBinding<T extends E> extends C_ViewBinding<T> {\n"
-        + "  public E_ViewBinding(T target, Finder finder, Object source, Resources res, Resources.Theme theme) {\n"
-        + "    super(target, finder, source, res, theme);\n"
+        + "  public E_ViewBinding(T target, View source, Resources res, Resources.Theme theme) {\n"
+        + "    super(target, source, res, theme);\n"
         + "    target.backgroundDarkColor = Utils.getColor(res, theme, android.R.color.background_dark);\n"
         + "  }\n"
         + "}"
@@ -948,18 +919,17 @@ public class UnbinderTest {
         + "package test;\n"
         + "import android.content.Context;\n"
         + "import android.content.res.Resources;\n"
+        + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
-        + "import butterknife.internal.Finder;\n"
         + "import butterknife.internal.ViewBinder;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public final class F_ViewBinder implements ViewBinder<F> {\n"
         + "  @Override\n"
-        + "  public Unbinder bind(Finder finder, F target, Object source) {\n"
-        + "    Context context = finder.getContext(source);\n"
+        + "  public Unbinder bind(F target, View source) {\n"
+        + "    Context context = source.getContext();\n"
         + "    Resources res = context.getResources();\n"
         + "    Resources.Theme theme = context.getTheme();\n"
-        + "    return new F_ViewBinding<>(target, finder, source, res, theme);\n"
+        + "    return new F_ViewBinding<>(target, source, res, theme);\n"
         + "  }\n"
         + "}"
     );
@@ -967,12 +937,11 @@ public class UnbinderTest {
     JavaFileObject bindingFSource = JavaFileObjects.forSourceString("test/F_ViewBinding", ""
         + "package test;\n"
         + "import android.content.res.Resources;\n"
-        + "import butterknife.internal.Finder;\n"
+        + "import android.view.View;\n"
         + "import butterknife.internal.Utils;\n"
-        + "import java.lang.Object;\n"
         + "public class F_ViewBinding<T extends F> extends D_ViewBinding<T> {\n"
-        + "  public F_ViewBinding(T target, Finder finder, Object source, Resources res, Resources.Theme theme) {\n"
-        + "    super(target, finder, source, res, theme);\n"
+        + "  public F_ViewBinding(T target, View source, Resources res, Resources.Theme theme) {\n"
+        + "    super(target, source, res, theme);\n"
         + "    target.backgroundLightColor = Utils.getColor(res, theme, android.R.color.background_light);\n"
         + "  }\n"
         + "}"
@@ -982,18 +951,17 @@ public class UnbinderTest {
         + "package test;\n"
         + "import android.content.Context;\n"
         + "import android.content.res.Resources;\n"
+        + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
-        + "import butterknife.internal.Finder;\n"
         + "import butterknife.internal.ViewBinder;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public final class G_ViewBinder implements ViewBinder<G> {\n"
         + "  @Override\n"
-        + "  public Unbinder bind(Finder finder, G target, Object source) {\n"
-        + "    Context context = finder.getContext(source);\n"
+        + "  public Unbinder bind(G target, View source) {\n"
+        + "    Context context = source.getContext();\n"
         + "    Resources res = context.getResources();\n"
         + "    Resources.Theme theme = context.getTheme();\n"
-        + "    return new G_ViewBinding<>(target, finder, source, res, theme);\n"
+        + "    return new G_ViewBinding<>(target, source, res, theme);\n"
         + "  }\n"
         + "}"
     );
@@ -1003,17 +971,15 @@ public class UnbinderTest {
         + "import android.content.res.Resources;\n"
         + "import android.view.View;\n"
         + "import butterknife.internal.DebouncingOnClickListener;\n"
-        + "import butterknife.internal.Finder;\n"
         + "import butterknife.internal.Utils;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public class G_ViewBinding<T extends G> extends E_ViewBinding<T> {\n"
         + "  private View view16908290;\n"
-        + "  public G_ViewBinding(final T target, Finder finder, Object source, Resources res, Resources.Theme theme) {\n"
-        + "    super(target, finder, source, res, theme);\n"
+        + "  public G_ViewBinding(final T target, View source, Resources res, Resources.Theme theme) {\n"
+        + "    super(target, source, res, theme);\n"
         + "    View view;\n"
-        + "    target.button2 = finder.findRequiredView(source, android.R.id.button2, \"field 'button2'\");\n"
-        + "    view = finder.findRequiredView(source, android.R.id.content, \"method 'onClick'\");\n"
+        + "    target.button2 = Utils.findRequiredView(source, android.R.id.button2, \"field 'button2'\");\n"
+        + "    view = Utils.findRequiredView(source, android.R.id.content, \"method 'onClick'\");\n"
         + "    view16908290 = view;\n"
         + "    view.setOnClickListener(new DebouncingOnClickListener() {\n"
         + "      @Override\n"
@@ -1038,18 +1004,17 @@ public class UnbinderTest {
         + "package test;\n"
         + "import android.content.Context;\n"
         + "import android.content.res.Resources;\n"
+        + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
-        + "import butterknife.internal.Finder;\n"
         + "import butterknife.internal.ViewBinder;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public final class H_ViewBinder implements ViewBinder<H> {\n"
         + "  @Override\n"
-        + "  public Unbinder bind(Finder finder, H target, Object source) {\n"
-        + "    Context context = finder.getContext(source);\n"
+        + "  public Unbinder bind(H target, View source) {\n"
+        + "    Context context = source.getContext();\n"
         + "    Resources res = context.getResources();\n"
         + "    Resources.Theme theme = context.getTheme();\n"
-        + "    return new H_ViewBinding<>(target, finder, source, res, theme);\n"
+        + "    return new H_ViewBinding<>(target, source, res, theme);\n"
         + "  }\n"
         + "}"
     );
@@ -1057,14 +1022,13 @@ public class UnbinderTest {
     JavaFileObject bindingHSource = JavaFileObjects.forSourceString("test/H_ViewBinding", ""
         + "package test;\n"
         + "import android.content.res.Resources;\n"
-        + "import butterknife.internal.Finder;\n"
+        + "import android.view.View;\n"
         + "import butterknife.internal.Utils;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public class H_ViewBinding<T extends H> extends G_ViewBinding<T> {\n"
-        + "  public H_ViewBinding(T target, Finder finder, Object source, Resources res, Resources.Theme theme) {\n"
-        + "    super(target, finder, source, res, theme);\n"
-        + "    target.button3 = finder.findRequiredView(source, android.R.id.button3, \"field 'button3'\");\n"
+        + "  public H_ViewBinding(T target, View source, Resources res, Resources.Theme theme) {\n"
+        + "    super(target, source, res, theme);\n"
+        + "    target.button3 = Utils.findRequiredView(source, android.R.id.button3, \"field 'button3'\");\n"
         + "    target.grayColor = Utils.getColor(res, theme, android.R.color.primary_text_dark);\n"
         + "  }\n"
         + "  @Override\n"
