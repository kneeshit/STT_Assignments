diff --git a/butterknife/src/test/java/butterknife/internal/OnPageChangeTest.java b/butterknife/src/test/java/butterknife/internal/OnPageChangeTest.java
new file mode 100644
index 0000000..270f121
--- /dev/null
+++ b/butterknife/src/test/java/butterknife/internal/OnPageChangeTest.java
@@ -0,0 +1,53 @@
+package butterknife.internal;
+
+import com.google.common.base.Joiner;
+import com.google.testing.compile.JavaFileObjects;
+import javax.tools.JavaFileObject;
+import org.junit.Test;
+
+import static butterknife.internal.ProcessorTestUtilities.butterknifeProcessors;
+import static com.google.testing.compile.JavaSourceSubjectFactory.javaSource;
+import static org.truth0.Truth.ASSERT;
+
+public class OnPageChangeTest {
+  @Test public void pageChange() {
+    JavaFileObject source = JavaFileObjects.forSourceString("test.Test", Joiner.on('\n').join(
+        "package test;",
+        "import android.app.Activity;",
+        "import butterknife.OnPageChange;",
+        "public class Test extends Activity {",
+        "  @OnPageChange(1) void doStuff() {}",
+        "}"
+    ));
+
+    JavaFileObject expectedSource = JavaFileObjects.forSourceString("test/Test$$ViewInjector",
+        Joiner.on('\n').join(
+            "package test;",
+            "import android.view.View;",
+            "import butterknife.ButterKnife.Finder;",
+            "public class Test$$ViewInjector {",
+            "  public static void inject(Finder finder, final test.Test target, Object source) {",
+            "    View view;",
+            "    view = finder.findRequiredView(source, 1, \"method 'doStuff'\");",
+            "    ((android.support.v4.view.ViewPager) view).setOnPageChangeListener(new android.support.v4.view.ViewPager.OnPageChangeListener() {",
+            "      @Override public void onPageSelected(int p0) {",
+            "        target.doStuff();",
+            "      }",
+            "      @Override public void onPageScrolled(int p0, float p1, int p2) {",
+            "      }",
+            "      @Override public void onPageScrollStateChanged(int p0) {",
+            "      }",
+            "    });",
+            "  }",
+            "  public static void reset(test.Test target) {",
+            "  }",
+            "}"
+        ));
+
+    ASSERT.about(javaSource()).that(source)
+        .processedWith(butterknifeProcessors())
+        .compilesWithoutError()
+        .and()
+        .generatesSources(expectedSource);
+  }
+}
