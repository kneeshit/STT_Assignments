diff --git a/butterknife/src/main/java/butterknife/ButterKnife.java b/butterknife/src/main/java/butterknife/ButterKnife.java
index 8a9e534..1cffa55 100644
--- a/butterknife/src/main/java/butterknife/ButterKnife.java
+++ b/butterknife/src/main/java/butterknife/ButterKnife.java
@@ -94,6 +94,15 @@ public final class ButterKnife {
       @Override public Context getContext(Object source) {
         return ((View) source).getContext();
       }
+
+      @Override protected String getResourceEntryName(Object source, int id) {
+        final View view = (View) source;
+        // In edit mode, getResourceEntryName() is unsupported due to use of BridgeResources
+        if (view.isInEditMode()) {
+          return "<unavailable while editing>";
+        }
+        return super.getResourceEntryName(source, id);
+      }
     },
     ACTIVITY {
       @Override protected View findView(Object source, int id) {
@@ -136,7 +145,7 @@ public final class ButterKnife {
     public <T> T findRequiredView(Object source, int id, String who) {
       T view = findOptionalView(source, id, who);
       if (view == null) {
-        String name = getContext(source).getResources().getResourceEntryName(id);
+        String name = getResourceEntryName(source, id);
         throw new IllegalStateException("Required view '"
             + name
             + "' with ID "
@@ -161,7 +170,7 @@ public final class ButterKnife {
         if (who == null) {
           throw new AssertionError();
         }
-        String name = view.getResources().getResourceEntryName(id);
+        String name = getResourceEntryName(view, id);
         throw new IllegalStateException("View '"
             + name
             + "' with ID "
@@ -189,6 +198,10 @@ public final class ButterKnife {
       }
     }
 
+    protected String getResourceEntryName(Object source, int id) {
+      return getContext(source).getResources().getResourceEntryName(id);
+    }
+
     protected abstract View findView(Object source, int id);
 
     public abstract Context getContext(Object source);
