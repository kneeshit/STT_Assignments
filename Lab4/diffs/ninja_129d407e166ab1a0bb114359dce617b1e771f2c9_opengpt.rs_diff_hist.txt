diff --git a/examples/opengpt.rs b/examples/opengpt.rs
index 981e4d0..54954d0 100644
--- a/examples/opengpt.rs
+++ b/examples/opengpt.rs
@@ -41,12 +41,12 @@ async fn main() -> anyhow::Result<()> {
         .model(model[0])
         .message_id(&message_id)
         .parent_message_id(&parent_message_id)
-        .prompt("Zig Example")
+        .prompt("Rust Example")
         .build()?;
 
-    let mut resp: openai::api::opengpt::PostConvoStreamResponse = api
+    let mut resp = api
         .post_conversation(PostConvoRequest::try_from(req)?)
-        .await?;
+        .await;
 
     let mut previous_message = String::new();
     let mut out: tokio::io::Stdout = tokio::io::stdout();
@@ -54,6 +54,7 @@ async fn main() -> anyhow::Result<()> {
     let mut end_message_id: Option<String> = None;
     let mut end_turn: Option<bool> = None;
     while let Some(body) = resp.next().await {
+        if let Ok(body) = body {
             if conversation_id.is_none() {
                 conversation_id = Some(body.conversation_id.to_string())
             }
@@ -76,6 +77,7 @@ async fn main() -> anyhow::Result<()> {
             out.flush().await?;
             previous_message = message.to_string();
         }
+    }
 
     let conversation_id = conversation_id.unwrap_or_default();
     let end_message_id = end_message_id.unwrap_or_default();
@@ -115,8 +117,9 @@ async fn main() -> anyhow::Result<()> {
 
         let mut resp = api
             .post_conversation(PostConvoRequest::try_from(req)?)
-            .await?;
+            .await;
         while let Some(body) = resp.next().await {
+            if let Ok(body) = body {
                 let message = &body.message()[0];
                 if message.starts_with(&previous_message) {
                     let new_chars = message.trim_start_matches(&previous_message);
@@ -128,6 +131,7 @@ async fn main() -> anyhow::Result<()> {
                 previous_message = message.to_string();
             }
         }
+    }
 
     // get conversation list
     // let req = req::GetConvoRequestBuilder::default()
