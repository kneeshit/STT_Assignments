diff --git a/butterknife-compiler/src/test/java/butterknife/BindViewTest.java b/butterknife-compiler/src/test/java/butterknife/BindViewTest.java
index 2748f1e..286af2b 100644
--- a/butterknife-compiler/src/test/java/butterknife/BindViewTest.java
+++ b/butterknife-compiler/src/test/java/butterknife/BindViewTest.java
@@ -90,18 +90,18 @@ public class BindViewTest {
         + "import java.lang.IllegalStateException;\n"
         + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
-        + "public final class Test$$ViewBinder<T extends Test> implements ViewBinder<T> {\n"
+        + "public final class Test$$ViewBinder implements ViewBinder<Test> {\n"
         + "  @Override\n"
-        + "  public Unbinder bind(final Finder finder, final T target, Object source) {\n"
+        + "  public Unbinder bind(final Finder finder, final Test target, Object source) {\n"
         + "    InnerUnbinder unbinder = new InnerUnbinder(target);\n"
         + "    View view;\n"
         + "    view = finder.findRequiredView(source, 1, \"field 'thing'\");\n"
         + "    target.thing = view;\n"
         + "    return unbinder;\n"
         + "  }\n"
-        + "  protected static final class InnerUnbinder<T extends Test> implements Unbinder {\n"
-        + "    private T target;\n"
-        + "    protected InnerUnbinder(T target) {\n"
+        + "  protected static final class InnerUnbinder implements Unbinder {\n"
+        + "    private Test target;\n"
+        + "    protected InnerUnbinder(Test target) {\n"
         + "      this.target = target;\n"
         + "    }\n"
         + "    @Override\n"
@@ -186,9 +186,9 @@ public class BindViewTest {
         + "import butterknife.internal.Finder;\n"
         + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
-        + "public final class Test$$ViewBinder<T extends Test> extends Base$$ViewBinder<T> {\n"
+        + "public final class Test$$ViewBinder extends Base$$ViewBinder<Test> {\n"
         + "  @Override\n"
-        + "  public Unbinder bind(final Finder finder, final T target, Object source) {\n"
+        + "  public Unbinder bind(final Finder finder, final Test target, Object source) {\n"
         + "    InnerUnbinder unbinder = (InnerUnbinder) super.bind(finder, target, source);\n"
         + "    View view;\n"
         + "    view = finder.findRequiredView(source, 1, \"field 'thing'\");\n"
@@ -196,15 +196,15 @@ public class BindViewTest {
         + "    return unbinder;\n"
         + "  }\n"
         + "  @Override\n"
-        + "  protected InnerUnbinder<T> createUnbinder(T target) {\n"
+        + "  protected InnerUnbinder createUnbinder(Test target) {\n"
         + "    return new InnerUnbinder(target);\n"
         + "  }\n"
-        + "  protected static final class InnerUnbinder<T extends Test> extends Base$$ViewBinder.InnerUnbinder<T> {\n"
-        + "    protected InnerUnbinder(T target) {\n"
+        + "  protected static final class InnerUnbinder extends Base$$ViewBinder.InnerUnbinder<Test> {\n"
+        + "    protected InnerUnbinder(Test target) {\n"
         + "      super(target);\n"
         + "    }\n"
         + "    @Override\n"
-        + "    protected void unbind(T target) {\n"
+        + "    protected void unbind(Test target) {\n"
         + "      super.unbind(target);\n"
         + "      target.thing = null;\n"
         + "    }\n"
