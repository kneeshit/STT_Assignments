diff --git a/openai/src/api/platform/v1/resources/moderation.rs b/openai/src/api/platform/v1/resources/moderation.rs
new file mode 100644
index 0000000..9559df8
--- /dev/null
+++ b/openai/src/api/platform/v1/resources/moderation.rs
@@ -0,0 +1,51 @@
+use serde::{Deserialize, Serialize};
+
+#[derive(Serialize, Debug, Clone)]
+pub struct ModerationParameters {
+    pub input: String,
+    pub model: String,
+}
+
+#[derive(Serialize, Deserialize, Debug, Clone)]
+pub struct ModerationResponse {
+    pub id: String,
+    pub model: String,
+    pub results: Vec<Results>,
+}
+
+#[derive(Serialize, Deserialize, Debug, Clone)]
+pub struct Results {
+    pub categories: Categories,
+    pub category_scores: CategoryScores,
+    pub flagged: bool,
+}
+
+#[derive(Serialize, Deserialize, Debug, Clone)]
+pub struct Categories {
+    pub hate: bool,
+    #[serde(rename = "hate/threatening")]
+    pub hate_threatening: bool,
+    #[serde(rename = "self-harm")]
+    pub self_harm: bool,
+    pub sexual: bool,
+    #[serde(rename = "sexual/minors")]
+    pub sexual_minors: bool,
+    pub violence: bool,
+    #[serde(rename = "violence/graphic")]
+    pub violence_graphic: bool,
+}
+
+#[derive(Serialize, Deserialize, Debug, Clone)]
+pub struct CategoryScores {
+    pub hate: f64,
+    #[serde(rename = "hate/threatening")]
+    pub hate_threatening: f64,
+    #[serde(rename = "self-harm")]
+    pub self_harm: f64,
+    pub sexual: f64,
+    #[serde(rename = "sexual/minors")]
+    pub sexual_minors: f64,
+    pub violence: f64,
+    #[serde(rename = "violence/graphic")]
+    pub violence_graphic: f64,
+}
