diff --git a/openai/src/auth/provide/web.rs b/openai/src/auth/provide/web.rs
index 202782c..a53a03a 100644
--- a/openai/src/auth/provide/web.rs
+++ b/openai/src/auth/provide/web.rs
@@ -2,7 +2,7 @@ use crate::{
     auth::{
         model::{self, AuthStrategy},
         provide::AuthenticateData,
-        AuthClient, OPENAI_OAUTH_URL,
+        AuthClient, API_AUTH_SESSION_COOKIE_KEY, OPENAI_OAUTH_URL,
     },
     error::AuthError,
 };
@@ -252,9 +252,19 @@ impl WebAuthProvider {
             .await
             .map_err(AuthError::FailedRequest)?;
         match resp.status() {
-            StatusCode::OK => Ok(model::AccessToken::Session(
-                resp.json::<model::SessionAccessToken>().await?,
-            )),
+            StatusCode::OK => {
+                let c = resp
+                    .cookies()
+                    .find(|c| c.name().eq(API_AUTH_SESSION_COOKIE_KEY))
+                    .ok_or_else(|| AuthError::FailedAuthSessionCookie)?;
+                let session = model::Session {
+                    value: c.value().to_owned(),
+                    expires: c.expires(),
+                };
+                let mut session_access_token = resp.json::<model::SessionAccessToken>().await?;
+                session_access_token.session = Some(session);
+                Ok(model::AccessToken::Session(session_access_token))
+            }
             StatusCode::TOO_MANY_REQUESTS => {
                 bail!(AuthError::TooManyRequests("Too Many Requests".to_owned()))
             }
