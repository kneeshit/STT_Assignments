diff --git a/butterknife-compiler/src/test/java/butterknife/OnItemSelectedTest.java b/butterknife-compiler/src/test/java/butterknife/OnItemSelectedTest.java
index a7d6988..9e43ae6 100644
--- a/butterknife-compiler/src/test/java/butterknife/OnItemSelectedTest.java
+++ b/butterknife-compiler/src/test/java/butterknife/OnItemSelectedTest.java
@@ -22,16 +22,14 @@ public class OnItemSelectedTest {
 
     JavaFileObject binderSource = JavaFileObjects.forSourceString("test/Test_ViewBinder", ""
         + "package test;\n"
-        + "\n"
+        + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
-        + "import butterknife.internal.Finder;\n"
         + "import butterknife.internal.ViewBinder;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public final class Test_ViewBinder implements ViewBinder<Test> {\n"
         + "  @Override\n"
-        + "  public Unbinder bind(Finder finder, Test target, Object source) {\n"
-        + "    return new Test_ViewBinding<>(target, finder, source);\n"
+        + "  public Unbinder bind(Test target, View source) {\n"
+        + "    return new Test_ViewBinding<>(target, source);\n"
         + "  }\n"
         + "}"
     );
@@ -42,17 +40,16 @@ public class OnItemSelectedTest {
         + "import android.view.View;\n"
         + "import android.widget.AdapterView;\n"
         + "import butterknife.Unbinder;\n"
-        + "import butterknife.internal.Finder;\n"
+        + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public class Test_ViewBinding<T extends Test> implements Unbinder {\n"
         + "  protected T target;\n"
         + "  private View view1;\n"
-        + "  public Test_ViewBinding(final T target, Finder finder, Object source) {\n"
+        + "  public Test_ViewBinding(final T target, View source) {\n"
         + "    this.target = target;\n"
         + "    View view;\n"
-        + "    view = finder.findRequiredView(source, 1, \"method 'doStuff'\");\n"
+        + "    view = Utils.findRequiredView(source, 1, \"method 'doStuff'\");\n"
         + "    view1 = view;\n"
         + "    ((AdapterView<?>) view).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\n"
         + "      @Override\n"
@@ -95,15 +92,14 @@ public class OnItemSelectedTest {
 
     JavaFileObject binderSource = JavaFileObjects.forSourceString("test/Test_ViewBinder", ""
         + "package test;\n"
+        + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
-        + "import butterknife.internal.Finder;\n"
         + "import butterknife.internal.ViewBinder;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public final class Test_ViewBinder implements ViewBinder<Test> {\n"
         + "  @Override\n"
-        + "  public Unbinder bind(Finder finder, Test target, Object source) {\n"
-        + "    return new Test_ViewBinding<>(target, finder, source);\n"
+        + "  public Unbinder bind(Test target, View source) {\n"
+        + "    return new Test_ViewBinding<>(target, source);\n"
         + "  }\n"
         + "}"
     );
@@ -113,17 +109,16 @@ public class OnItemSelectedTest {
         + "import android.view.View;\n"
         + "import android.widget.AdapterView;\n"
         + "import butterknife.Unbinder;\n"
-        + "import butterknife.internal.Finder;\n"
+        + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public class Test_ViewBinding<T extends Test> implements Unbinder {\n"
         + "  protected T target;\n"
         + "  private View view1;\n"
-        + "  public Test_ViewBinding(final T target, Finder finder, Object source) {\n"
+        + "  public Test_ViewBinding(final T target, View source) {\n"
         + "    this.target = target;\n"
         + "    View view;\n"
-        + "    view = finder.findRequiredView(source, 1, \"method 'doStuff'\");\n"
+        + "    view = Utils.findRequiredView(source, 1, \"method 'doStuff'\");\n"
         + "    view1 = view;\n"
         + "    ((AdapterView<?>) view).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\n"
         + "      @Override\n"
@@ -168,15 +163,14 @@ public class OnItemSelectedTest {
 
     JavaFileObject binderSource = JavaFileObjects.forSourceString("test/Test_ViewBinder", ""
         + "package test;\n"
+        + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
-        + "import butterknife.internal.Finder;\n"
         + "import butterknife.internal.ViewBinder;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public final class Test_ViewBinder implements ViewBinder<Test> {\n"
         + "  @Override\n"
-        + "  public Unbinder bind(Finder finder, Test target, Object source) {\n"
-        + "    return new Test_ViewBinding<>(target, finder, source);\n"
+        + "  public Unbinder bind(Test target, View source) {\n"
+        + "    return new Test_ViewBinding<>(target, source);\n"
         + "  }\n"
         + "}"
     );
@@ -186,17 +180,16 @@ public class OnItemSelectedTest {
         + "import android.view.View;\n"
         + "import android.widget.AdapterView;\n"
         + "import butterknife.Unbinder;\n"
-        + "import butterknife.internal.Finder;\n"
+        + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public class Test_ViewBinding<T extends Test> implements Unbinder {\n"
         + "  protected T target;\n"
         + "  private View view1;\n"
-        + "  public Test_ViewBinding(final T target, Finder finder, Object source) {\n"
+        + "  public Test_ViewBinding(final T target, View source) {\n"
         + "    this.target = target;\n"
         + "    View view;\n"
-        + "    view = finder.findRequiredView(source, 1, \"method 'onItemSelected' and method 'onNothingSelected'\");\n"
+        + "    view = Utils.findRequiredView(source, 1, \"method 'onItemSelected' and method 'onNothingSelected'\");\n"
         + "    view1 = view;\n"
         + "    ((AdapterView<?>) view).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\n"
         + "      @Override\n"
@@ -242,15 +235,14 @@ public class OnItemSelectedTest {
 
     JavaFileObject binderSource = JavaFileObjects.forSourceString("test/Test_ViewBinder", ""
         + "package test;\n"
+        + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
-        + "import butterknife.internal.Finder;\n"
         + "import butterknife.internal.ViewBinder;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public final class Test_ViewBinder implements ViewBinder<Test> {\n"
         + "  @Override\n"
-        + "  public Unbinder bind(Finder finder, Test target, Object source) {\n"
-        + "    return new Test_ViewBinding<>(target, finder, source);\n"
+        + "  public Unbinder bind(Test target, View source) {\n"
+        + "    return new Test_ViewBinding<>(target, source);\n"
         + "  }\n"
         + "}"
     );
@@ -260,19 +252,18 @@ public class OnItemSelectedTest {
         + "import android.view.View;\n"
         + "import android.widget.AdapterView;\n"
         + "import butterknife.Unbinder;\n"
-        + "import butterknife.internal.Finder;\n"
+        + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public class Test_ViewBinding<T extends Test> implements Unbinder {\n"
         + "  protected T target;\n"
         + "  private View view1;\n"
         + "  private View view2;\n"
         + "  private View view3;\n"
-        + "  public Test_ViewBinding(final T target, Finder finder, Object source) {\n"
+        + "  public Test_ViewBinding(final T target, View source) {\n"
         + "    this.target = target;\n"
         + "    View view;\n"
-        + "    view = finder.findRequiredView(source, 1, \"method 'onItemSelected' and method 'onNothingSelected'\");\n"
+        + "    view = Utils.findRequiredView(source, 1, \"method 'onItemSelected' and method 'onNothingSelected'\");\n"
         + "    view1 = view;\n"
         + "    ((AdapterView<?>) view).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\n"
         + "      @Override\n"
@@ -284,7 +275,7 @@ public class OnItemSelectedTest {
         + "        target.onNothingSelected();\n"
         + "      }\n"
         + "    });\n"
-        + "    view = finder.findRequiredView(source, 2, \"method 'onItemSelected'\");\n"
+        + "    view = Utils.findRequiredView(source, 2, \"method 'onItemSelected'\");\n"
         + "    view2 = view;\n"
         + "    ((AdapterView<?>) view).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\n"
         + "      @Override\n"
@@ -295,7 +286,7 @@ public class OnItemSelectedTest {
         + "      public void onNothingSelected(AdapterView<?> p0) {\n"
         + "      }\n"
         + "    });\n"
-        + "    view = finder.findRequiredView(source, 3, \"method 'onNothingSelected'\");\n"
+        + "    view = Utils.findRequiredView(source, 3, \"method 'onNothingSelected'\");\n"
         + "    view3 = view;\n"
         + "    ((AdapterView<?>) view).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\n"
         + "      @Override\n"
