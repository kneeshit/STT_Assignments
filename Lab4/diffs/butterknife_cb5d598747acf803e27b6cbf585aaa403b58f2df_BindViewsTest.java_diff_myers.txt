diff --git a/butterknife-compiler/src/test/java/butterknife/BindViewsTest.java b/butterknife-compiler/src/test/java/butterknife/BindViewsTest.java
index 47d8750..1a85c4e 100644
--- a/butterknife-compiler/src/test/java/butterknife/BindViewsTest.java
+++ b/butterknife-compiler/src/test/java/butterknife/BindViewsTest.java
@@ -56,7 +56,7 @@ public class BindViewsTest {
         + "    bindToTarget(target, finder, source);\n"
         + "    return new InnerUnbinder(target);\n"
         + "  }\n"
-        + "  protected static void bindToTarget(final Test target, Finder finder, Object source) {\n"
+        + "  protected static void bindToTarget(Test target, Finder finder, Object source) {\n"
         + "    View view;\n"
         + "    target.thing = Utils.arrayOf(\n"
         + "        finder.<View>findRequiredView(source, 1, \"field 'thing'\"), \n"
@@ -115,7 +115,7 @@ public class BindViewsTest {
         + "    bindToTarget(target, finder, source);\n"
         + "    return new InnerUnbinder(target);\n"
         + "  }\n"
-        + "  protected static void bindToTarget(final Test target, Finder finder, Object source) {\n"
+        + "  protected static void bindToTarget(Test target, Finder finder, Object source) {\n"
         + "    View view;\n"
         + "    target.thing = Utils.arrayOf(\n"
         + "        finder.<View>findRequiredView(source, 1, \"field 'thing'\"), \n"
@@ -175,7 +175,7 @@ public class BindViewsTest {
         + "    bindToTarget(target, finder, source);\n"
         + "    return new InnerUnbinder(target);\n"
         + "  }\n"
-        + "  protected static void bindToTarget(final Test target, Finder finder, Object source) {\n"
+        + "  protected static void bindToTarget(Test target, Finder finder, Object source) {\n"
         + "    View view;\n"
         + "    target.thing = Utils.arrayOf(\n"
         + "        finder.<TextView>findRequiredView(source, 1, \"field 'thing'\"), \n"
@@ -235,7 +235,7 @@ public class BindViewsTest {
         + "    bindToTarget(target, finder, source);\n"
         + "    return new InnerUnbinder(target);\n"
         + "  }\n"
-        + "  protected static void bindToTarget(final Test target, Finder finder, Object source) {\n"
+        + "  protected static void bindToTarget(Test target, Finder finder, Object source) {\n"
         + "    View view;\n"
         + "    target.thing = Utils.listOf(\n"
         + "        finder.<View>findRequiredView(source, 1, \"field 'thing'\"), \n"
@@ -295,7 +295,7 @@ public class BindViewsTest {
         + "    bindToTarget(target, finder, source);\n"
         + "    return new InnerUnbinder(target);\n"
         + "  }\n"
-        + "  protected static void bindToTarget(final Test target, Finder finder, Object source) {\n"
+        + "  protected static void bindToTarget(Test target, Finder finder, Object source) {\n"
         + "    View view;\n"
         + "    target.thing = Utils.listOf(\n"
         + "        finder.<Test.TestInterface>findRequiredView(source, 1, \"field 'thing'\"), \n"
@@ -355,7 +355,7 @@ public class BindViewsTest {
         + "    bindToTarget(target, finder, source);\n"
         + "    return new InnerUnbinder(target);\n"
         + "  }\n"
-        + "  protected static void bindToTarget(final Test target, Finder finder, Object source) {\n"
+        + "  protected static void bindToTarget(Test target, Finder finder, Object source) {\n"
         + "    View view;\n"
         + "    target.thing = Utils.listOf(\n"
         + "        finder.<View>findRequiredView(source, 1, \"field 'thing'\"), \n"
@@ -416,7 +416,7 @@ public class BindViewsTest {
         + "    bindToTarget(target, finder, source);\n"
         + "    return new InnerUnbinder(target);\n"
         + "  }\n"
-        + "  protected static void bindToTarget(final Test target, Finder finder, Object source) {\n"
+        + "  protected static void bindToTarget(Test target, Finder finder, Object source) {\n"
         + "    View view;\n"
         + "    target.thing = Utils.listOf(\n"
         + "        finder.<View>findOptionalView(source, 1, \"field 'thing'\"), \n"
