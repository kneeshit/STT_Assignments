diff --git a/butterknife-compiler/src/test/java/butterknife/BindViewTest.java b/butterknife-compiler/src/test/java/butterknife/BindViewTest.java
index eb09303..e5f23c2 100644
--- a/butterknife-compiler/src/test/java/butterknife/BindViewTest.java
+++ b/butterknife-compiler/src/test/java/butterknife/BindViewTest.java
@@ -39,7 +39,7 @@ public class BindViewTest {
         + "    bindToTarget(target, finder, source);\n"
         + "    return new InnerUnbinder(target);\n"
         + "  }\n"
-        + "  protected static void bindToTarget(final Test target, Finder finder, Object source) {\n"
+        + "  protected static void bindToTarget(Test target, Finder finder, Object source) {\n"
         + "    View view;\n"
         + "    view = finder.findRequiredView(source, 1, \"field 'thing'\");\n"
         + "    target.thing = view;\n"
@@ -156,7 +156,7 @@ public class BindViewTest {
         + "    bindToTarget(target, finder, source);\n"
         + "    return new InnerUnbinder(target);\n"
         + "  }\n"
-        + "  protected static void bindToTarget(final Base target, Finder finder, Object source) {\n"
+        + "  protected static void bindToTarget(Base target, Finder finder, Object source) {\n"
         + "    View view;\n"
         + "    view = finder.findRequiredView(source, 1, \"field 'thing'\");\n"
         + "    target.thing = view;\n"
@@ -244,7 +244,7 @@ public class BindViewTest {
         + "    bindToTarget(target, finder, source);\n"
         + "    return new InnerUnbinder(target);\n"
         + "  }\n"
-        + "  protected static void bindToTarget(final Outer.Test target, Finder finder, Object source) {\n"
+        + "  protected static void bindToTarget(Outer.Test target, Finder finder, Object source) {\n"
         + "    View view;\n"
         + "    view = finder.findRequiredView(source, 1, \"field 'thing'\");\n"
         + "    target.thing = view;\n"
@@ -301,7 +301,7 @@ public class BindViewTest {
         + "    bindToTarget(target, finder, source);\n"
         + "    return new InnerUnbinder(target);\n"
         + "  }\n"
-        + "  protected static void bindToTarget(final Test target, Finder finder, Object source) {\n"
+        + "  protected static void bindToTarget(Test target, Finder finder, Object source) {\n"
         + "    View view;\n"
         + "    view = finder.findRequiredView(source, 1, \"field 'thing'\");\n"
         + "    target.thing = view;\n"
@@ -358,7 +358,7 @@ public class BindViewTest {
         + "    bindToTarget(target, finder, source);\n"
         + "    return new InnerUnbinder(target);\n"
         + "  }\n"
-        + "  protected static void bindToTarget(final Test target, Finder finder, Object source) {\n"
+        + "  protected static void bindToTarget(Test target, Finder finder, Object source) {\n"
         + "    View view;\n"
         + "    view = finder.findRequiredView(source, 1, \"field 'thing'\");\n"
         + "    target.thing = finder.castView(view, 1, \"field 'thing'\");\n"
@@ -415,7 +415,7 @@ public class BindViewTest {
         + "    bindToTarget(target, finder, source);\n"
         + "    return new InnerUnbinder(target);\n"
         + "  }\n"
-        + "  protected static void bindToTarget(final Test target, Finder finder, Object source) {\n"
+        + "  protected static void bindToTarget(Test target, Finder finder, Object source) {\n"
         + "    View view;\n"
         + "    view = finder.findRequiredView(source, 1, \"field 'thing'\");\n"
         + "    target.thing = finder.castView(view, 1, \"field 'thing'\");\n"
@@ -559,7 +559,7 @@ public class BindViewTest {
         + "    bindToTarget(target, finder, source);\n"
         + "    return new InnerUnbinder(target);\n"
         + "  }\n"
-        + "  protected static void bindToTarget(final Test target, Finder finder, Object source) {\n"
+        + "  protected static void bindToTarget(Test target, Finder finder, Object source) {\n"
         + "    View view;\n"
         + "    view = finder.findOptionalView(source, 1, null);\n"
         + "    target.view = view;\n"
@@ -620,7 +620,7 @@ public class BindViewTest {
         + "    bindToTarget(target, finder, source);\n"
         + "    return new InnerUnbinder(target);\n"
         + "  }\n"
-        + "  protected static void bindToTarget(final Test target, Finder finder, Object source) {\n"
+        + "  protected static void bindToTarget(Test target, Finder finder, Object source) {\n"
         + "    View view;\n"
         + "    view = finder.findRequiredView(source, 1, \"field 'view'\");\n"
         + "    target.view = view;\n"
@@ -656,7 +656,7 @@ public class BindViewTest {
         + "    bindToTarget(target, finder, source);\n"
         + "    return new InnerUnbinder(target);\n"
         + "  }\n"
-        + "  protected static void bindToTarget(final TestOne target, Finder finder, Object source) {\n"
+        + "  protected static void bindToTarget(TestOne target, Finder finder, Object source) {\n"
         + "    Test$$ViewBinder.bindToTarget(target, finder, source);\n"
         + "    View view;\n"
         + "    view = finder.findRequiredView(source, 1, \"field 'thing'\");\n"
@@ -713,7 +713,7 @@ public class BindViewTest {
         + "    bindToTarget(target, finder, source);\n"
         + "    return new InnerUnbinder(target);\n"
         + "  }\n"
-        + "  protected static void bindToTarget(final Test target, Finder finder, Object source) {\n"
+        + "  protected static void bindToTarget(Test target, Finder finder, Object source) {\n"
         + "    View view;\n"
         + "    view = finder.findRequiredView(source, 1, \"field 'view'\");\n"
         + "    target.view = view;\n"
@@ -749,7 +749,7 @@ public class BindViewTest {
         + "    bindToTarget(target, finder, source);\n"
         + "    return new InnerUnbinder(target);\n"
         + "  }\n"
-        + "  protected static void bindToTarget(final TestOne target, Finder finder, Object source) {\n"
+        + "  protected static void bindToTarget(TestOne target, Finder finder, Object source) {\n"
         + "    Test$$ViewBinder.bindToTarget(target, finder, source);\n"
         + "    View view;\n"
         + "    view = finder.findRequiredView(source, 1, \"field 'thing'\");\n"
