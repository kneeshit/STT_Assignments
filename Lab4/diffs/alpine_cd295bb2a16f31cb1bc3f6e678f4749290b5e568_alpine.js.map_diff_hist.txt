diff --git a/dist/alpine.js.map b/dist/alpine.js.map
index 923e947e..61b6dced 100644
--- a/dist/alpine.js.map
+++ b/dist/alpine.js.map
@@ -1 +1 @@
-{"version":3,"file":"alpine.js","sources":["../src/utils.js","../src/directives/for.js","../src/directives/bind.js","../src/directives/on.js","../src/directives/model.js","../src/component.js","../src/directives/show.js","../src/directives/if.js","../src/index.js"],"sourcesContent":["\n// Thanks @stimulus:\n// https://github.com/stimulusjs/stimulus/blob/master/packages/%40stimulus/core/src/application.ts\nexport function domReady() {\n    return new Promise(resolve => {\n        if (document.readyState == \"loading\") {\n            document.addEventListener(\"DOMContentLoaded\", resolve)\n        } else {\n            resolve()\n        }\n    })\n}\n\nexport function arrayUnique(array) {\n    var a = array.concat();\n    for(var i=0; i<a.length; ++i) {\n        for(var j=i+1; j<a.length; ++j) {\n            if(a[i] === a[j])\n                a.splice(j--, 1);\n        }\n    }\n\n    return a;\n}\n\nexport function isTesting() {\n    return navigator.userAgent, navigator.userAgent.includes(\"Node.js\")\n        || navigator.userAgent.includes(\"jsdom\")\n}\n\nexport function kebabCase(subject) {\n    return subject.replace(/([a-z])([A-Z])/g, '$1-$2').replace(/[_\\s]/, '-').toLowerCase()\n}\n\nexport function walk(el, callback) {\n    if (callback(el) === false) return\n\n    let node = el.firstElementChild\n\n    while (node) {\n        walk(node, callback)\n\n        node = node.nextElementSibling\n    }\n}\n\nexport function debounce(func, wait) {\n    var timeout\n    return function () {\n        var context = this, args = arguments\n        var later = function () {\n            timeout = null\n            func.apply(context, args)\n        }\n        clearTimeout(timeout)\n        timeout = setTimeout(later, wait)\n    }\n}\n\nexport function saferEval(expression, dataContext, additionalHelperVariables = {}) {\n    return (new Function(['$data', ...Object.keys(additionalHelperVariables)], `var result; with($data) { result = ${expression} }; return result`))(\n        dataContext, ...Object.values(additionalHelperVariables)\n    )\n}\n\nexport function saferEvalNoReturn(expression, dataContext, additionalHelperVariables = {}) {\n    return (new Function(['dataContext', ...Object.keys(additionalHelperVariables)], `with(dataContext) { ${expression} }`))(\n        dataContext, ...Object.values(additionalHelperVariables)\n    )\n}\n\nexport function isXAttr(attr) {\n    const name = replaceAtAndColonWithStandardSyntax(attr.name)\n\n    const xAttrRE = /x-(on|bind|data|text|html|model|if|for|show|cloak|transition|ref)/\n\n    return xAttrRE.test(name)\n}\n\nexport function getXAttrs(el, type) {\n    return Array.from(el.attributes)\n        .filter(isXAttr)\n        .map(attr => {\n            const name = replaceAtAndColonWithStandardSyntax(attr.name)\n\n            const typeMatch = name.match(/x-(on|bind|data|text|html|model|if|for|show|cloak|transition|ref)/)\n            const valueMatch = name.match(/:([a-zA-Z\\-:]+)/)\n            const modifiers = name.match(/\\.[^.\\]]+(?=[^\\]]*$)/g) || []\n\n            return {\n                type: typeMatch ? typeMatch[1] : null,\n                value: valueMatch ? valueMatch[1] : null,\n                modifiers: modifiers.map(i => i.replace('.', '')),\n                expression: attr.value,\n            }\n        })\n        .filter(i => {\n            // If no type is passed in for filtering, bypassfilter\n            if (! type) return true\n\n            return i.type === type\n        })\n}\n\nexport function replaceAtAndColonWithStandardSyntax(name) {\n    if (name.startsWith('@')) {\n        return name.replace('@', 'x-on:')\n    } else if (name.startsWith(':')) {\n        return name.replace(':', 'x-bind:')\n    }\n\n    return name\n}\n\nexport function transitionIn(el, callback, forceSkip = false) {\n    if (forceSkip) return callback()\n\n    const attrs = getXAttrs(el, 'transition')\n\n    if (attrs.length < 1) return callback()\n\n    const enter = (attrs.find(i => i.value === 'enter') || { expression: '' }).expression.split(' ').filter(i => i !== '')\n    const enterStart = (attrs.find(i => i.value === 'enter-start') || { expression: '' }).expression.split(' ').filter(i => i !== '')\n    const enterEnd = (attrs.find(i => i.value === 'enter-end') || { expression: '' }).expression.split(' ').filter(i => i !== '')\n\n    transition(el, enter, enterStart, enterEnd, callback, () => {})\n}\n\nexport function transitionOut(el, callback, forceSkip = false) {\n    if (forceSkip) return callback()\n\n    const attrs = getXAttrs(el, 'transition')\n\n    if (attrs.length < 1) return callback()\n\n    const leave = (attrs.find(i => i.value === 'leave') || { expression: '' }).expression.split(' ').filter(i => i !== '')\n    const leaveStart = (attrs.find(i => i.value === 'leave-start') || { expression: '' }).expression.split(' ').filter(i => i !== '')\n    const leaveEnd = (attrs.find(i => i.value === 'leave-end') || { expression: '' }).expression.split(' ').filter(i => i !== '')\n\n    transition(el, leave, leaveStart, leaveEnd, () => {}, callback)\n}\n\nexport function transition(el, classesDuring, classesStart, classesEnd, hook1, hook2) {\n    const originalClasses = el.__x_original_classes || []\n    el.classList.add(...classesStart)\n    el.classList.add(...classesDuring)\n\n    requestAnimationFrame(() => {\n        const duration = Number(getComputedStyle(el).transitionDuration.replace('s', '')) * 1000\n\n        hook1()\n\n        requestAnimationFrame(() => {\n            // Don't remove classes that were in the original class attribute.\n            el.classList.remove(...classesStart.filter(i => !originalClasses.includes(i)))\n            el.classList.add(...classesEnd)\n\n            setTimeout(() => {\n                hook2()\n\n                // Adding an \"isConnected\" check, in case the callback\n                // removed the element from the DOM.\n                if (el.isConnected) {\n                    el.classList.remove(...classesDuring.filter(i => !originalClasses.includes(i)))\n                    el.classList.remove(...classesEnd.filter(i => !originalClasses.includes(i)))\n                }\n            }, duration);\n        })\n    });\n}\n","import { transitionIn, transitionOut, getXAttrs } from '../utils'\n\nexport function handleForDirective(component, el, expression, initialUpdate) {\n    const { single, bunch, iterator1, iterator2 } = parseFor(expression)\n\n    var items = component.evaluateReturnExpression(el, bunch)\n\n    // As we walk the array, we'll also walk the DOM (updating/creating as we go).\n    var previousEl = el\n    items.forEach((i, index, group) => {\n        const currentKey = getThisIterationsKeyFromTemplateTag(component, el, single, iterator1, iterator2, i, index, group)\n        let currentEl = previousEl.nextElementSibling\n\n        // Let's check and see if the x-for has already generated an element last time it ran.\n        if (currentEl && currentEl.__x_for_key !== undefined) {\n            // If the the key's don't match.\n            if (currentEl.__x_for_key !== currentKey) {\n                // We'll look ahead to see if we can find it further down.\n                var tmpCurrentEl = currentEl\n                while(tmpCurrentEl) {\n                    // If we found it later in the DOM.\n                    if (tmpCurrentEl.__x_for_key === currentKey) {\n                        // Move it to where it's supposed to be in the DOM.\n                        el.parentElement.insertBefore(tmpCurrentEl, currentEl)\n                        // And set it as the current element as if we just created it.\n                        currentEl = tmpCurrentEl\n                        break\n                    }\n\n                    tmpCurrentEl = (tmpCurrentEl.nextElementSibling && tmpCurrentEl.nextElementSibling.__x_for_key !== undefined) ? tmpCurrentEl.nextElementSibling : false\n                }\n            }\n\n            // Temporarily remove the key indicator to allow the normal \"updateElements\" to work\n            delete currentEl.__x_for_key\n\n            currentEl.__x_for_alias = single\n            currentEl.__x_for_value = i\n            component.updateElements(currentEl, () => {\n                return {[currentEl.__x_for_alias]: currentEl.__x_for_value}\n            })\n        } else {\n            // There are no more .__x_for_key elements, meaning the page is first loading, OR, there are\n            // extra items in the array that need to be added as new elements.\n\n            // Let's create a clone from the template.\n            const clone = document.importNode(el.content, true);\n            // Insert it where we are in the DOM.\n            el.parentElement.insertBefore(clone, currentEl)\n\n            // Set it as the current element.\n            currentEl = previousEl.nextElementSibling\n\n            // And transition it in if it's not the first page load.\n            transitionIn(currentEl, () => {}, initialUpdate)\n\n            // Now, let's walk the new DOM node and initialize everything,\n            // including new nested components.\n            // Note we are resolving the \"extraData\" alias stuff from the dom element value so that it's\n            // always up to date for listener handlers that don't get re-registered.\n            currentEl.__x_for_alias = single\n            currentEl.__x_for_value = i\n            component.initializeElements(currentEl, () => {\n                return {[currentEl.__x_for_alias]: currentEl.__x_for_value}\n            })\n        }\n\n        currentEl.__x_for_key = currentKey\n\n        previousEl = currentEl\n    })\n\n    // Now that we've added/updated/moved all the elements for the current state of the loop.\n    // Anything left over, we can get rid of.\n    var nextElementFromOldLoop = (previousEl.nextElementSibling && previousEl.nextElementSibling.__x_for_key !== undefined) ? previousEl.nextElementSibling : false\n\n    while(nextElementFromOldLoop) {\n        const nextElementFromOldLoopImmutable = nextElementFromOldLoop\n        const nextSibling = nextElementFromOldLoop.nextElementSibling\n\n        transitionOut(nextElementFromOldLoop, () => {\n            nextElementFromOldLoopImmutable.remove()\n        })\n\n        nextElementFromOldLoop = (nextSibling && nextSibling.__x_for_key !== undefined) ? nextSibling : false\n    }\n}\n\n// This was taken from VueJS 2.* core. Thanks Vue!\nfunction parseFor (expression) {\n    const forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/\n    const stripParensRE = /^\\(|\\)$/g\n    const forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/\n\n    const inMatch = expression.match(forAliasRE)\n    if (! inMatch) return\n    const res = {}\n    res.bunch = inMatch[2].trim()\n    const single = inMatch[1].trim().replace(stripParensRE, '')\n    const iteratorMatch = single.match(forIteratorRE)\n    if (iteratorMatch) {\n        res.single = single.replace(forIteratorRE, '').trim()\n        res.iterator1 = iteratorMatch[1].trim()\n        if (iteratorMatch[2]) {\n            res.iterator2 = iteratorMatch[2].trim()\n        }\n    } else {\n        res.single = single\n    }\n    return res\n  }\n\nfunction getThisIterationsKeyFromTemplateTag(component, el, single, iterator1, iterator2, i, index, group) {\n    const keyAttr = getXAttrs(el, 'bind').filter(attr => attr.value === 'key')[0]\n\n    let keyAliases = { [single]: i }\n    if (iterator1) keyAliases[iterator1] = index\n    if (iterator2) keyAliases[iterator2] = group\n\n    return keyAttr\n        ? component.evaluateReturnExpression(el, keyAttr.expression, () => keyAliases)\n        : index\n}\n","import { arrayUnique } from '../utils'\n\nexport function handleAttributeBindingDirective(component, el, attrName, expression, extraVars) {\n    var value = component.evaluateReturnExpression(el, expression, extraVars)\n\n    if (attrName === 'value') {\n        // If nested model key is undefined, set the default value to empty string.\n        if (value === undefined && expression.match(/\\./).length) {\n            value = ''\n        }\n\n        if (el.type === 'radio') {\n            el.checked = el.value == value\n        } else if (el.type === 'checkbox') {\n            if (Array.isArray(value)) {\n                // I'm purposely not using Array.includes here because it's\n                // strict, and because of Numeric/String mis-casting, I\n                // want the \"includes\" to be \"fuzzy\".\n                let valueFound = false\n                value.forEach(val => {\n                    if (val == el.value) {\n                        valueFound = true\n                    }\n                })\n\n                el.checked = valueFound\n            } else {\n                el.checked = !! value\n            }\n        } else if (el.tagName === 'SELECT') {\n            updateSelect(el, value)\n        } else {\n            el.value = value\n        }\n    } else if (attrName === 'class') {\n        if (Array.isArray(value)) {\n            const originalClasses = el.__x_original_classes || []\n            el.setAttribute('class', arrayUnique(originalClasses.concat(value)).join(' '))\n        } else if (typeof value === 'object') {\n            Object.keys(value).forEach(classNames => {\n                if (value[classNames]) {\n                    classNames.split(' ').forEach(className => el.classList.add(className))\n                } else {\n                    classNames.split(' ').forEach(className => el.classList.remove(className))\n                }\n            })\n        } else {\n            const originalClasses = el.__x_original_classes || []\n            const newClasses = value.split(' ')\n            el.setAttribute('class', arrayUnique(originalClasses.concat(newClasses)).join(' '))\n        }\n    } else if (['disabled', 'readonly', 'required', 'checked', 'hidden'].includes(attrName)) {\n        // Boolean attributes have to be explicitly added and removed, not just set.\n        if (!! value) {\n            el.setAttribute(attrName, '')\n        } else {\n            el.removeAttribute(attrName)\n        }\n    } else {\n        el.setAttribute(attrName, value)\n    }\n}\n\nfunction updateSelect(el, value) {\n    const arrayWrappedValue = [].concat(value).map(value => { return value + '' })\n\n    Array.from(el.options).forEach(option => {\n        option.selected = arrayWrappedValue.includes(option.value || option.text)\n    })\n}\n","import { kebabCase } from '../utils'\n\nexport function registerListener(component, el, event, modifiers, expression, extraVars = {}) {\n    if (modifiers.includes('away')) {\n        const handler = e => {\n            // Don't do anything if the click came form the element or within it.\n            if (el.contains(e.target)) return\n\n            // Don't do anything if this element isn't currently visible.\n            if (el.offsetWidth < 1 && el.offsetHeight < 1) return\n\n            // Now that we are sure the element is visible, AND the click\n            // is from outside it, let's run the expression.\n            runListenerHandler(component, expression, e, extraVars)\n\n            if (modifiers.includes('once')) {\n                document.removeEventListener(event, handler)\n            }\n        }\n\n        // Listen for this event at the root level.\n        document.addEventListener(event, handler)\n    } else {\n        const listenerTarget = modifiers.includes('window')\n            ? window : (modifiers.includes('document') ? document : el)\n\n        const handler = e => {\n            if (isKeyEvent(event)) {\n                if (isListeningForASpecificKeyThatHasntBeenPressed(e, modifiers)) {\n                    return\n                }\n            }\n\n            if (modifiers.includes('prevent')) e.preventDefault()\n            if (modifiers.includes('stop')) e.stopPropagation()\n\n            runListenerHandler(component, expression, e, extraVars)\n\n            if (modifiers.includes('once')) {\n                listenerTarget.removeEventListener(event, handler)\n            }\n        }\n\n        listenerTarget.addEventListener(event, handler)\n    }\n}\n\nfunction runListenerHandler(component, expression, e, extraVars) {\n    component.evaluateCommandExpression(e.target, expression, () => {\n        return {...extraVars(), '$event': e}\n    })\n}\n\nfunction isKeyEvent(event) {\n    return ['keydown', 'keyup'].includes(event)\n}\n\nfunction isListeningForASpecificKeyThatHasntBeenPressed(e, modifiers) {\n    let keyModifiers = modifiers.filter(i => {\n        return ! ['window', 'document', 'prevent', 'stop'].includes(i)\n    })\n\n    // If no modifier is specified, we'll call it a press.\n    if (keyModifiers.length === 0) return false\n\n    // If one is passed, AND it matches the key pressed, we'll call it a press.\n    if (keyModifiers.length === 1 && keyModifiers[0] === keyToModifier(e.key)) return false\n\n    // The user is listening for key combinations.\n    const systemKeyModifiers = ['ctrl', 'shift', 'alt', 'meta', 'cmd', 'super']\n    const selectedSystemKeyModifiers = systemKeyModifiers.filter(modifier => keyModifiers.includes(modifier))\n\n    keyModifiers = keyModifiers.filter(i => ! selectedSystemKeyModifiers.includes(i))\n\n    if (selectedSystemKeyModifiers.length > 0) {\n        const activelyPressedKeyModifiers = selectedSystemKeyModifiers.filter(modifier => {\n            // Alias \"cmd\" and \"super\" to \"meta\"\n            if (modifier === 'cmd' || modifier === 'super') modifier = 'meta'\n\n            return e[`${modifier}Key`]\n        })\n\n        // If all the modifiers selected are pressed, ...\n        if (activelyPressedKeyModifiers.length === selectedSystemKeyModifiers.length) {\n            // AND the remaining key is pressed as well. It's a press.\n            if (keyModifiers[0] === keyToModifier(e.key)) return false\n        }\n    }\n\n    // We'll call it NOT a valid keypress.\n    return true\n}\n\nfunction keyToModifier(key) {\n    switch (key) {\n        case '/':\n            return 'slash'\n        case ' ':\n        case 'Spacebar':\n            return 'space'\n        default:\n            return kebabCase(key)\n    }\n}\n","import { registerListener } from './on'\n\nexport function registerModelListener(component, el, modifiers, expression, extraVars = {}) {\n    // If the element we are binding to is a select, a radio, or checkbox\n    // we'll listen for the change event instead of the \"input\" event.\n    var event = (el.tagName.toLowerCase() === 'select')\n        || ['checkbox', 'radio'].includes(el.type)\n        || modifiers.includes('lazy')\n        ? 'change' : 'input'\n\n    const listenerExpression = modelListenerExpression(component, el, modifiers, expression)\n\n    registerListener(component, el, event, modifiers, listenerExpression, extraVars)\n}\n\nfunction modelListenerExpression(component, el, modifiers, dataKey) {\n    var rightSideOfExpression = ''\n    if (el.type === 'checkbox') {\n        // If the data we are binding to is an array, toggle it's value inside the array.\n        if (Array.isArray(component.$data[dataKey])) {\n            rightSideOfExpression = `$event.target.checked ? ${dataKey}.concat([$event.target.value]) : ${dataKey}.filter(i => i !== $event.target.value)`\n        } else {\n            rightSideOfExpression = `$event.target.checked`\n        }\n    } else if (el.tagName.toLowerCase() === 'select' && el.multiple) {\n        rightSideOfExpression = modifiers.includes('number')\n            ? 'Array.from($event.target.selectedOptions).map(option => { return parseFloat(option.value || option.text) })'\n            : 'Array.from($event.target.selectedOptions).map(option => { return option.value || option.text })'\n    } else {\n        rightSideOfExpression = modifiers.includes('number')\n            ? 'parseFloat($event.target.value)'\n            : (modifiers.includes('trim') ? '$event.target.value.trim()' : '$event.target.value')\n    }\n\n    if (el.type === 'radio') {\n        // Radio buttons only work properly when they share a name attribute.\n        // People might assume we take care of that for them, because\n        // they already set a shared \"x-model\" attribute.\n        if (! el.hasAttribute('name')) el.setAttribute('name', dataKey)\n    }\n\n    return `${dataKey} = ${rightSideOfExpression}`\n}\n","import { walk, saferEval, saferEvalNoReturn, getXAttrs, debounce } from './utils'\nimport { handleForDirective } from './directives/for'\nimport { handleAttributeBindingDirective } from './directives/bind'\nimport { handleShowDirective } from './directives/show'\nimport { handleIfDirective } from './directives/if'\nimport { registerModelListener } from './directives/model'\nimport { registerListener } from './directives/on'\n\nexport default class Component {\n    constructor(el) {\n        this.$el = el\n\n        const dataAttr = this.$el.getAttribute('x-data')\n        const dataExpression = dataAttr === '' ? '{}' : dataAttr\n        const initExpression = this.$el.getAttribute('x-init')\n        const createdExpression = this.$el.getAttribute('x-created')\n        const mountedExpression = this.$el.getAttribute('x-mounted')\n\n        const unobservedData = saferEval(dataExpression, {})\n\n        // Construct a Proxy-based observable. This will be used to handle reactivity.\n        this.$data = this.wrapDataInObservable(unobservedData)\n\n        // After making user-supplied data methods reactive, we can now add\n        // our magic properties to the original data for access.\n        unobservedData.$el = this.$el\n        unobservedData.$refs = this.getRefsProxy()\n\n        this.nextTickStack = []\n        unobservedData.$nextTick = (callback) => {\n            this.nextTickStack.push(callback)\n        }\n\n        var initReturnedCallback\n        if (initExpression) {\n            // We want to allow data manipulation, but not trigger DOM updates just yet.\n            // We haven't even initialized the elements with their Alpine bindings. I mean c'mon.\n            this.pauseReactivity = true\n            initReturnedCallback = saferEval(this.$el.getAttribute('x-init'), this.$data)\n            this.pauseReactivity = false\n        }\n\n        if (createdExpression) {\n            console.warn('AlpineJS Warning: \"x-created\" is deprecated and will be removed in the next major version. Use \"x-init\" instead.')\n            this.pauseReactivity = true\n            saferEvalNoReturn(this.$el.getAttribute('x-created'), this.$data)\n            this.pauseReactivity = false\n        }\n\n        // Register all our listeners and set all our attribute bindings.\n        this.initializeElements(this.$el)\n\n        // Use mutation observer to detect new elements being added within this component at run-time.\n        // Alpine's just so darn flexible amirite?\n        this.listenForNewElementsToInitialize()\n\n        if (typeof initReturnedCallback === 'function') {\n            // Run the callback returned form the \"x-init\" hook to allow the user to do stuff after\n            // Alpine's got it's grubby little paws all over everything.\n            initReturnedCallback.call(this.$data)\n        }\n\n        if (mountedExpression) {\n            console.warn('AlpineJS Warning: \"x-mounted\" is deprecated and will be removed in the next major version. Use \"x-init\" (with a callback return) for the same behavior.')\n            // Run an \"x-mounted\" hook to allow the user to do stuff after\n            // Alpine's got it's grubby little paws all over everything.\n            saferEvalNoReturn(mountedExpression, this.$data)\n        }\n    }\n\n    wrapDataInObservable(data) {\n        var self = this\n\n        const proxyHandler = {\n            set(obj, property, value) {\n                const setWasSuccessful = Reflect.set(obj, property, value)\n\n                // Don't react to data changes for cases like the `x-created` hook.\n                if (self.pauseReactivity) return\n\n                debounce(() => {\n                    self.updateElements(self.$el)\n\n                    // Walk through the $nextTick stack and clear it as we go.\n                    while (self.nextTickStack.length > 0) {\n                        self.nextTickStack.shift()()\n                    }\n                }, 0)()\n\n                return setWasSuccessful\n            },\n            get(target, key) {\n                // If the property we are trying to get is a proxy, just return it.\n                // Like in the case of $refs\n                if (target[key] && target[key].isRefsProxy) return target[key]\n\n                // If property is a DOM node, just return it. (like in the case of this.$el)\n                if (target[key] && target[key] instanceof Node) return target[key]\n\n                // If accessing a nested property, retur this proxy recursively.\n                // This enables reactivity on setting nested data.\n                if (typeof target[key] === 'object' && target[key] !== null) {\n                    return new Proxy(target[key], proxyHandler)\n                }\n\n                // If none of the above, just return the flippin' value. Gawsh.\n                return target[key]\n            }\n        }\n\n        return new Proxy(data, proxyHandler)\n    }\n\n    walkAndSkipNestedComponents(el, callback, initializeComponentCallback = () => {}) {\n        walk(el, el => {\n            // We've hit a component.\n            if (el.hasAttribute('x-data')) {\n                // If it's not the current one.\n                if (! el.isSameNode(this.$el)) {\n                    // Initialize it if it's not.\n                    if (! el.__x) initializeComponentCallback(el)\n\n                    // Now we'll let that sub-component deal with itself.\n                    return false\n                }\n            }\n\n            return callback(el)\n        })\n    }\n\n    initializeElements(rootEl, extraVars = () => {}) {\n        this.walkAndSkipNestedComponents(rootEl, el => {\n            // Don't touch spawns from for loop\n            if (el.__x_for_key !== undefined) return false\n\n            this.initializeElement(el, extraVars)\n        }, el => {\n            el.__x = new Component(el)\n        })\n\n        // Walk through the $nextTick stack and clear it as we go.\n        while (this.nextTickStack.length > 0) {\n            this.nextTickStack.shift()()\n        }\n    }\n\n    initializeElement(el, extraVars) {\n        // To support class attribute merging, we have to know what the element's\n        // original class attribute looked like for reference.\n        if (el.hasAttribute('class') && getXAttrs(el).length > 0) {\n            el.__x_original_classes = el.getAttribute('class').split(' ')\n        }\n\n        this.registerListeners(el, extraVars)\n        this.resolveBoundAttributes(el, true, extraVars)\n    }\n\n    updateElements(rootEl, extraVars = () => {}) {\n        this.walkAndSkipNestedComponents(rootEl, el => {\n            // Don't touch spawns from for loop (and check if the root is actually a for loop in a parent, don't skip it.)\n            if (el.__x_for_key !== undefined && ! el.isSameNode(this.$el)) return false\n\n            this.updateElement(el, extraVars)\n        }, el => {\n            el.__x = new Component(el)\n        })\n    }\n\n    updateElement(el, extraVars) {\n        this.resolveBoundAttributes(el, false, extraVars)\n    }\n\n    registerListeners(el, extraVars) {\n        getXAttrs(el).forEach(({ type, value, modifiers, expression }) => {\n            switch (type) {\n                case 'on':\n                    registerListener(this, el, value, modifiers, expression, extraVars)\n                    break;\n\n                case 'model':\n                    registerModelListener(this, el, modifiers, expression, extraVars)\n                    break;\n                default:\n                    break;\n            }\n        })\n    }\n\n    resolveBoundAttributes(el, initialUpdate = false, extraVars) {\n        getXAttrs(el).forEach(({ type, value, modifiers, expression }) => {\n            switch (type) {\n                case 'model':\n                    handleAttributeBindingDirective(this, el, 'value', expression, extraVars)\n                    break;\n\n                case 'bind':\n                    // The :key binding on an x-for is special, ignore it.\n                    if (el.tagName.toLowerCase() === 'template' && value === 'key') return\n\n                    handleAttributeBindingDirective(this, el, value, expression, extraVars)\n                    break;\n\n                case 'text':\n                    var output = this.evaluateReturnExpression(el, expression, extraVars);\n\n                    // If nested model key is undefined, set the default value to empty string.\n                    if (output === undefined && expression.match(/\\./).length) {\n                        output = ''\n                    }\n\n                    el.innerText = output\n                    break;\n\n                case 'html':\n                    el.innerHTML = this.evaluateReturnExpression(el, expression, extraVars)\n                    break;\n\n                case 'show':\n                    var output = this.evaluateReturnExpression(el, expression, extraVars)\n\n                    handleShowDirective(el, output, initialUpdate)\n                    break;\n\n                case 'if':\n                    var output = this.evaluateReturnExpression(el, expression, extraVars)\n\n                    handleIfDirective(el, output, initialUpdate)\n                    break;\n\n                case 'for':\n                    handleForDirective(this, el, expression, initialUpdate)\n                    break;\n\n                case 'cloak':\n                    el.removeAttribute('x-cloak')\n                    break;\n\n                default:\n                    break;\n            }\n        })\n    }\n\n    evaluateReturnExpression(el, expression, extraVars = () => {}) {\n        return saferEval(expression, this.$data, {\n            ...extraVars(),\n            $dispatch: this.getDispatchFunction(el),\n        })\n    }\n\n    evaluateCommandExpression(el, expression, extraVars = () => {}) {\n        saferEvalNoReturn(expression, this.$data, {\n            ...extraVars(),\n            $dispatch: this.getDispatchFunction(el),\n        })\n    }\n\n    getDispatchFunction (el) {\n        return (event, detail = {}) => {\n            el.dispatchEvent(new CustomEvent(event, {\n                detail,\n                bubbles: true,\n            }))\n        }\n    }\n\n    listenForNewElementsToInitialize() {\n        const targetNode = this.$el\n\n        const observerOptions = {\n            childList: true,\n            attributes: true,\n            subtree: true,\n        }\n\n        const observer = new MutationObserver((mutations) => {\n            for (let i=0; i < mutations.length; i++){\n                // Filter out mutations triggered from child components.\n                const closestParentComponent = mutations[i].target.closest('[x-data]')\n                if (! (closestParentComponent && closestParentComponent.isSameNode(this.$el))) return\n\n                if (mutations[i].type === 'attributes' && mutations[i].attributeName === 'x-data') {\n                    const rawData = saferEval(mutations[i].target.getAttribute('x-data'), {})\n\n                    Object.keys(rawData).forEach(key => {\n                        if (this.$data[key] !== rawData[key]) {\n                            this.$data[key] = rawData[key]\n                        }\n                    })\n                }\n\n                if (mutations[i].addedNodes.length > 0) {\n                    mutations[i].addedNodes.forEach(node => {\n                        if (node.nodeType !== 1) return\n\n                        if (node.matches('[x-data]')) {\n                            node.__x = new Component(node)\n                            return\n                        }\n\n                        this.initializeElements(node)\n                    })\n                }\n              }\n        })\n\n        observer.observe(targetNode, observerOptions);\n    }\n\n    getRefsProxy() {\n        var self = this\n\n        // One of the goals of this is to not hold elements in memory, but rather re-evaluate\n        // the DOM when the system needs something from it. This way, the framework is flexible and\n        // friendly to outside DOM changes from libraries like Vue/Livewire.\n        // For this reason, I'm using an \"on-demand\" proxy to fake a \"$refs\" object.\n        return new Proxy({}, {\n            get(object, property) {\n                if (property === 'isRefsProxy') return true\n\n                var ref\n\n                // We can't just query the DOM because it's hard to filter out refs in\n                // nested components.\n                self.walkAndSkipNestedComponents(self.$el, el => {\n                    if (el.hasAttribute('x-ref') && el.getAttribute('x-ref') === property) {\n                        ref = el\n                    }\n                })\n\n                return ref\n            }\n        })\n    }\n}\n","import { transitionIn, transitionOut } from '../utils'\n\nexport function handleShowDirective(el, value, initialUpdate = false) {\n    if (! value) {\n        transitionOut(el, () => {\n            el.style.display = 'none'\n        }, initialUpdate)\n    } else {\n        transitionIn(el, () => {\n            if (el.style.length === 1 && el.style.display !== '') {\n                el.removeAttribute('style')\n            } else {\n                el.style.removeProperty('display')\n            }\n        }, initialUpdate)\n    }\n}\n","import { transitionIn, transitionOut } from '../utils'\n\nexport function handleIfDirective(el, expressionResult, initialUpdate) {\n    if (el.nodeName.toLowerCase() !== 'template') console.warn(`Alpine: [x-if] directive should only be added to <template> tags. See https://github.com/alpinejs/alpine#x-if`)\n\n    const elementHasAlreadyBeenAdded = el.nextElementSibling && el.nextElementSibling.__x_inserted_me === true\n\n    if (expressionResult && ! elementHasAlreadyBeenAdded) {\n        const clone = document.importNode(el.content, true);\n\n        el.parentElement.insertBefore(clone, el.nextElementSibling)\n\n        el.nextElementSibling.__x_inserted_me = true\n\n        transitionIn(el.nextElementSibling, () => {}, initialUpdate)\n    } else if (! expressionResult && elementHasAlreadyBeenAdded) {\n        transitionOut(el.nextElementSibling, () => {\n            el.nextElementSibling.remove()\n        }, initialUpdate)\n    }\n}\n","import Component from './component'\nimport { domReady, isTesting } from './utils'\n\nconst Alpine = {\n    start: async function () {\n        if (! isTesting()) {\n            await domReady()\n        }\n\n        this.discoverComponents(el => {\n            this.initializeComponent(el)\n        })\n\n        // It's easier and more performant to just support Turbolinks than listen\n        // to MutationOberserver mutations at the document level.\n        document.addEventListener(\"turbolinks:load\", () => {\n            this.discoverUninitializedComponents(el => {\n                this.initializeComponent(el)\n            })\n        })\n\n        this.listenForNewUninitializedComponentsAtRunTime(el => {\n            this.initializeComponent(el)\n        })\n    },\n\n    discoverComponents: function (callback) {\n        const rootEls = document.querySelectorAll('[x-data]');\n\n        rootEls.forEach(rootEl => {\n            callback(rootEl)\n        })\n    },\n\n    discoverUninitializedComponents: function (callback, el = null) {\n        const rootEls = (el || document).querySelectorAll('[x-data]');\n\n        Array.from(rootEls)\n            .filter(el => el.__x === undefined)\n            .forEach(rootEl => {\n                callback(rootEl)\n            })\n    },\n\n    listenForNewUninitializedComponentsAtRunTime: function (callback) {\n        const targetNode = document.querySelector('body');\n\n        const observerOptions = {\n            childList: true,\n            attributes: true,\n            subtree: true,\n        }\n\n        const observer = new MutationObserver((mutations) => {\n            for (let i=0; i < mutations.length; i++){\n                if (mutations[i].addedNodes.length > 0) {\n                    mutations[i].addedNodes.forEach(node => {\n                        // Discard non-element nodes (like line-breaks)\n                        if (node.nodeType !== 1) return\n\n                        // Discard any changes happening within an existing component.\n                        // They will take care of themselves.\n                        if (node.parentElement.closest('[x-data]')) return\n\n                        this.discoverUninitializedComponents((el) => {\n                            this.initializeComponent(el)\n                        }, node.parentElement)\n                    })\n                }\n              }\n        })\n\n        observer.observe(targetNode, observerOptions)\n    },\n\n    initializeComponent: function (el) {\n        if (! el.__x) {\n            el.__x = new Component(el)\n        }\n    }\n}\n\nif (! isTesting()) {\n    window.Alpine = Alpine\n    window.Alpine.start()\n}\n\nexport default Alpine\n"],"names":["arrayUnique","array","a","concat","i","length","j","splice","isTesting","navigator","userAgent","includes","saferEval","expression","dataContext","additionalHelperVariables","Function","Object","keys","values","saferEvalNoReturn","isXAttr","attr","name","replaceAtAndColonWithStandardSyntax","test","getXAttrs","el","type","Array","from","attributes","filter","map","typeMatch","match","valueMatch","modifiers","value","replace","startsWith","transitionIn","callback","forceSkip","attrs","enter","find","split","enterStart","enterEnd","transition","transitionOut","leave","leaveStart","leaveEnd","classesDuring","classesStart","classesEnd","hook1","hook2","originalClasses","__x_original_classes","classList","add","requestAnimationFrame","duration","Number","getComputedStyle","transitionDuration","remove","setTimeout","isConnected","handleForDirective","component","initialUpdate","single","bunch","iterator1","iterator2","forIteratorRE","inMatch","res","trim","iteratorMatch","parseFor","items","evaluateReturnExpression","previousEl","forEach","index","group","currentKey","keyAttr","keyAliases","getThisIterationsKeyFromTemplateTag","currentEl","nextElementSibling","undefined","__x_for_key","tmpCurrentEl","parentElement","insertBefore","__x_for_alias","__x_for_value","updateElements","clone","document","importNode","content","initializeElements","nextElementFromOldLoop","nextElementFromOldLoopImmutable","nextSibling","handleAttributeBindingDirective","attrName","extraVars","checked","isArray","valueFound","val","tagName","arrayWrappedValue","options","option","selected","text","updateSelect","setAttribute","join","classNames","className","newClasses","removeAttribute","registerListener","event","handler","e","contains","target","offsetWidth","offsetHeight","runListenerHandler","removeEventListener","addEventListener","listenerTarget","window","isKeyEvent","isListeningForASpecificKeyThatHasntBeenPressed","preventDefault","stopPropagation","evaluateCommandExpression","keyModifiers","keyToModifier","key","selectedSystemKeyModifiers","modifier","toLowerCase","modelListenerExpression","dataKey","rightSideOfExpression","$data","multiple","hasAttribute","Component","constructor","$el","dataAttr","this","getAttribute","dataExpression","initExpression","createdExpression","mountedExpression","unobservedData","initReturnedCallback","wrapDataInObservable","$refs","getRefsProxy","nextTickStack","$nextTick","push","pauseReactivity","console","warn","listenForNewElementsToInitialize","call","data","self","proxyHandler","set","obj","property","setWasSuccessful","Reflect","func","wait","timeout","shift","context","args","arguments","later","apply","clearTimeout","get","isRefsProxy","Node","Proxy","walkAndSkipNestedComponents","initializeComponentCallback","walk","node","firstElementChild","isSameNode","__x","rootEl","initializeElement","registerListeners","resolveBoundAttributes","updateElement","listenerExpression","registerModelListener","output","innerText","innerHTML","style","display","removeProperty","handleShowDirective","expressionResult","nodeName","elementHasAlreadyBeenAdded","__x_inserted_me","handleIfDirective","$dispatch","getDispatchFunction","detail","dispatchEvent","CustomEvent","bubbles","targetNode","MutationObserver","mutations","closestParentComponent","closest","attributeName","rawData","addedNodes","nodeType","matches","observe","childList","subtree","object","ref","Alpine","start","async","Promise","resolve","readyState","discoverComponents","initializeComponent","discoverUninitializedComponents","listenForNewUninitializedComponentsAtRunTime","querySelectorAll","rootEls","querySelector"],"mappings":"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"}
+{"version":3,"file":"alpine.js","sources":["../src/utils.js","../src/directives/for.js","../src/directives/bind.js","../src/directives/on.js","../src/directives/model.js","../src/component.js","../src/directives/show.js","../src/directives/if.js","../src/index.js"],"sourcesContent":["\n// Thanks @stimulus:\n// https://github.com/stimulusjs/stimulus/blob/master/packages/%40stimulus/core/src/application.ts\nexport function domReady() {\n    return new Promise(resolve => {\n        if (document.readyState == \"loading\") {\n            document.addEventListener(\"DOMContentLoaded\", resolve)\n        } else {\n            resolve()\n        }\n    })\n}\n\nexport function arrayUnique(array) {\n    var a = array.concat();\n    for(var i=0; i<a.length; ++i) {\n        for(var j=i+1; j<a.length; ++j) {\n            if(a[i] === a[j])\n                a.splice(j--, 1);\n        }\n    }\n\n    return a;\n}\n\nexport function isTesting() {\n    return navigator.userAgent, navigator.userAgent.includes(\"Node.js\")\n        || navigator.userAgent.includes(\"jsdom\")\n}\n\nexport function kebabCase(subject) {\n    return subject.replace(/([a-z])([A-Z])/g, '$1-$2').replace(/[_\\s]/, '-').toLowerCase()\n}\n\nexport function walk(el, callback) {\n    if (callback(el) === false) return\n\n    let node = el.firstElementChild\n\n    while (node) {\n        walk(node, callback)\n\n        node = node.nextElementSibling\n    }\n}\n\nexport function debounce(func, wait) {\n    var timeout\n    return function () {\n        var context = this, args = arguments\n        var later = function () {\n            timeout = null\n            func.apply(context, args)\n        }\n        clearTimeout(timeout)\n        timeout = setTimeout(later, wait)\n    }\n}\n\nexport function saferEval(expression, dataContext, additionalHelperVariables = {}) {\n    return (new Function(['$data', ...Object.keys(additionalHelperVariables)], `var result; with($data) { result = ${expression} }; return result`))(\n        dataContext, ...Object.values(additionalHelperVariables)\n    )\n}\n\nexport function saferEvalNoReturn(expression, dataContext, additionalHelperVariables = {}) {\n    return (new Function(['dataContext', ...Object.keys(additionalHelperVariables)], `with(dataContext) { ${expression} }`))(\n        dataContext, ...Object.values(additionalHelperVariables)\n    )\n}\n\nexport function isXAttr(attr) {\n    const name = replaceAtAndColonWithStandardSyntax(attr.name)\n\n    const xAttrRE = /x-(on|bind|data|text|html|model|if|for|show|cloak|transition|ref)/\n\n    return xAttrRE.test(name)\n}\n\nexport function getXAttrs(el, type) {\n    return Array.from(el.attributes)\n        .filter(isXAttr)\n        .map(attr => {\n            const name = replaceAtAndColonWithStandardSyntax(attr.name)\n\n            const typeMatch = name.match(/x-(on|bind|data|text|html|model|if|for|show|cloak|transition|ref)/)\n            const valueMatch = name.match(/:([a-zA-Z\\-:]+)/)\n            const modifiers = name.match(/\\.[^.\\]]+(?=[^\\]]*$)/g) || []\n\n            return {\n                type: typeMatch ? typeMatch[1] : null,\n                value: valueMatch ? valueMatch[1] : null,\n                modifiers: modifiers.map(i => i.replace('.', '')),\n                expression: attr.value,\n            }\n        })\n        .filter(i => {\n            // If no type is passed in for filtering, bypassfilter\n            if (! type) return true\n\n            return i.type === type\n        })\n}\n\nexport function replaceAtAndColonWithStandardSyntax(name) {\n    if (name.startsWith('@')) {\n        return name.replace('@', 'x-on:')\n    } else if (name.startsWith(':')) {\n        return name.replace(':', 'x-bind:')\n    }\n\n    return name\n}\n\nexport function transitionIn(el, callback, forceSkip = false) {\n    if (forceSkip) return callback()\n\n    const attrs = getXAttrs(el, 'transition')\n\n    if (attrs.length < 1) return callback()\n\n    const enter = (attrs.find(i => i.value === 'enter') || { expression: '' }).expression.split(' ').filter(i => i !== '')\n    const enterStart = (attrs.find(i => i.value === 'enter-start') || { expression: '' }).expression.split(' ').filter(i => i !== '')\n    const enterEnd = (attrs.find(i => i.value === 'enter-end') || { expression: '' }).expression.split(' ').filter(i => i !== '')\n\n    transition(el, enter, enterStart, enterEnd, callback, () => {})\n}\n\nexport function transitionOut(el, callback, forceSkip = false) {\n    if (forceSkip) return callback()\n\n    const attrs = getXAttrs(el, 'transition')\n\n    if (attrs.length < 1) return callback()\n\n    const leave = (attrs.find(i => i.value === 'leave') || { expression: '' }).expression.split(' ').filter(i => i !== '')\n    const leaveStart = (attrs.find(i => i.value === 'leave-start') || { expression: '' }).expression.split(' ').filter(i => i !== '')\n    const leaveEnd = (attrs.find(i => i.value === 'leave-end') || { expression: '' }).expression.split(' ').filter(i => i !== '')\n\n    transition(el, leave, leaveStart, leaveEnd, () => {}, callback)\n}\n\nexport function transition(el, classesDuring, classesStart, classesEnd, hook1, hook2) {\n    const originalClasses = el.__x_original_classes || []\n    el.classList.add(...classesStart)\n    el.classList.add(...classesDuring)\n\n    requestAnimationFrame(() => {\n        const duration = Number(getComputedStyle(el).transitionDuration.replace('s', '')) * 1000\n\n        hook1()\n\n        requestAnimationFrame(() => {\n            // Don't remove classes that were in the original class attribute.\n            el.classList.remove(...classesStart.filter(i => !originalClasses.includes(i)))\n            el.classList.add(...classesEnd)\n\n            setTimeout(() => {\n                hook2()\n\n                // Adding an \"isConnected\" check, in case the callback\n                // removed the element from the DOM.\n                if (el.isConnected) {\n                    el.classList.remove(...classesDuring.filter(i => !originalClasses.includes(i)))\n                    el.classList.remove(...classesEnd.filter(i => !originalClasses.includes(i)))\n                }\n            }, duration);\n        })\n    });\n}\n","import { transitionIn, transitionOut, getXAttrs } from '../utils'\n\nexport function handleForDirective(component, el, expression, initialUpdate) {\n    const { single, bunch, iterator1, iterator2 } = parseFor(expression)\n\n    var items = component.evaluateReturnExpression(el, bunch)\n\n    // As we walk the array, we'll also walk the DOM (updating/creating as we go).\n    var previousEl = el\n    items.forEach((i, index, group) => {\n        const currentKey = getThisIterationsKeyFromTemplateTag(component, el, single, iterator1, iterator2, i, index, group)\n        let currentEl = previousEl.nextElementSibling\n\n        // Let's check and see if the x-for has already generated an element last time it ran.\n        if (currentEl && currentEl.__x_for_key !== undefined) {\n            // If the the key's don't match.\n            if (currentEl.__x_for_key !== currentKey) {\n                // We'll look ahead to see if we can find it further down.\n                var tmpCurrentEl = currentEl\n                while(tmpCurrentEl) {\n                    // If we found it later in the DOM.\n                    if (tmpCurrentEl.__x_for_key === currentKey) {\n                        // Move it to where it's supposed to be in the DOM.\n                        el.parentElement.insertBefore(tmpCurrentEl, currentEl)\n                        // And set it as the current element as if we just created it.\n                        currentEl = tmpCurrentEl\n                        break\n                    }\n\n                    tmpCurrentEl = (tmpCurrentEl.nextElementSibling && tmpCurrentEl.nextElementSibling.__x_for_key !== undefined) ? tmpCurrentEl.nextElementSibling : false\n                }\n            }\n\n            // Temporarily remove the key indicator to allow the normal \"updateElements\" to work\n            delete currentEl.__x_for_key\n\n            currentEl.__x_for_alias = single\n            currentEl.__x_for_value = i\n            component.updateElements(currentEl, () => {\n                return {[currentEl.__x_for_alias]: currentEl.__x_for_value}\n            })\n        } else {\n            // There are no more .__x_for_key elements, meaning the page is first loading, OR, there are\n            // extra items in the array that need to be added as new elements.\n\n            // Let's create a clone from the template.\n            const clone = document.importNode(el.content, true);\n            // Insert it where we are in the DOM.\n            el.parentElement.insertBefore(clone, currentEl)\n\n            // Set it as the current element.\n            currentEl = previousEl.nextElementSibling\n\n            // And transition it in if it's not the first page load.\n            transitionIn(currentEl, () => {}, initialUpdate)\n\n            // Now, let's walk the new DOM node and initialize everything,\n            // including new nested components.\n            // Note we are resolving the \"extraData\" alias stuff from the dom element value so that it's\n            // always up to date for listener handlers that don't get re-registered.\n            currentEl.__x_for_alias = single\n            currentEl.__x_for_value = i\n            component.initializeElements(currentEl, () => {\n                return {[currentEl.__x_for_alias]: currentEl.__x_for_value}\n            })\n        }\n\n        currentEl.__x_for_key = currentKey\n\n        previousEl = currentEl\n    })\n\n    // Now that we've added/updated/moved all the elements for the current state of the loop.\n    // Anything left over, we can get rid of.\n    var nextElementFromOldLoop = (previousEl.nextElementSibling && previousEl.nextElementSibling.__x_for_key !== undefined) ? previousEl.nextElementSibling : false\n\n    while(nextElementFromOldLoop) {\n        const nextElementFromOldLoopImmutable = nextElementFromOldLoop\n        const nextSibling = nextElementFromOldLoop.nextElementSibling\n\n        transitionOut(nextElementFromOldLoop, () => {\n            nextElementFromOldLoopImmutable.remove()\n        })\n\n        nextElementFromOldLoop = (nextSibling && nextSibling.__x_for_key !== undefined) ? nextSibling : false\n    }\n}\n\n// This was taken from VueJS 2.* core. Thanks Vue!\nfunction parseFor (expression) {\n    const forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/\n    const stripParensRE = /^\\(|\\)$/g\n    const forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/\n\n    const inMatch = expression.match(forAliasRE)\n    if (! inMatch) return\n    const res = {}\n    res.bunch = inMatch[2].trim()\n    const single = inMatch[1].trim().replace(stripParensRE, '')\n    const iteratorMatch = single.match(forIteratorRE)\n    if (iteratorMatch) {\n        res.single = single.replace(forIteratorRE, '').trim()\n        res.iterator1 = iteratorMatch[1].trim()\n        if (iteratorMatch[2]) {\n            res.iterator2 = iteratorMatch[2].trim()\n        }\n    } else {\n        res.single = single\n    }\n    return res\n  }\n\nfunction getThisIterationsKeyFromTemplateTag(component, el, single, iterator1, iterator2, i, index, group) {\n    const keyAttr = getXAttrs(el, 'bind').filter(attr => attr.value === 'key')[0]\n\n    let keyAliases = { [single]: i }\n    if (iterator1) keyAliases[iterator1] = index\n    if (iterator2) keyAliases[iterator2] = group\n\n    return keyAttr\n        ? component.evaluateReturnExpression(el, keyAttr.expression, () => keyAliases)\n        : index\n}\n","import { arrayUnique } from '../utils'\n\nexport function handleAttributeBindingDirective(component, el, attrName, expression, extraVars) {\n    var value = component.evaluateReturnExpression(el, expression, extraVars)\n\n    if (attrName === 'value') {\n        // If nested model key is undefined, set the default value to empty string.\n        if (value === undefined && expression.match(/\\./).length) {\n            value = ''\n        }\n\n        if (el.type === 'radio') {\n            el.checked = el.value == value\n        } else if (el.type === 'checkbox') {\n            if (Array.isArray(value)) {\n                // I'm purposely not using Array.includes here because it's\n                // strict, and because of Numeric/String mis-casting, I\n                // want the \"includes\" to be \"fuzzy\".\n                let valueFound = false\n                value.forEach(val => {\n                    if (val == el.value) {\n                        valueFound = true\n                    }\n                })\n\n                el.checked = valueFound\n            } else {\n                el.checked = !! value\n            }\n        } else if (el.tagName === 'SELECT') {\n            updateSelect(el, value)\n        } else {\n            el.value = value\n        }\n    } else if (attrName === 'class') {\n        if (Array.isArray(value)) {\n            const originalClasses = el.__x_original_classes || []\n            el.setAttribute('class', arrayUnique(originalClasses.concat(value)).join(' '))\n        } else if (typeof value === 'object') {\n            Object.keys(value).forEach(classNames => {\n                if (value[classNames]) {\n                    classNames.split(' ').forEach(className => el.classList.add(className))\n                } else {\n                    classNames.split(' ').forEach(className => el.classList.remove(className))\n                }\n            })\n        } else {\n            const originalClasses = el.__x_original_classes || []\n            const newClasses = value.split(' ')\n            el.setAttribute('class', arrayUnique(originalClasses.concat(newClasses)).join(' '))\n        }\n    } else if (['disabled', 'readonly', 'required', 'checked', 'hidden'].includes(attrName)) {\n        // Boolean attributes have to be explicitly added and removed, not just set.\n        if (!! value) {\n            el.setAttribute(attrName, '')\n        } else {\n            el.removeAttribute(attrName)\n        }\n    } else {\n        el.setAttribute(attrName, value)\n    }\n}\n\nfunction updateSelect(el, value) {\n    const arrayWrappedValue = [].concat(value).map(value => { return value + '' })\n\n    Array.from(el.options).forEach(option => {\n        option.selected = arrayWrappedValue.includes(option.value || option.text)\n    })\n}\n","import { kebabCase } from '../utils'\n\nexport function registerListener(component, el, event, modifiers, expression, extraVars = {}) {\n    if (modifiers.includes('away')) {\n        const handler = e => {\n            // Don't do anything if the click came form the element or within it.\n            if (el.contains(e.target)) return\n\n            // Don't do anything if this element isn't currently visible.\n            if (el.offsetWidth < 1 && el.offsetHeight < 1) return\n\n            // Now that we are sure the element is visible, AND the click\n            // is from outside it, let's run the expression.\n            runListenerHandler(component, expression, e, extraVars)\n\n            if (modifiers.includes('once')) {\n                document.removeEventListener(event, handler)\n            }\n        }\n\n        // Listen for this event at the root level.\n        document.addEventListener(event, handler)\n    } else {\n        const listenerTarget = modifiers.includes('window')\n            ? window : (modifiers.includes('document') ? document : el)\n\n        const handler = e => {\n            if (isKeyEvent(event)) {\n                if (isListeningForASpecificKeyThatHasntBeenPressed(e, modifiers)) {\n                    return\n                }\n            }\n\n            if (modifiers.includes('prevent')) e.preventDefault()\n            if (modifiers.includes('stop')) e.stopPropagation()\n\n            runListenerHandler(component, expression, e, extraVars)\n\n            if (modifiers.includes('once')) {\n                listenerTarget.removeEventListener(event, handler)\n            }\n        }\n\n        listenerTarget.addEventListener(event, handler)\n    }\n}\n\nfunction runListenerHandler(component, expression, e, extraVars) {\n    component.evaluateCommandExpression(e.target, expression, () => {\n        return {...extraVars(), '$event': e}\n    })\n}\n\nfunction isKeyEvent(event) {\n    return ['keydown', 'keyup'].includes(event)\n}\n\nfunction isListeningForASpecificKeyThatHasntBeenPressed(e, modifiers) {\n    let keyModifiers = modifiers.filter(i => {\n        return ! ['window', 'document', 'prevent', 'stop'].includes(i)\n    })\n\n    // If no modifier is specified, we'll call it a press.\n    if (keyModifiers.length === 0) return false\n\n    // If one is passed, AND it matches the key pressed, we'll call it a press.\n    if (keyModifiers.length === 1 && keyModifiers[0] === keyToModifier(e.key)) return false\n\n    // The user is listening for key combinations.\n    const systemKeyModifiers = ['ctrl', 'shift', 'alt', 'meta', 'cmd', 'super']\n    const selectedSystemKeyModifiers = systemKeyModifiers.filter(modifier => keyModifiers.includes(modifier))\n\n    keyModifiers = keyModifiers.filter(i => ! selectedSystemKeyModifiers.includes(i))\n\n    if (selectedSystemKeyModifiers.length > 0) {\n        const activelyPressedKeyModifiers = selectedSystemKeyModifiers.filter(modifier => {\n            // Alias \"cmd\" and \"super\" to \"meta\"\n            if (modifier === 'cmd' || modifier === 'super') modifier = 'meta'\n\n            return e[`${modifier}Key`]\n        })\n\n        // If all the modifiers selected are pressed, ...\n        if (activelyPressedKeyModifiers.length === selectedSystemKeyModifiers.length) {\n            // AND the remaining key is pressed as well. It's a press.\n            if (keyModifiers[0] === keyToModifier(e.key)) return false\n        }\n    }\n\n    // We'll call it NOT a valid keypress.\n    return true\n}\n\nfunction keyToModifier(key) {\n    switch (key) {\n        case '/':\n            return 'slash'\n        case ' ':\n        case 'Spacebar':\n            return 'space'\n        default:\n            return kebabCase(key)\n    }\n}\n","import { registerListener } from './on'\n\nexport function registerModelListener(component, el, modifiers, expression, extraVars) {\n    // If the element we are binding to is a select, a radio, or checkbox\n    // we'll listen for the change event instead of the \"input\" event.\n    var event = (el.tagName.toLowerCase() === 'select')\n        || ['checkbox', 'radio'].includes(el.type)\n        || modifiers.includes('lazy')\n        ? 'change' : 'input'\n\n    const listenerExpression = `${expression} = rightSideOfExpression($event, ${expression})`\n\n    registerListener(component, el, event, modifiers, listenerExpression, () => {\n        return {\n            ...extraVars(),\n            rightSideOfExpression: generateModelAssignmentFunction(el, modifiers, expression),\n        }\n    })\n}\n\nfunction generateModelAssignmentFunction(el, modifiers, expression) {\n    if (el.type === 'radio') {\n        // Radio buttons only work properly when they share a name attribute.\n        // People might assume we take care of that for them, because\n        // they already set a shared \"x-model\" attribute.\n        if (! el.hasAttribute('name')) el.setAttribute('name', expression)\n    }\n\n    return (event, currentValue) => {\n        if (event instanceof CustomEvent) {\n            return event.detail\n        } else if (el.type === 'checkbox') {\n            // If the data we are binding to is an array, toggle it's value inside the array.\n            if (Array.isArray(currentValue)) {\n                return event.target.checked ? currentValue.concat([event.target.value]) : currentValue.filter(i => i !== event.target.value)\n            } else {\n                return event.target.checked\n            }\n        } else if (el.tagName.toLowerCase() === 'select' && el.multiple) {\n            return modifiers.includes('number')\n                ? Array.from(event.target.selectedOptions).map(option => { return parseFloat(option.value || option.text) })\n                : Array.from(event.target.selectedOptions).map(option => { return option.value || option.text })\n        } else {\n            return modifiers.includes('number')\n                ? parseFloat(event.target.value)\n                : (modifiers.includes('trim') ? event.target.value.trim() : event.target.value)\n        }\n    }\n}\n","import { walk, saferEval, saferEvalNoReturn, getXAttrs, debounce } from './utils'\nimport { handleForDirective } from './directives/for'\nimport { handleAttributeBindingDirective } from './directives/bind'\nimport { handleShowDirective } from './directives/show'\nimport { handleIfDirective } from './directives/if'\nimport { registerModelListener } from './directives/model'\nimport { registerListener } from './directives/on'\n\nexport default class Component {\n    constructor(el) {\n        this.$el = el\n\n        const dataAttr = this.$el.getAttribute('x-data')\n        const dataExpression = dataAttr === '' ? '{}' : dataAttr\n        const initExpression = this.$el.getAttribute('x-init')\n        const createdExpression = this.$el.getAttribute('x-created')\n        const mountedExpression = this.$el.getAttribute('x-mounted')\n\n        const unobservedData = saferEval(dataExpression, {})\n\n        // Construct a Proxy-based observable. This will be used to handle reactivity.\n        this.$data = this.wrapDataInObservable(unobservedData)\n\n        // After making user-supplied data methods reactive, we can now add\n        // our magic properties to the original data for access.\n        unobservedData.$el = this.$el\n        unobservedData.$refs = this.getRefsProxy()\n\n        this.nextTickStack = []\n        unobservedData.$nextTick = (callback) => {\n            this.nextTickStack.push(callback)\n        }\n\n        var initReturnedCallback\n        if (initExpression) {\n            // We want to allow data manipulation, but not trigger DOM updates just yet.\n            // We haven't even initialized the elements with their Alpine bindings. I mean c'mon.\n            this.pauseReactivity = true\n            initReturnedCallback = this.evaluateReturnExpression(this.$el, initExpression)\n            this.pauseReactivity = false\n        }\n\n        if (createdExpression) {\n            console.warn('AlpineJS Warning: \"x-created\" is deprecated and will be removed in the next major version. Use \"x-init\" instead.')\n            this.pauseReactivity = true\n            saferEvalNoReturn(this.$el.getAttribute('x-created'), this.$data)\n            this.pauseReactivity = false\n        }\n\n        // Register all our listeners and set all our attribute bindings.\n        this.initializeElements(this.$el)\n\n        // Use mutation observer to detect new elements being added within this component at run-time.\n        // Alpine's just so darn flexible amirite?\n        this.listenForNewElementsToInitialize()\n\n        if (typeof initReturnedCallback === 'function') {\n            // Run the callback returned form the \"x-init\" hook to allow the user to do stuff after\n            // Alpine's got it's grubby little paws all over everything.\n            initReturnedCallback.call(this.$data)\n        }\n\n        if (mountedExpression) {\n            console.warn('AlpineJS Warning: \"x-mounted\" is deprecated and will be removed in the next major version. Use \"x-init\" (with a callback return) for the same behavior.')\n            // Run an \"x-mounted\" hook to allow the user to do stuff after\n            // Alpine's got it's grubby little paws all over everything.\n            saferEvalNoReturn(mountedExpression, this.$data)\n        }\n    }\n\n    wrapDataInObservable(data) {\n        var self = this\n\n        const proxyHandler = {\n            set(obj, property, value) {\n                const setWasSuccessful = Reflect.set(obj, property, value)\n\n                // Don't react to data changes for cases like the `x-created` hook.\n                if (self.pauseReactivity) return\n\n                debounce(() => {\n                    self.updateElements(self.$el)\n\n                    // Walk through the $nextTick stack and clear it as we go.\n                    while (self.nextTickStack.length > 0) {\n                        self.nextTickStack.shift()()\n                    }\n                }, 0)()\n\n                return setWasSuccessful\n            },\n            get(target, key) {\n                // If the property we are trying to get is a proxy, just return it.\n                // Like in the case of $refs\n                if (target[key] && target[key].isRefsProxy) return target[key]\n\n                // If property is a DOM node, just return it. (like in the case of this.$el)\n                if (target[key] && target[key] instanceof Node) return target[key]\n\n                // If accessing a nested property, retur this proxy recursively.\n                // This enables reactivity on setting nested data.\n                if (typeof target[key] === 'object' && target[key] !== null) {\n                    return new Proxy(target[key], proxyHandler)\n                }\n\n                // If none of the above, just return the flippin' value. Gawsh.\n                return target[key]\n            }\n        }\n\n        return new Proxy(data, proxyHandler)\n    }\n\n    walkAndSkipNestedComponents(el, callback, initializeComponentCallback = () => {}) {\n        walk(el, el => {\n            // We've hit a component.\n            if (el.hasAttribute('x-data')) {\n                // If it's not the current one.\n                if (! el.isSameNode(this.$el)) {\n                    // Initialize it if it's not.\n                    if (! el.__x) initializeComponentCallback(el)\n\n                    // Now we'll let that sub-component deal with itself.\n                    return false\n                }\n            }\n\n            return callback(el)\n        })\n    }\n\n    initializeElements(rootEl, extraVars = () => {}) {\n        this.walkAndSkipNestedComponents(rootEl, el => {\n            // Don't touch spawns from for loop\n            if (el.__x_for_key !== undefined) return false\n\n            this.initializeElement(el, extraVars)\n        }, el => {\n            el.__x = new Component(el)\n        })\n\n        // Walk through the $nextTick stack and clear it as we go.\n        while (this.nextTickStack.length > 0) {\n            this.nextTickStack.shift()()\n        }\n    }\n\n    initializeElement(el, extraVars) {\n        // To support class attribute merging, we have to know what the element's\n        // original class attribute looked like for reference.\n        if (el.hasAttribute('class') && getXAttrs(el).length > 0) {\n            el.__x_original_classes = el.getAttribute('class').split(' ')\n        }\n\n        this.registerListeners(el, extraVars)\n        this.resolveBoundAttributes(el, true, extraVars)\n    }\n\n    updateElements(rootEl, extraVars = () => {}) {\n        this.walkAndSkipNestedComponents(rootEl, el => {\n            // Don't touch spawns from for loop (and check if the root is actually a for loop in a parent, don't skip it.)\n            if (el.__x_for_key !== undefined && ! el.isSameNode(this.$el)) return false\n\n            this.updateElement(el, extraVars)\n        }, el => {\n            el.__x = new Component(el)\n        })\n    }\n\n    updateElement(el, extraVars) {\n        this.resolveBoundAttributes(el, false, extraVars)\n    }\n\n    registerListeners(el, extraVars) {\n        getXAttrs(el).forEach(({ type, value, modifiers, expression }) => {\n            switch (type) {\n                case 'on':\n                    registerListener(this, el, value, modifiers, expression, extraVars)\n                    break;\n\n                case 'model':\n                    registerModelListener(this, el, modifiers, expression, extraVars)\n                    break;\n                default:\n                    break;\n            }\n        })\n    }\n\n    resolveBoundAttributes(el, initialUpdate = false, extraVars) {\n        getXAttrs(el).forEach(({ type, value, modifiers, expression }) => {\n            switch (type) {\n                case 'model':\n                    handleAttributeBindingDirective(this, el, 'value', expression, extraVars)\n                    break;\n\n                case 'bind':\n                    // The :key binding on an x-for is special, ignore it.\n                    if (el.tagName.toLowerCase() === 'template' && value === 'key') return\n\n                    handleAttributeBindingDirective(this, el, value, expression, extraVars)\n                    break;\n\n                case 'text':\n                    var output = this.evaluateReturnExpression(el, expression, extraVars);\n\n                    // If nested model key is undefined, set the default value to empty string.\n                    if (output === undefined && expression.match(/\\./).length) {\n                        output = ''\n                    }\n\n                    el.innerText = output\n                    break;\n\n                case 'html':\n                    el.innerHTML = this.evaluateReturnExpression(el, expression, extraVars)\n                    break;\n\n                case 'show':\n                    var output = this.evaluateReturnExpression(el, expression, extraVars)\n\n                    handleShowDirective(el, output, initialUpdate)\n                    break;\n\n                case 'if':\n                    var output = this.evaluateReturnExpression(el, expression, extraVars)\n\n                    handleIfDirective(el, output, initialUpdate)\n                    break;\n\n                case 'for':\n                    handleForDirective(this, el, expression, initialUpdate)\n                    break;\n\n                case 'cloak':\n                    el.removeAttribute('x-cloak')\n                    break;\n\n                default:\n                    break;\n            }\n        })\n    }\n\n    evaluateReturnExpression(el, expression, extraVars = () => {}) {\n        return saferEval(expression, this.$data, {\n            ...extraVars(),\n            $dispatch: this.getDispatchFunction(el),\n        })\n    }\n\n    evaluateCommandExpression(el, expression, extraVars = () => {}) {\n        saferEvalNoReturn(expression, this.$data, {\n            ...extraVars(),\n            $dispatch: this.getDispatchFunction(el),\n        })\n    }\n\n    getDispatchFunction (el) {\n        return (event, detail = {}) => {\n            el.dispatchEvent(new CustomEvent(event, {\n                detail,\n                bubbles: true,\n            }))\n        }\n    }\n\n    listenForNewElementsToInitialize() {\n        const targetNode = this.$el\n\n        const observerOptions = {\n            childList: true,\n            attributes: true,\n            subtree: true,\n        }\n\n        const observer = new MutationObserver((mutations) => {\n            for (let i=0; i < mutations.length; i++){\n                // Filter out mutations triggered from child components.\n                const closestParentComponent = mutations[i].target.closest('[x-data]')\n                if (! (closestParentComponent && closestParentComponent.isSameNode(this.$el))) return\n\n                if (mutations[i].type === 'attributes' && mutations[i].attributeName === 'x-data') {\n                    const rawData = saferEval(mutations[i].target.getAttribute('x-data'), {})\n\n                    Object.keys(rawData).forEach(key => {\n                        if (this.$data[key] !== rawData[key]) {\n                            this.$data[key] = rawData[key]\n                        }\n                    })\n                }\n\n                if (mutations[i].addedNodes.length > 0) {\n                    mutations[i].addedNodes.forEach(node => {\n                        if (node.nodeType !== 1) return\n\n                        if (node.matches('[x-data]')) {\n                            node.__x = new Component(node)\n                            return\n                        }\n\n                        this.initializeElements(node)\n                    })\n                }\n              }\n        })\n\n        observer.observe(targetNode, observerOptions);\n    }\n\n    getRefsProxy() {\n        var self = this\n\n        // One of the goals of this is to not hold elements in memory, but rather re-evaluate\n        // the DOM when the system needs something from it. This way, the framework is flexible and\n        // friendly to outside DOM changes from libraries like Vue/Livewire.\n        // For this reason, I'm using an \"on-demand\" proxy to fake a \"$refs\" object.\n        return new Proxy({}, {\n            get(object, property) {\n                if (property === 'isRefsProxy') return true\n\n                var ref\n\n                // We can't just query the DOM because it's hard to filter out refs in\n                // nested components.\n                self.walkAndSkipNestedComponents(self.$el, el => {\n                    if (el.hasAttribute('x-ref') && el.getAttribute('x-ref') === property) {\n                        ref = el\n                    }\n                })\n\n                return ref\n            }\n        })\n    }\n}\n","import { transitionIn, transitionOut } from '../utils'\n\nexport function handleShowDirective(el, value, initialUpdate = false) {\n    if (! value) {\n        transitionOut(el, () => {\n            el.style.display = 'none'\n        }, initialUpdate)\n    } else {\n        transitionIn(el, () => {\n            if (el.style.length === 1 && el.style.display !== '') {\n                el.removeAttribute('style')\n            } else {\n                el.style.removeProperty('display')\n            }\n        }, initialUpdate)\n    }\n}\n","import { transitionIn, transitionOut } from '../utils'\n\nexport function handleIfDirective(el, expressionResult, initialUpdate) {\n    if (el.nodeName.toLowerCase() !== 'template') console.warn(`Alpine: [x-if] directive should only be added to <template> tags. See https://github.com/alpinejs/alpine#x-if`)\n\n    const elementHasAlreadyBeenAdded = el.nextElementSibling && el.nextElementSibling.__x_inserted_me === true\n\n    if (expressionResult && ! elementHasAlreadyBeenAdded) {\n        const clone = document.importNode(el.content, true);\n\n        el.parentElement.insertBefore(clone, el.nextElementSibling)\n\n        el.nextElementSibling.__x_inserted_me = true\n\n        transitionIn(el.nextElementSibling, () => {}, initialUpdate)\n    } else if (! expressionResult && elementHasAlreadyBeenAdded) {\n        transitionOut(el.nextElementSibling, () => {\n            el.nextElementSibling.remove()\n        }, initialUpdate)\n    }\n}\n","import Component from './component'\nimport { domReady, isTesting } from './utils'\n\nconst Alpine = {\n    start: async function () {\n        if (! isTesting()) {\n            await domReady()\n        }\n\n        this.discoverComponents(el => {\n            this.initializeComponent(el)\n        })\n\n        // It's easier and more performant to just support Turbolinks than listen\n        // to MutationOberserver mutations at the document level.\n        document.addEventListener(\"turbolinks:load\", () => {\n            this.discoverUninitializedComponents(el => {\n                this.initializeComponent(el)\n            })\n        })\n\n        this.listenForNewUninitializedComponentsAtRunTime(el => {\n            this.initializeComponent(el)\n        })\n    },\n\n    discoverComponents: function (callback) {\n        const rootEls = document.querySelectorAll('[x-data]');\n\n        rootEls.forEach(rootEl => {\n            callback(rootEl)\n        })\n    },\n\n    discoverUninitializedComponents: function (callback, el = null) {\n        const rootEls = (el || document).querySelectorAll('[x-data]');\n\n        Array.from(rootEls)\n            .filter(el => el.__x === undefined)\n            .forEach(rootEl => {\n                callback(rootEl)\n            })\n    },\n\n    listenForNewUninitializedComponentsAtRunTime: function (callback) {\n        const targetNode = document.querySelector('body');\n\n        const observerOptions = {\n            childList: true,\n            attributes: true,\n            subtree: true,\n        }\n\n        const observer = new MutationObserver((mutations) => {\n            for (let i=0; i < mutations.length; i++){\n                if (mutations[i].addedNodes.length > 0) {\n                    mutations[i].addedNodes.forEach(node => {\n                        // Discard non-element nodes (like line-breaks)\n                        if (node.nodeType !== 1) return\n\n                        // Discard any changes happening within an existing component.\n                        // They will take care of themselves.\n                        if (node.parentElement.closest('[x-data]')) return\n\n                        this.discoverUninitializedComponents((el) => {\n                            this.initializeComponent(el)\n                        }, node.parentElement)\n                    })\n                }\n              }\n        })\n\n        observer.observe(targetNode, observerOptions)\n    },\n\n    initializeComponent: function (el) {\n        if (! el.__x) {\n            el.__x = new Component(el)\n        }\n    }\n}\n\nif (! isTesting()) {\n    window.Alpine = Alpine\n    window.Alpine.start()\n}\n\nexport default Alpine\n"],"names":["arrayUnique","array","a","concat","i","length","j","splice","isTesting","navigator","userAgent","includes","saferEval","expression","dataContext","additionalHelperVariables","Function","Object","keys","values","saferEvalNoReturn","isXAttr","attr","name","replaceAtAndColonWithStandardSyntax","test","getXAttrs","el","type","Array","from","attributes","filter","map","typeMatch","match","valueMatch","modifiers","value","replace","startsWith","transitionIn","callback","forceSkip","attrs","transition","find","split","transitionOut","classesDuring","classesStart","classesEnd","hook1","hook2","originalClasses","__x_original_classes","classList","add","requestAnimationFrame","duration","Number","getComputedStyle","transitionDuration","remove","setTimeout","isConnected","handleForDirective","component","initialUpdate","single","bunch","iterator1","iterator2","forIteratorRE","inMatch","res","trim","iteratorMatch","parseFor","items","evaluateReturnExpression","previousEl","forEach","index","group","currentKey","keyAttr","keyAliases","getThisIterationsKeyFromTemplateTag","currentEl","nextElementSibling","undefined","__x_for_key","tmpCurrentEl","parentElement","insertBefore","__x_for_alias","__x_for_value","updateElements","clone","document","importNode","content","initializeElements","nextElementFromOldLoop","nextElementFromOldLoopImmutable","nextSibling","handleAttributeBindingDirective","attrName","extraVars","checked","isArray","valueFound","val","tagName","arrayWrappedValue","options","option","selected","text","updateSelect","setAttribute","join","classNames","className","newClasses","removeAttribute","registerListener","event","handler","e","contains","target","offsetWidth","offsetHeight","runListenerHandler","removeEventListener","addEventListener","listenerTarget","window","isKeyEvent","keyModifiers","keyToModifier","key","selectedSystemKeyModifiers","modifier","isListeningForASpecificKeyThatHasntBeenPressed","preventDefault","stopPropagation","evaluateCommandExpression","toLowerCase","generateModelAssignmentFunction","hasAttribute","currentValue","CustomEvent","detail","multiple","selectedOptions","parseFloat","Component","constructor","$el","dataAttr","this","getAttribute","dataExpression","initExpression","createdExpression","mountedExpression","unobservedData","initReturnedCallback","$data","wrapDataInObservable","$refs","getRefsProxy","nextTickStack","$nextTick","push","pauseReactivity","console","warn","listenForNewElementsToInitialize","call","data","self","proxyHandler","set","obj","property","setWasSuccessful","Reflect","func","wait","timeout","shift","context","args","arguments","later","apply","clearTimeout","get","isRefsProxy","Node","Proxy","walkAndSkipNestedComponents","initializeComponentCallback","walk","node","firstElementChild","isSameNode","__x","rootEl","initializeElement","registerListeners","resolveBoundAttributes","updateElement","rightSideOfExpression","registerModelListener","output","innerText","innerHTML","style","display","removeProperty","handleShowDirective","expressionResult","nodeName","elementHasAlreadyBeenAdded","__x_inserted_me","handleIfDirective","$dispatch","getDispatchFunction","dispatchEvent","bubbles","targetNode","MutationObserver","mutations","closestParentComponent","closest","attributeName","rawData","addedNodes","nodeType","matches","observe","childList","subtree","object","ref","Alpine","start","async","Promise","resolve","readyState","discoverComponents","initializeComponent","discoverUninitializedComponents","listenForNewUninitializedComponentsAtRunTime","querySelectorAll","rootEls","querySelector"],"mappings":"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"}
\ No newline at end of file
