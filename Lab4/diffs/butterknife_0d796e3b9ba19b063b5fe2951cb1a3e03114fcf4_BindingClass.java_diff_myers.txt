diff --git a/butterknife-compiler/src/main/java/butterknife/compiler/BindingClass.java b/butterknife-compiler/src/main/java/butterknife/compiler/BindingClass.java
index cf5e643..22f0086 100644
--- a/butterknife-compiler/src/main/java/butterknife/compiler/BindingClass.java
+++ b/butterknife-compiler/src/main/java/butterknife/compiler/BindingClass.java
@@ -179,7 +179,11 @@ final class BindingClass {
     }
 
     if (bindNeedsFinder()) {
+      if (methodBindingsNeedFinder()) {
+        constructor.addParameter(FINDER, "finder", FINAL);
+      } else {
         constructor.addParameter(FINDER, "finder");
+      }
       constructor.addParameter(Object.class, "source");
     }
     if (bindNeedsResources()) {
@@ -730,6 +734,28 @@ final class BindingClass {
     return false;
   }
 
+  private boolean methodBindingsNeedFinder() {
+    for (ViewBindings viewBindings : viewIdMap.values()) {
+      for (Map.Entry<ListenerClass, Map<ListenerMethod, Set<MethodViewBinding>>> entry
+          : viewBindings.getMethodBindings().entrySet()) {
+        Map<ListenerMethod, Set<MethodViewBinding>> methodBindings = entry.getValue();
+        for (ListenerMethod method : getListenerMethods(entry.getKey())) {
+          if (methodBindings.containsKey(method)) {
+            String[] parameterTypes = method.parameters();
+            for (MethodViewBinding methodViewBinding : methodBindings.get(method)) {
+              for (Parameter parameter : methodViewBinding.getParameters()) {
+                if (parameter.requiresCast(parameterTypes[parameter.getListenerPosition()])) {
+                  return true;
+                }
+              }
+            }
+          }
+        }
+      }
+    }
+    return false;
+  }
+
   private boolean hasFieldBindings() {
     for (ViewBindings viewBindings : viewIdMap.values()) {
       if (!viewBindings.getFieldBindings().isEmpty()) {
