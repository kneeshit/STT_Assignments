diff --git a/butterknife-compiler/src/test/java/butterknife/BindViewsTest.java b/butterknife-compiler/src/test/java/butterknife/BindViewsTest.java
index c9ed9bb..2a33e43 100644
--- a/butterknife-compiler/src/test/java/butterknife/BindViewsTest.java
+++ b/butterknife-compiler/src/test/java/butterknife/BindViewsTest.java
@@ -1,7 +1,6 @@
 package butterknife;
 
 import butterknife.compiler.ButterKnifeProcessor;
-import com.google.common.base.Joiner;
 import com.google.testing.compile.JavaFileObjects;
 import javax.tools.JavaFileObject;
 import org.junit.Test;
@@ -11,18 +10,18 @@ import static com.google.testing.compile.JavaSourceSubjectFactory.javaSource;
 
 public class BindViewsTest {
   @Test public void fieldVisibility() {
-    JavaFileObject source = JavaFileObjects.forSourceString("test.Test", Joiner.on('\n').join(
-        "package test;",
-        "import android.app.Activity;",
-        "import android.view.View;",
-        "import butterknife.BindViews;",
-        "import java.util.List;",
-        "public class Test extends Activity {",
-        "  @BindViews(1) public List<View> thing1;",
-        "  @BindViews(2) List<View> thing2;",
-        "  @BindViews(3) protected List<View> thing3;",
-        "}"
-    ));
+    JavaFileObject source = JavaFileObjects.forSourceString("test.Test", ""
+        + "package test;\n"
+        + "import android.app.Activity;\n"
+        + "import android.view.View;\n"
+        + "import butterknife.BindViews;\n"
+        + "import java.util.List;\n"
+        + "public class Test extends Activity {\n"
+        + "  @BindViews(1) public List<View> thing1;\n"
+        + "  @BindViews(2) List<View> thing2;\n"
+        + "  @BindViews(3) protected List<View> thing3;\n"
+        + "}"
+    );
 
     assertAbout(javaSource()).that(source)
         .processedWith(new ButterKnifeProcessor())
@@ -30,15 +29,15 @@ public class BindViewsTest {
   }
 
   @Test public void bindingArray() {
-    JavaFileObject source = JavaFileObjects.forSourceString("test.Test", Joiner.on('\n').join(
-        "package test;",
-        "import android.app.Activity;",
-        "import android.view.View;",
-        "import butterknife.BindViews;",
-        "public class Test extends Activity {",
-        "    @BindViews({1, 2, 3}) View[] thing;",
-        "}"
-    ));
+    JavaFileObject source = JavaFileObjects.forSourceString("test.Test", ""
+        + "package test;\n"
+        + "import android.app.Activity;\n"
+        + "import android.view.View;\n"
+        + "import butterknife.BindViews;\n"
+        + "public class Test extends Activity {\n"
+        + "    @BindViews({1, 2, 3}) View[] thing;\n"
+        + "}"
+    );
 
     JavaFileObject binderSource = JavaFileObjects.forSourceString("test/Test_ViewBinder", ""
         + "package test;\n"
@@ -90,15 +89,15 @@ public class BindViewsTest {
   }
 
   @Test public void bindingArrayWithGenerics() {
-    JavaFileObject source = JavaFileObjects.forSourceString("test.Test", Joiner.on('\n').join(
-        "package test;",
-        "import android.app.Activity;",
-        "import android.view.View;",
-        "import butterknife.BindViews;",
-        "public class Test<T extends View> extends Activity {",
-        "    @BindViews({1, 2, 3}) T[] thing;",
-        "}"
-    ));
+    JavaFileObject source = JavaFileObjects.forSourceString("test.Test", ""
+        + "package test;\n"
+        + "import android.app.Activity;\n"
+        + "import android.view.View;\n"
+        + "import butterknife.BindViews;\n"
+        + "public class Test<T extends View> extends Activity {\n"
+        + "    @BindViews({1, 2, 3}) T[] thing;\n"
+        + "}"
+    );
 
     JavaFileObject binderSource = JavaFileObjects.forSourceString("test/Test_ViewBinder", ""
         + "package test;\n"
@@ -150,15 +149,15 @@ public class BindViewsTest {
   }
 
   @Test public void bindingArrayWithCast() {
-    JavaFileObject source = JavaFileObjects.forSourceString("test.Test", Joiner.on('\n').join(
-        "package test;",
-        "import android.app.Activity;",
-        "import android.widget.TextView;",
-        "import butterknife.BindViews;",
-        "public class Test extends Activity {",
-        "    @BindViews({1, 2, 3}) TextView[] thing;",
-        "}"
-    ));
+    JavaFileObject source = JavaFileObjects.forSourceString("test.Test", ""
+        + "package test;\n"
+        + "import android.app.Activity;\n"
+        + "import android.widget.TextView;\n"
+        + "import butterknife.BindViews;\n"
+        + "public class Test extends Activity {\n"
+        + "    @BindViews({1, 2, 3}) TextView[] thing;\n"
+        + "}"
+    );
 
     JavaFileObject binderSource = JavaFileObjects.forSourceString("test/Test_ViewBinder", ""
         + "package test;\n"
@@ -211,16 +210,16 @@ public class BindViewsTest {
   }
 
   @Test public void bindingList() {
-    JavaFileObject source = JavaFileObjects.forSourceString("test.Test", Joiner.on('\n').join(
-        "package test;",
-        "import android.app.Activity;",
-        "import android.view.View;",
-        "import butterknife.BindViews;",
-        "import java.util.List;",
-        "public class Test extends Activity {",
-        "    @BindViews({1, 2, 3}) List<View> thing;",
-        "}"
-    ));
+    JavaFileObject source = JavaFileObjects.forSourceString("test.Test", ""
+        + "package test;\n"
+        + "import android.app.Activity;\n"
+        + "import android.view.View;\n"
+        + "import butterknife.BindViews;\n"
+        + "import java.util.List;\n"
+        + "public class Test extends Activity {\n"
+        + "    @BindViews({1, 2, 3}) List<View> thing;\n"
+        + "}"
+    );
 
     JavaFileObject binderSource = JavaFileObjects.forSourceString("test/Test_ViewBinder", ""
         + "package test;\n"
@@ -272,16 +271,16 @@ public class BindViewsTest {
   }
 
   @Test public void bindingListOfInterface() {
-    JavaFileObject source = JavaFileObjects.forSourceString("test.Test", Joiner.on('\n').join(
-        "package test;",
-        "import android.app.Activity;",
-        "import butterknife.BindViews;",
-        "import java.util.List;",
-        "public class Test {",
-        "    interface TestInterface {}",
-        "    @BindViews({1, 2, 3}) List<TestInterface> thing;",
-        "}"
-    ));
+    JavaFileObject source = JavaFileObjects.forSourceString("test.Test", ""
+        + "package test;\n"
+        + "import android.app.Activity;\n"
+        + "import butterknife.BindViews;\n"
+        + "import java.util.List;\n"
+        + "public class Test {\n"
+        + "    interface TestInterface {}\n"
+        + "    @BindViews({1, 2, 3}) List<TestInterface> thing;\n"
+        + "}"
+    );
 
     JavaFileObject binderSource = JavaFileObjects.forSourceString("test/Test_ViewBinder", ""
         + "package test;\n"
@@ -333,16 +332,16 @@ public class BindViewsTest {
   }
 
   @Test public void bindingListWithGenerics() {
-    JavaFileObject source = JavaFileObjects.forSourceString("test.Test", Joiner.on('\n').join(
-        "package test;",
-        "import android.app.Activity;",
-        "import android.view.View;",
-        "import butterknife.BindViews;",
-        "import java.util.List;",
-        "public class Test<T extends View> extends Activity {",
-        "    @BindViews({1, 2, 3}) List<T> thing;",
-        "}"
-    ));
+    JavaFileObject source = JavaFileObjects.forSourceString("test.Test", ""
+        + "package test;\n"
+        + "import android.app.Activity;\n"
+        + "import android.view.View;\n"
+        + "import butterknife.BindViews;\n"
+        + "import java.util.List;\n"
+        + "public class Test<T extends View> extends Activity {\n"
+        + "    @BindViews({1, 2, 3}) List<T> thing;\n"
+        + "}"
+    );
 
     JavaFileObject binderSource = JavaFileObjects.forSourceString("test/Test_ViewBinder", ""
         + "package test;\n"
@@ -394,17 +393,17 @@ public class BindViewsTest {
   }
 
   @Test public void nullableList() {
-    JavaFileObject source = JavaFileObjects.forSourceString("test.Test", Joiner.on('\n').join(
-        "package test;",
-        "import android.app.Activity;",
-        "import android.view.View;",
-        "import butterknife.BindViews;",
-        "import java.util.List;",
-        "public class Test extends Activity {",
-        "    @interface Nullable {}",
-        "    @Nullable @BindViews({1, 2, 3}) List<View> thing;",
-        "}"
-    ));
+    JavaFileObject source = JavaFileObjects.forSourceString("test.Test", ""
+        + "package test;\n"
+        + "import android.app.Activity;\n"
+        + "import android.view.View;\n"
+        + "import butterknife.BindViews;\n"
+        + "import java.util.List;\n"
+        + "public class Test extends Activity {\n"
+        + "    @interface Nullable {}\n"
+        + "    @Nullable @BindViews({1, 2, 3}) List<View> thing;\n"
+        + "}"
+    );
 
     JavaFileObject binderSource = JavaFileObjects.forSourceString("test/Test_ViewBinder", ""
         + "package test;\n"
@@ -456,15 +455,15 @@ public class BindViewsTest {
   }
 
   @Test public void failsIfNoIds() {
-    JavaFileObject source = JavaFileObjects.forSourceString("test.Test", Joiner.on('\n').join(
-        "package test;",
-        "import android.view.View;",
-        "import butterknife.BindViews;",
-        "import java.util.List;",
-        "public class Test {",
-        "  @BindViews({}) List<View> thing;",
-        "}"
-    ));
+    JavaFileObject source = JavaFileObjects.forSourceString("test.Test", ""
+        + "package test;\n"
+        + "import android.view.View;\n"
+        + "import butterknife.BindViews;\n"
+        + "import java.util.List;\n"
+        + "public class Test {\n"
+        + "  @BindViews({}) List<View> thing;\n"
+        + "}"
+    );
 
     assertAbout(javaSource()).that(source)
         .processedWith(new ButterKnifeProcessor())
@@ -474,14 +473,14 @@ public class BindViewsTest {
   }
 
   @Test public void failsIfNoGenericType() {
-    JavaFileObject source = JavaFileObjects.forSourceString("test.Test", Joiner.on('\n').join(
-        "package test;",
-        "import butterknife.BindViews;",
-        "import java.util.List;",
-        "public class Test {",
-        "  @BindViews(1) List thing;",
-        "}"
-    ));
+    JavaFileObject source = JavaFileObjects.forSourceString("test.Test", ""
+        + "package test;\n"
+        + "import butterknife.BindViews;\n"
+        + "import java.util.List;\n"
+        + "public class Test {\n"
+        + "  @BindViews(1) List thing;\n"
+        + "}"
+    );
 
     assertAbout(javaSource()).that(source)
         .processedWith(new ButterKnifeProcessor())
@@ -491,15 +490,15 @@ public class BindViewsTest {
   }
 
   @Test public void failsIfUnsupportedCollection() {
-    JavaFileObject source = JavaFileObjects.forSourceString("test.Test", Joiner.on('\n').join(
-        "package test;",
-        "import android.view.View;",
-        "import butterknife.BindViews;",
-        "import java.util.Deque;",
-        "public class Test {",
-        "  @BindViews(1) Deque<View> thing;",
-        "}"
-    ));
+    JavaFileObject source = JavaFileObjects.forSourceString("test.Test", ""
+        + "package test;\n"
+        + "import android.view.View;\n"
+        + "import butterknife.BindViews;\n"
+        + "import java.util.Deque;\n"
+        + "public class Test {\n"
+        + "  @BindViews(1) Deque<View> thing;\n"
+        + "}"
+    );
 
     assertAbout(javaSource()).that(source)
         .processedWith(new ButterKnifeProcessor())
@@ -509,50 +508,53 @@ public class BindViewsTest {
   }
 
   @Test public void failsIfGenericNotView() {
-    JavaFileObject source = JavaFileObjects.forSourceString("test.Test", Joiner.on('\n').join(
-        "package test;",
-        "import android.app.Activity;",
-        "import butterknife.BindViews;",
-        "import java.util.List;",
-        "public class Test extends Activity {",
-        "  @BindViews(1) List<String> thing;",
-        "}"
-    ));
+    JavaFileObject source = JavaFileObjects.forSourceString("test.Test", ""
+        + "package test;\n"
+        + "import android.app.Activity;\n"
+        + "import butterknife.BindViews;\n"
+        + "import java.util.List;\n"
+        + "public class Test extends Activity {\n"
+        + "  @BindViews(1) List<String> thing;\n"
+        + "}"
+    );
 
     assertAbout(javaSource()).that(source)
         .processedWith(new ButterKnifeProcessor())
         .failsToCompile()
-        .withErrorContaining("@BindViews List or array type must extend from View or be an interface. (test.Test.thing)")
+        .withErrorContaining(
+            "@BindViews List or array type must extend from View or be an interface. (test.Test.thing)")
         .in(source).onLine(6);
   }
 
   @Test public void failsIfArrayNotView() {
-    JavaFileObject source = JavaFileObjects.forSourceString("test.Test", Joiner.on('\n').join(
-        "package test;",
-        "import android.app.Activity;",
-        "import butterknife.BindViews;",
-        "public class Test extends Activity {",
-        "  @BindViews(1) String[] thing;",
-        "}"));
+    JavaFileObject source = JavaFileObjects.forSourceString("test.Test", ""
+        + "package test;\n"
+        + "import android.app.Activity;\n"
+        + "import butterknife.BindViews;\n"
+        + "public class Test extends Activity {\n"
+        + "  @BindViews(1) String[] thing;\n"
+        + "}"
+    );
 
     assertAbout(javaSource()).that(source)
         .processedWith(new ButterKnifeProcessor())
         .failsToCompile()
-        .withErrorContaining("@BindViews List or array type must extend from View or be an interface. (test.Test.thing)")
+        .withErrorContaining(
+            "@BindViews List or array type must extend from View or be an interface. (test.Test.thing)")
         .in(source).onLine(5);
   }
 
   @Test public void failsIfContainsDuplicateIds() throws Exception {
-    JavaFileObject source = JavaFileObjects.forSourceString("test.Test", Joiner.on('\n').join(
-        "package test;",
-        "import android.app.Activity;",
-        "import android.view.View;",
-        "import butterknife.BindViews;",
-        "import java.util.List;",
-        "public class Test extends Activity {",
-        "    @BindViews({1, 1}) List<View> thing;",
-        "}"
-    ));
+    JavaFileObject source = JavaFileObjects.forSourceString("test.Test", ""
+        + "package test;\n"
+        + "import android.app.Activity;\n"
+        + "import android.view.View;\n"
+        + "import butterknife.BindViews;\n"
+        + "import java.util.List;\n"
+        + "public class Test extends Activity {\n"
+        + "    @BindViews({1, 1}) List<View> thing;\n"
+        + "}"
+    );
 
     assertAbout(javaSource()).that(source)
         .processedWith(new ButterKnifeProcessor())
