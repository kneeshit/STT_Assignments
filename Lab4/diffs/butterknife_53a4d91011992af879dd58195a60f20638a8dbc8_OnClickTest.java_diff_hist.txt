diff --git a/butterknife-compiler/src/test/java/butterknife/OnClickTest.java b/butterknife-compiler/src/test/java/butterknife/OnClickTest.java
index e2c4ed3..1e596e4 100644
--- a/butterknife-compiler/src/test/java/butterknife/OnClickTest.java
+++ b/butterknife-compiler/src/test/java/butterknife/OnClickTest.java
@@ -21,15 +21,14 @@ public class OnClickTest {
 
     JavaFileObject binderSource = JavaFileObjects.forSourceString("test/Test_ViewBinder", ""
         + "package test;\n"
+        + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
-        + "import butterknife.internal.Finder;\n"
         + "import butterknife.internal.ViewBinder;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public final class Test_ViewBinder implements ViewBinder<Test> {\n"
         + "  @Override\n"
-        + "  public Unbinder bind(Finder finder, Test target, Object source) {\n"
-        + "    return new Test_ViewBinding<>(target, finder, source);\n"
+        + "  public Unbinder bind(Test target, View source) {\n"
+        + "    return new Test_ViewBinding<>(target, source);\n"
         + "  }\n"
         + "}"
     );
@@ -39,17 +38,16 @@ public class OnClickTest {
         + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
         + "import butterknife.internal.DebouncingOnClickListener;\n"
-        + "import butterknife.internal.Finder;\n"
+        + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public class Test_ViewBinding<T extends Test> implements Unbinder {\n"
         + "  protected T target;\n"
         + "  private View view1;\n"
-        + "  public Test_ViewBinding(final T target, Finder finder, Object source) {\n"
+        + "  public Test_ViewBinding(final T target, View source) {\n"
         + "    this.target = target;\n"
         + "    View view;\n"
-        + "    view = finder.findRequiredView(source, 1, \"method 'doStuff'\");\n"
+        + "    view = Utils.findRequiredView(source, 1, \"method 'doStuff'\");\n"
         + "    view1 = view;\n"
         + "    view.setOnClickListener(new DebouncingOnClickListener() {\n"
         + "      @Override\n"
@@ -87,15 +85,14 @@ public class OnClickTest {
 
     JavaFileObject binderSource = JavaFileObjects.forSourceString("test/Test_ViewBinder", ""
         + "package test;\n"
+        + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
-        + "import butterknife.internal.Finder;\n"
         + "import butterknife.internal.ViewBinder;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public final class Test_ViewBinder implements ViewBinder<Test> {\n"
         + "  @Override\n"
-        + "  public Unbinder bind(Finder finder, final Test target, Object source) {\n"
-        + "    return new Test_ViewBinding(target, finder, source);\n"
+        + "  public Unbinder bind(final Test target, View source) {\n"
+        + "    return new Test_ViewBinding(target, source);\n"
         + "  }\n"
         + "}"
     );
@@ -105,17 +102,16 @@ public class OnClickTest {
         + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
         + "import butterknife.internal.DebouncingOnClickListener;\n"
-        + "import butterknife.internal.Finder;\n"
+        + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public final class Test_ViewBinding implements Unbinder {\n"
         + "  private Test target;\n"
         + "  private View view1;\n"
-        + "  public Test_ViewBinding(final Test target, Finder finder, Object source) {\n"
+        + "  public Test_ViewBinding(final Test target, View source) {\n"
         + "    this.target = target;\n"
         + "    View view;\n"
-        + "    view = finder.findRequiredView(source, 1, \"method 'doStuff'\");\n"
+        + "    view = Utils.findRequiredView(source, 1, \"method 'doStuff'\");\n"
         + "    view1 = view;\n"
         + "    view.setOnClickListener(new DebouncingOnClickListener() {\n"
         + "      @Override\n"
@@ -156,15 +152,14 @@ public class OnClickTest {
 
     JavaFileObject binderSource = JavaFileObjects.forSourceString("test/Test_ViewBinder", ""
         + "package test;\n"
+        + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
-        + "import butterknife.internal.Finder;\n"
         + "import butterknife.internal.ViewBinder;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public final class Test_ViewBinder implements ViewBinder<Test> {\n"
         + "  @Override\n"
-        + "  public Unbinder bind(Finder finder, Test target, Object source) {\n"
-        + "    return new Test_ViewBinding<>(target, finder, source);\n"
+        + "  public Unbinder bind(Test target, View source) {\n"
+        + "    return new Test_ViewBinding<>(target, source);\n"
         + "  }\n"
         + "}"
     );
@@ -174,18 +169,17 @@ public class OnClickTest {
         + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
         + "import butterknife.internal.DebouncingOnClickListener;\n"
-        + "import butterknife.internal.Finder;\n"
+        + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public class Test_ViewBinding<T extends Test> implements Unbinder {\n"
         + "  protected T target;\n"
         + "  private View view1;\n"
         + "  private View view2;\n"
-        + "  public Test_ViewBinding(final T target, Finder finder, Object source) {\n"
+        + "  public Test_ViewBinding(final T target, View source) {\n"
         + "    this.target = target;\n"
         + "    View view;\n"
-        + "    view = finder.findRequiredView(source, 1, \"method 'doStuff1', method 'doStuff2', and method 'doStuff3'\");\n"
+        + "    view = Utils.findRequiredView(source, 1, \"method 'doStuff1', method 'doStuff2', and method 'doStuff3'\");\n"
         + "    view1 = view;\n"
         + "    view.setOnClickListener(new DebouncingOnClickListener() {\n"
         + "      @Override\n"
@@ -195,7 +189,7 @@ public class OnClickTest {
         + "        target.doStuff3(p0);\n"
         + "      }\n"
         + "    });\n"
-        + "    view = finder.findRequiredView(source, 2, \"method 'doStuff3'\");\n"
+        + "    view = Utils.findRequiredView(source, 2, \"method 'doStuff3'\");\n"
         + "    view2 = view;\n"
         + "    view.setOnClickListener(new DebouncingOnClickListener() {\n"
         + "      @Override\n"
@@ -238,15 +232,14 @@ public class OnClickTest {
 
     JavaFileObject binderSource = JavaFileObjects.forSourceString("test/Test_ViewBinder", ""
         + "package test;\n"
+        + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
-        + "import butterknife.internal.Finder;\n"
         + "import butterknife.internal.ViewBinder;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public final class Test_ViewBinder implements ViewBinder<Test> {\n"
         + "  @Override\n"
-        + "  public Unbinder bind(Finder finder, Test target, Object source) {\n"
-        + "    return new Test_ViewBinding<>(target, finder, source);\n"
+        + "  public Unbinder bind(Test target, View source) {\n"
+        + "    return new Test_ViewBinding<>(target, source);\n"
         + "  }\n"
         + "}"
     );
@@ -256,17 +249,16 @@ public class OnClickTest {
         + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
         + "import butterknife.internal.DebouncingOnClickListener;\n"
-        + "import butterknife.internal.Finder;\n"
+        + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public class Test_ViewBinding<T extends Test> implements Unbinder {\n"
         + "  protected T target;\n"
         + "  private View view1;\n"
-        + "  public Test_ViewBinding(final T target, Finder finder, Object source) {\n"
+        + "  public Test_ViewBinding(final T target, View source) {\n"
         + "    this.target = target;\n"
         + "    View view;\n"
-        + "    view = finder.findRequiredView(source, 1, \"field 'view' and method 'doStuff'\");\n"
+        + "    view = Utils.findRequiredView(source, 1, \"field 'view' and method 'doStuff'\");\n"
         + "    target.view = view;\n"
         + "    view1 = view;\n"
         + "    view.setOnClickListener(new DebouncingOnClickListener() {\n"
@@ -333,15 +325,14 @@ public class OnClickTest {
 
     JavaFileObject binderSource = JavaFileObjects.forSourceString("test/Test_ViewBinder", ""
         + "package test;\n"
+        + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
-        + "import butterknife.internal.Finder;\n"
         + "import butterknife.internal.ViewBinder;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public final class Test_ViewBinder implements ViewBinder<Test> {\n"
         + "  @Override\n"
-        + "  public Unbinder bind(Finder finder, Test target, Object source) {\n"
-        + "    return new Test_ViewBinding<>(target, finder, source);\n"
+        + "  public Unbinder bind(Test target, View source) {\n"
+        + "    return new Test_ViewBinding<>(target, source);\n"
         + "  }\n"
         + "}"
     );
@@ -353,9 +344,8 @@ public class OnClickTest {
         + "import android.widget.TextView;\n"
         + "import butterknife.Unbinder;\n"
         + "import butterknife.internal.DebouncingOnClickListener;\n"
-        + "import butterknife.internal.Finder;\n"
+        + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public class Test_ViewBinding<T extends Test> implements Unbinder {\n"
         + "  protected T target;\n"
@@ -364,10 +354,10 @@ public class OnClickTest {
         + "  private View view2;\n"
         + "  private View view3;\n"
         + "  private View view4;\n"
-        + "  public Test_ViewBinding(final T target, final Finder finder, Object source) {\n"
+        + "  public Test_ViewBinding(final T target, View source) {\n"
         + "    this.target = target;\n"
         + "    View view;\n"
-        + "    view = finder.findRequiredView(source, 0, \"method 'click0'\");\n"
+        + "    view = Utils.findRequiredView(source, 0, \"method 'click0'\");\n"
         + "    view0 = view;\n"
         + "    view.setOnClickListener(new DebouncingOnClickListener() {\n"
         + "      @Override\n"
@@ -375,7 +365,7 @@ public class OnClickTest {
         + "        target.click0();\n"
         + "      }\n"
         + "    });\n"
-        + "    view = finder.findRequiredView(source, 1, \"method 'click1'\");\n"
+        + "    view = Utils.findRequiredView(source, 1, \"method 'click1'\");\n"
         + "    view1 = view;\n"
         + "    view.setOnClickListener(new DebouncingOnClickListener() {\n"
         + "      @Override\n"
@@ -383,28 +373,28 @@ public class OnClickTest {
         + "        target.click1(p0);\n"
         + "      }\n"
         + "    });\n"
-        + "    view = finder.findRequiredView(source, 2, \"method 'click2'\");\n"
+        + "    view = Utils.findRequiredView(source, 2, \"method 'click2'\");\n"
         + "    view2 = view;\n"
         + "    view.setOnClickListener(new DebouncingOnClickListener() {\n"
         + "      @Override\n"
         + "      public void doClick(View p0) {\n"
-        + "        target.click2(finder.<TextView>castParam(p0, \"doClick\", 0, \"click2\", 0));\n"
+        + "        target.click2(Utils.<TextView>castParam(p0, \"doClick\", 0, \"click2\", 0));\n"
         + "      }\n"
         + "    });\n"
-        + "    view = finder.findRequiredView(source, 3, \"method 'click3'\");\n"
+        + "    view = Utils.findRequiredView(source, 3, \"method 'click3'\");\n"
         + "    view3 = view;\n"
         + "    view.setOnClickListener(new DebouncingOnClickListener() {\n"
         + "      @Override\n"
         + "      public void doClick(View p0) {\n"
-        + "        target.click3(finder.<Button>castParam(p0, \"doClick\", 0, \"click3\", 0));\n"
+        + "        target.click3(Utils.<Button>castParam(p0, \"doClick\", 0, \"click3\", 0));\n"
         + "      }\n"
         + "    });\n"
-        + "    view = finder.findRequiredView(source, 4, \"method 'click4'\");\n"
+        + "    view = Utils.findRequiredView(source, 4, \"method 'click4'\");\n"
         + "    view4 = view;\n"
         + "    view.setOnClickListener(new DebouncingOnClickListener() {\n"
         + "      @Override\n"
         + "      public void doClick(View p0) {\n"
-        + "        target.click4(finder.<Test.TestInterface>castParam(p0, \"doClick\", 0, \"click4\", 0));\n"
+        + "        target.click4(Utils.<Test.TestInterface>castParam(p0, \"doClick\", 0, \"click4\", 0));\n"
         + "      }\n"
         + "    });\n"
         + "  }\n"
@@ -446,15 +436,14 @@ public class OnClickTest {
 
     JavaFileObject binderSource = JavaFileObjects.forSourceString("test/Test_ViewBinder", ""
         + "package test;\n"
+        + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
-        + "import butterknife.internal.Finder;\n"
         + "import butterknife.internal.ViewBinder;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public final class Test_ViewBinder implements ViewBinder<Test> {\n"
         + "  @Override\n"
-        + "  public Unbinder bind(Finder finder, Test target, Object source) {\n"
-        + "    return new Test_ViewBinding<>(target, finder, source);\n"
+        + "  public Unbinder bind(Test target, View source) {\n"
+        + "    return new Test_ViewBinding<>(target, source);\n"
         + "  }\n"
         + "}"
     );
@@ -464,19 +453,18 @@ public class OnClickTest {
         + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
         + "import butterknife.internal.DebouncingOnClickListener;\n"
-        + "import butterknife.internal.Finder;\n"
+        + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public class Test_ViewBinding<T extends Test> implements Unbinder {\n"
         + "  protected T target;\n"
         + "  private View view1;\n"
         + "  private View view2;\n"
         + "  private View view3;\n"
-        + "  public Test_ViewBinding(final T target, Finder finder, Object source) {\n"
+        + "  public Test_ViewBinding(final T target, View source) {\n"
         + "    this.target = target;\n"
         + "    View view;\n"
-        + "    view = finder.findRequiredView(source, 1, \"method 'click'\");\n"
+        + "    view = Utils.findRequiredView(source, 1, \"method 'click'\");\n"
         + "    view1 = view;\n"
         + "    view.setOnClickListener(new DebouncingOnClickListener() {\n"
         + "      @Override\n"
@@ -484,7 +472,7 @@ public class OnClickTest {
         + "        target.click();\n"
         + "      }\n"
         + "    });\n"
-        + "    view = finder.findRequiredView(source, 2, \"method 'click'\");\n"
+        + "    view = Utils.findRequiredView(source, 2, \"method 'click'\");\n"
         + "    view2 = view;\n"
         + "    view.setOnClickListener(new DebouncingOnClickListener() {\n"
         + "      @Override\n"
@@ -492,7 +480,7 @@ public class OnClickTest {
         + "        target.click();\n"
         + "      }\n"
         + "    });\n"
-        + "    view = finder.findRequiredView(source, 3, \"method 'click'\");\n"
+        + "    view = Utils.findRequiredView(source, 3, \"method 'click'\");\n"
         + "    view3 = view;\n"
         + "    view.setOnClickListener(new DebouncingOnClickListener() {\n"
         + "      @Override\n"
@@ -534,15 +522,14 @@ public class OnClickTest {
 
     JavaFileObject binderSource = JavaFileObjects.forSourceString("test/Test_ViewBinder", ""
         + "package test;\n"
+        + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
-        + "import butterknife.internal.Finder;\n"
         + "import butterknife.internal.ViewBinder;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public final class Test_ViewBinder implements ViewBinder<Test> {\n"
         + "  @Override\n"
-        + "  public Unbinder bind(Finder finder, Test target, Object source) {\n"
-        + "    return new Test_ViewBinding<>(target, finder, source);\n"
+        + "  public Unbinder bind(Test target, View source) {\n"
+        + "    return new Test_ViewBinding<>(target, source);\n"
         + "  }\n"
         + "}"
     );
@@ -552,17 +539,15 @@ public class OnClickTest {
         + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
         + "import butterknife.internal.DebouncingOnClickListener;\n"
-        + "import butterknife.internal.Finder;\n"
         + "import java.lang.IllegalStateException;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public class Test_ViewBinding<T extends Test> implements Unbinder {\n"
         + "  protected T target;\n"
         + "  private View view1;\n"
-        + "  public Test_ViewBinding(final T target, Finder finder, Object source) {\n"
+        + "  public Test_ViewBinding(final T target, View source) {\n"
         + "    this.target = target;\n"
         + "    View view;\n"
-        + "    view = finder.findOptionalView(source, 1);\n"
+        + "    view = source.findViewById(1);\n"
         + "    if (view != null) {\n"
         + "      view1 = view;\n"
         + "      view.setOnClickListener(new DebouncingOnClickListener() {\n"
@@ -609,15 +594,14 @@ public class OnClickTest {
 
     JavaFileObject binderSource = JavaFileObjects.forSourceString("test/Test_ViewBinder", ""
         + "package test;\n"
+        + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
-        + "import butterknife.internal.Finder;\n"
         + "import butterknife.internal.ViewBinder;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public final class Test_ViewBinder implements ViewBinder<Test> {\n"
         + "  @Override\n"
-        + "  public Unbinder bind(Finder finder, Test target, Object source) {\n"
-        + "    return new Test_ViewBinding<>(target, finder, source);\n"
+        + "  public Unbinder bind(Test target, View source) {\n"
+        + "    return new Test_ViewBinding<>(target, source);\n"
         + "  }\n"
         + "}"
     );
@@ -627,17 +611,16 @@ public class OnClickTest {
         + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
         + "import butterknife.internal.DebouncingOnClickListener;\n"
-        + "import butterknife.internal.Finder;\n"
+        + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public class Test_ViewBinding<T extends Test> implements Unbinder {\n"
         + "  protected T target;\n"
         + "  private View view1;\n"
-        + "  public Test_ViewBinding(final T target, Finder finder, Object source) {\n"
+        + "  public Test_ViewBinding(final T target, View source) {\n"
         + "    this.target = target;\n"
         + "    View view;\n"
-        + "    view = finder.findRequiredView(source, 1, \"field 'view'\");\n"
+        + "    view = Utils.findRequiredView(source, 1, \"field 'view'\");\n"
         + "    target.view = view;\n"
         + "    view1 = view;\n"
         + "    view.setOnClickListener(new DebouncingOnClickListener() {\n"
