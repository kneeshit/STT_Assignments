diff --git a/dist/alpine.js b/dist/alpine.js
index 7a8c53e7..597f0e7d 100644
--- a/dist/alpine.js
+++ b/dist/alpine.js
@@ -561,14 +561,7 @@
           el.checked = el.value == value;
         }
       } else if (el.type === 'checkbox') {
-        if (Array.isArray(value)) {
-          // I'm purposely not using Array.includes here because it's
-          // strict, and because of Numeric/String mis-casting, I
-          // want the "includes" to be "fuzzy".
-          el.checked = value.some(val => val == el.value);
-        } else {
-          el.checked = !!value;
-        } // If we are explicitly binding a string to the :value, set the string,
+        // If we are explicitly binding a string to the :value, set the string,
         // If the value is a boolean, leave it alone, it will be set to "on"
         // automatically.
         if (typeof value === 'string' && attrType === 'bind') {
@@ -578,13 +571,7 @@
             // I'm purposely not using Array.includes here because it's
             // strict, and because of Numeric/String mis-casting, I
             // want the "includes" to be "fuzzy".
-            let valueFound = false;
-            value.forEach(val => {
-              if (val == el.value) {
-                valueFound = true;
-              }
-            });
-            el.checked = valueFound;
+            el.checked = value.some(val => val == el.value);
           } else {
             el.checked = !!value;
           }
@@ -1718,11 +1705,13 @@
     },
     initializeComponent: function initializeComponent(el) {
       if (!el.__x) {
+        // Wrap in a try/catch so that we don't prevent other components
+        // from initializing when one component contains an error.
         try {
           el.__x = new Component(el);
-        } catch (err) {
-          window.setTimeout(() => {
-            throw err;
+        } catch (error) {
+          setTimeout(() => {
+            throw error;
           }, 0);
         }
       }
