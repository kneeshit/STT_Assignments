diff --git a/butterknife-compiler/src/test/java/butterknife/OnFocusChangeTest.java b/butterknife-compiler/src/test/java/butterknife/OnFocusChangeTest.java
index 4d8c3e3..b0af23d 100644
--- a/butterknife-compiler/src/test/java/butterknife/OnFocusChangeTest.java
+++ b/butterknife-compiler/src/test/java/butterknife/OnFocusChangeTest.java
@@ -31,14 +31,16 @@ public class OnFocusChangeTest {
         + "public class Test$$ViewBinder<T extends Test> implements ViewBinder<T> {\n"
         + "  @Override\n"
         + "  public Unbinder bind(Finder finder, T target, Object source) {\n"
-        + "    InnerUnbinder unbinder = new InnerUnbinder(target);\n"
-        + "    bindToTarget(target, finder, source, unbinder);\n"
-        + "    return unbinder;\n"
+        + "    return new InnerUnbinder(target, finder, source);\n"
         + "  }\n"
-        + "  protected static void bindToTarget(final Test target, Finder finder, Object source, InnerUnbinder unbinder) {\n"
+        + "  protected static class InnerUnbinder<T extends Test> implements Unbinder {\n"
+        + "    protected T target;\n"
+        + "    private View view1;\n"
+        + "    protected InnerUnbinder(final T target, Finder finder, Object source) {\n"
+        + "      this.target = target;\n"
         + "      View view;\n"
         + "      view = finder.findRequiredView(source, 1, \"method 'doStuff'\");\n"
-        + "    unbinder.view1 = view;\n"
+        + "      view1 = view;\n"
         + "      view.setOnFocusChangeListener(new View.OnFocusChangeListener() {\n"
         + "        @Override\n"
         + "        public void onFocusChange(View p0, boolean p1) {\n"
@@ -46,12 +48,6 @@ public class OnFocusChangeTest {
         + "        }\n"
         + "      });\n"
         + "    }\n"
-        + "  protected static class InnerUnbinder<T extends Test> implements Unbinder {\n"
-        + "    protected T target;\n"
-        + "    View view1;\n"
-        + "    protected InnerUnbinder(T target) {\n"
-        + "      this.target = target;\n"
-        + "    }\n"
         + "    @Override\n"
         + "    public void unbind() {\n"
         + "      if (this.target == null) throw new IllegalStateException(\"Bindings already cleared.\");\n"
