diff --git a/butterknife-integration-test/src/androidTest/java/com/example/butterknife/functional/BindDimenTest.java b/butterknife-integration-test/src/androidTest/java/com/example/butterknife/functional/BindDimenTest.java
new file mode 100644
index 0000000..f9c3790
--- /dev/null
+++ b/butterknife-integration-test/src/androidTest/java/com/example/butterknife/functional/BindDimenTest.java
@@ -0,0 +1,48 @@
+package com.example.butterknife.functional;
+
+import android.content.Context;
+import android.view.View;
+import androidx.test.InstrumentationRegistry;
+import butterknife.BindDimen;
+import butterknife.ButterKnife;
+import butterknife.Unbinder;
+import com.example.butterknife.test.R;
+import org.junit.Test;
+
+import static com.example.butterknife.functional.ViewTestUtils.treeWithIds;
+import static com.google.common.truth.Truth.assertThat;
+
+public final class BindDimenTest {
+  private final Context context = InstrumentationRegistry.getContext();
+  private final View tree = treeWithIds(1);
+
+  static class IntTarget {
+    @BindDimen(R.dimen.twelve_point_two_dp) int actual;
+  }
+
+  @Test public void asInt() {
+    IntTarget target = new IntTarget();
+    int expected = context.getResources().getDimensionPixelSize(R.dimen.twelve_point_two_dp);
+
+    Unbinder unbinder = ButterKnife.bind(target, tree);
+    assertThat(target.actual).isEqualTo(expected);
+
+    unbinder.unbind();
+    assertThat(target.actual).isEqualTo(expected);
+  }
+
+  static class FloatTarget {
+    @BindDimen(R.dimen.twelve_point_two_dp) float actual;
+  }
+
+  @Test public void asFloat() {
+    FloatTarget target = new FloatTarget();
+    float expected = context.getResources().getDimension(R.dimen.twelve_point_two_dp);
+
+    Unbinder unbinder = ButterKnife.bind(target, tree);
+    assertThat(target.actual).isEqualTo(expected);
+
+    unbinder.unbind();
+    assertThat(target.actual).isEqualTo(expected);
+  }
+}
