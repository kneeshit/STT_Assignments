diff --git a/dist/alpine.js b/dist/alpine.js
index 477f01d3..4ad2dcc9 100644
--- a/dist/alpine.js
+++ b/dist/alpine.js
@@ -419,33 +419,20 @@
       requestAnimationFrame(() => {
         stages.end(); // Assign current transition to el in case we need to force it.
 
-        el.__x_transition_remaining = once(() => {
+        setTimeout(() => {
           stages.hide(); // Adding an "isConnected" check, in case the callback
           // removed the element from the DOM.
 
           if (el.isConnected) {
             stages.cleanup();
-          } // Safe to remove transition from el since it is completed.
-
-
-          delete el.__x_transition_remaining;
-        });
-        setTimeout(el.__x_transition_remaining, duration);
+          }
+        }, duration);
       });
     });
   }
   function isNumeric(subject) {
     return !isNaN(subject);
   }
-  function once(callback) {
-    let called = false;
-    return function () {
-      if (!called) {
-        called = true;
-        callback.apply(this, arguments);
-      }
-    };
-  }
 
   function handleForDirective(component, templateEl, expression, initialUpdate, extraVars) {
     warnIfMalformedTemplate(templateEl, 'x-for');
@@ -663,11 +650,6 @@
   }
 
   function handleShowDirective(component, el, value, modifiers, initialUpdate = false) {
-    // if value is changed resolve any previous pending transitions before starting a new one.
-    if (el.__x_transition_remaining && el.__x_transition_last_value !== value) {
-      el.__x_transition_remaining();
-    }
-
     const hide = () => {
       el.style.display = 'none';
     };
@@ -681,9 +663,6 @@
     };
 
     if (initialUpdate === true) {
-      // Assign current value to el to check later on for preventing transition overlaps.
-      el.__x_transition_last_value = value;
-
       if (value) {
         show();
       } else {
@@ -709,10 +688,7 @@
         } else {
           resolve(() => {});
         }
-      } // Assign current value to el.
-
-
-      el.__x_transition_last_value = value;
+      }
     }; // The working of x-show is a bit complex because we need to
     // wait for any child transitions to finish before hiding
     // some element. Also, this has to be done recursively.
@@ -731,12 +707,9 @@
       component.executeAndClearRemainingShowDirectiveStack();
     }
 
-    if (el.__x_transition_last_value !== value) {
-      // We'll push the handler onto a stack to be handled later.
     component.showDirectiveStack.push(handle);
     component.showDirectiveLastElement = el;
   }
-  }
 
   function handleIfDirective(component, el, expressionResult, initialUpdate, extraVars) {
     warnIfMalformedTemplate(el, 'x-if');
