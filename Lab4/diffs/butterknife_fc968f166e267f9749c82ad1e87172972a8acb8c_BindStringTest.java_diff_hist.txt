diff --git a/butterknife-compiler/src/test/java/butterknife/BindStringTest.java b/butterknife-compiler/src/test/java/butterknife/BindStringTest.java
index 79ad152..2dee904 100644
--- a/butterknife-compiler/src/test/java/butterknife/BindStringTest.java
+++ b/butterknife-compiler/src/test/java/butterknife/BindStringTest.java
@@ -49,6 +49,43 @@ public class BindStringTest {
         .generatesSources(expectedSource);
   }
 
+  @Test public void finalClass() {
+    JavaFileObject source = JavaFileObjects.forSourceString("test.Test", ""
+        + "package test;\n"
+        + "import android.app.Activity;\n"
+        + "import butterknife.BindString;\n"
+        + "public final class Test extends Activity {\n"
+        + "  @BindString(1) String one;\n"
+        + "}"
+    );
+
+    JavaFileObject expectedSource = JavaFileObjects.forSourceString("test/Test$$ViewBinder", ""
+        + "package test;\n"
+        + "import android.content.res.Resources;\n"
+        + "import butterknife.Unbinder;\n"
+        + "import butterknife.internal.Finder;\n"
+        + "import butterknife.internal.ViewBinder;\n"
+        + "import java.lang.Object;\n"
+        + "import java.lang.Override;\n"
+        + "import java.lang.SuppressWarnings;\n"
+        + "public final class Test$$ViewBinder implements ViewBinder<Test> {\n"
+        + "  @Override\n"
+        + "  @SuppressWarnings(\"ResourceType\")"
+        + "  public Unbinder bind(Finder finder, Test target, Object source) {\n"
+        + "    Resources res = finder.getContext(source).getResources();\n"
+        + "    target.one = res.getString(1);\n"
+        + "    return Unbinder.EMPTY;\n"
+        + "  }\n"
+        + "}"
+    );
+
+    assertAbout(javaSource()).that(source)
+        .processedWith(new ButterKnifeProcessor())
+        .compilesWithoutError()
+        .and()
+        .generatesSources(expectedSource);
+  }
+
   @Test public void typeMustBeString() {
     JavaFileObject source = JavaFileObjects.forSourceString("test.Test", ""
         + "package test;\n"
