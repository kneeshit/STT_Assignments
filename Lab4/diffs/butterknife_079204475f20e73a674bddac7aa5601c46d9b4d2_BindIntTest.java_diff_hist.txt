diff --git a/butterknife-compiler/src/test/java/butterknife/BindIntTest.java b/butterknife-compiler/src/test/java/butterknife/BindIntTest.java
index 2e6e2ee..f8a0157 100644
--- a/butterknife-compiler/src/test/java/butterknife/BindIntTest.java
+++ b/butterknife-compiler/src/test/java/butterknife/BindIntTest.java
@@ -19,26 +19,45 @@ public class BindIntTest {
         + "}"
     );
 
-    JavaFileObject expectedSource = JavaFileObjects.forSourceString("test/Test_ViewBinder", ""
+    JavaFileObject binderSource = JavaFileObjects.forSourceString("test/Test_ViewBinder", ""
+        + "// Generated code from Butter Knife. Do not modify!\n"
         + "package test;\n"
-        + "import android.content.Context;\n"
-        + "import android.content.res.Resources;\n"
+        + "\n"
         + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
         + "import butterknife.internal.ViewBinder;\n"
         + "import java.lang.Override;\n"
-        + "import java.lang.SuppressWarnings;\n"
+        + "\n"
         + "public final class Test_ViewBinder implements ViewBinder<Test> {\n"
         + "  @Override\n"
         + "  public Unbinder bind(Test target, View source) {\n"
-        + "    bindToTarget(target, source.getContext());\n"
-        + "    return Unbinder.EMPTY;\n"
+        + "    return new Test_ViewBinding<>(target, source.getContext());\n"
         + "  }\n"
+        + "}"
+    );
+
+    JavaFileObject bindingSource = JavaFileObjects.forSourceString("test/Test_ViewBinding", ""
+        + "// Generated code from Butter Knife. Do not modify!\n"
+        + "package test;\n"
+        + "import android.content.Context;\n"
+        + "import android.content.res.Resources;\n"
+        + "import butterknife.Unbinder;\n"
+        + "import java.lang.IllegalStateException;\n"
+        + "import java.lang.Override;\n"
+        + "import java.lang.SuppressWarnings;\n"
+        + "public class Test_ViewBinding<T extends Test> implements Unbinder {\n"
+        + "  protected T target;\n"
         + "  @SuppressWarnings(\"ResourceType\")\n"
-        + "  public static void bindToTarget(Test target, Context context) {\n"
+        + "  public Test_ViewBinding(T target, Context context) {\n"
+        + "    this.target = target;\n"
         + "    Resources res = context.getResources();\n"
         + "    target.one = res.getInteger(1);\n"
         + "  }\n"
+        + "  @Override\n"
+        + "  public void unbind() {\n"
+        + "    if (this.target == null) throw new IllegalStateException(\"Bindings already cleared.\");\n"
+        + "    this.target = null;\n"
+        + "  }\n"
         + "}"
     );
 
@@ -46,7 +65,7 @@ public class BindIntTest {
         .processedWith(new ButterKnifeProcessor())
         .compilesWithoutWarnings()
         .and()
-        .generatesSources(expectedSource);
+        .generatesSources(binderSource, bindingSource);
   }
 
   @Test public void typeMustBeInt() {
