diff --git a/butterknife/src/main/java/butterknife/OnItemClick.java b/butterknife/src/main/java/butterknife/OnItemClick.java
index 4cce2e7..24ac6bb 100644
--- a/butterknife/src/main/java/butterknife/OnItemClick.java
+++ b/butterknife/src/main/java/butterknife/OnItemClick.java
@@ -1,6 +1,7 @@
 package butterknife;
 
 import butterknife.internal.ListenerClass;
+import butterknife.internal.ListenerMethod;
 import java.lang.annotation.Retention;
 import java.lang.annotation.Target;
 
@@ -10,22 +11,32 @@ import static java.lang.annotation.RetentionPolicy.CLASS;
 
 /**
  * Annotation for methods which indicate that they should be called when an item is clicked.
- * Corresponds to adding a {@link OnItemClickListener} to the views specified by {@link #value()}.
+ * Corresponds to adding a {@link OnItemClickListener OnItemClickListener} to the views specified.
  * <pre><code>
  * {@literal @}OnItemClick(R.id.example_list) void onItemClick(int position) {
  *   Toast.makeText(this, "Clicked position " + position + "!", LENGTH_SHORT).show();
  * }
  * </code></pre>
- * Any number of parameters from {@link OnItemClickListener} may be used on the method.
+ * Any number of parameters from {@link OnItemClickListener#onItemClick(android.widget.AdapterView,
+ * android.view.View, int, long) onItemClick} may be used on the method.
  *
  * @see OnItemClickListener
  * @see Optional
  */
-@Retention(CLASS) @Target(METHOD)
+@Target(METHOD)
+@Retention(CLASS)
 @ListenerClass(
     targetType = "android.widget.AdapterView<?>",
     setter = "setOnItemClickListener",
     type = "android.widget.AdapterView.OnItemClickListener",
+    callbacks = OnItemClick.Callback.class
+)
+public @interface OnItemClick {
+  int[] value();
+  Callback callback() default Callback.ITEM_CLICK;
+
+  enum Callback {
+    @ListenerMethod(
         name = "onItemClick",
         parameters = {
             "android.widget.AdapterView<?>",
@@ -34,6 +45,6 @@ import static java.lang.annotation.RetentionPolicy.CLASS;
             "long"
         }
     )
-public @interface OnItemClick {
-  int[] value();
+    ITEM_CLICK
+  }
 }
