diff --git a/butterknife-compiler/src/test/java/butterknife/OnClickTest.java b/butterknife-compiler/src/test/java/butterknife/OnClickTest.java
index 4a7f389..71e21a6 100644
--- a/butterknife-compiler/src/test/java/butterknife/OnClickTest.java
+++ b/butterknife-compiler/src/test/java/butterknife/OnClickTest.java
@@ -29,11 +29,11 @@ public class OnClickTest {
         + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
         + "import java.lang.Override;\n"
-        + "public class Test_ViewBinding<T extends Test> implements Unbinder {\n"
-        + "  protected T target;\n"
+        + "public class Test_ViewBinding implements Unbinder {\n"
+        + "  private Test target;\n"
         + "  private View view1;\n"
         + "  @UiThread\n"
-        + "  public Test_ViewBinding(final T target, View source) {\n"
+        + "  public Test_ViewBinding(final Test target, View source) {\n"
         + "    this.target = target;\n"
         + "    View view;\n"
         + "    view = Utils.findRequiredView(source, 1, \"method 'doStuff'\");\n"
@@ -48,10 +48,10 @@ public class OnClickTest {
         + "  @Override\n"
         + "  @CallSuper\n"
         + "  public void unbind() {\n"
-        + "    if (this.target == null) throw new IllegalStateException(\"Bindings already cleared.\");\n"
+        + "    if (target == null) throw new IllegalStateException(\"Bindings already cleared.\");\n"
+        + "    target = null;\n"
         + "    view1.setOnClickListener(null);\n"
         + "    view1 = null;\n"
-        + "    this.target = null;\n"
         + "  }\n"
         + "}"
     );
@@ -101,10 +101,10 @@ public class OnClickTest {
         + "  }\n"
         + "  @Override\n"
         + "  public void unbind() {\n"
-        + "    if (this.target == null) throw new IllegalStateException(\"Bindings already cleared.\");\n"
+        + "    if (target == null) throw new IllegalStateException(\"Bindings already cleared.\");\n"
+        + "    target = null;\n"
         + "    view1.setOnClickListener(null);\n"
         + "    view1 = null;\n"
-        + "    this.target = null;\n"
         + "  }\n"
         + "}"
     );
@@ -140,12 +140,12 @@ public class OnClickTest {
         + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
         + "import java.lang.Override;\n"
-        + "public class Test_ViewBinding<T extends Test> implements Unbinder {\n"
-        + "  protected T target;\n"
+        + "public class Test_ViewBinding implements Unbinder {\n"
+        + "  private Test target;\n"
         + "  private View view1;\n"
         + "  private View view2;\n"
         + "  @UiThread\n"
-        + "  public Test_ViewBinding(final T target, View source) {\n"
+        + "  public Test_ViewBinding(final Test target, View source) {\n"
         + "    this.target = target;\n"
         + "    View view;\n"
         + "    view = Utils.findRequiredView(source, 1, \"method 'doStuff1', method 'doStuff2', and method 'doStuff3'\");\n"
@@ -170,12 +170,12 @@ public class OnClickTest {
         + "  @Override\n"
         + "  @CallSuper\n"
         + "  public void unbind() {\n"
-        + "    if (this.target == null) throw new IllegalStateException(\"Bindings already cleared.\");\n"
+        + "    if (target == null) throw new IllegalStateException(\"Bindings already cleared.\");\n"
+        + "    target = null;\n"
         + "    view1.setOnClickListener(null);\n"
         + "    view1 = null;\n"
         + "    view2.setOnClickListener(null);\n"
         + "    view2 = null;\n"
-        + "    this.target = null;\n"
         + "  }\n"
         + "}"
     );
@@ -211,11 +211,11 @@ public class OnClickTest {
         + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
         + "import java.lang.Override;\n"
-        + "public class Test_ViewBinding<T extends Test> implements Unbinder {\n"
-        + "  protected T target;\n"
+        + "public class Test_ViewBinding implements Unbinder {\n"
+        + "  private Test target;\n"
         + "  private View view1;\n"
         + "  @UiThread\n"
-        + "  public Test_ViewBinding(final T target, View source) {\n"
+        + "  public Test_ViewBinding(final Test target, View source) {\n"
         + "    this.target = target;\n"
         + "    View view;\n"
         + "    view = Utils.findRequiredView(source, 1, \"field 'view' and method 'doStuff'\");\n"
@@ -231,12 +231,12 @@ public class OnClickTest {
         + "  @Override\n"
         + "  @CallSuper\n"
         + "  public void unbind() {\n"
-        + "    T target = this.target;\n"
+        + "    Test target = this.target;\n"
         + "    if (target == null) throw new IllegalStateException(\"Bindings already cleared.\");\n"
+        + "    this.target = null;\n"
         + "    target.view = null;\n"
         + "    view1.setOnClickListener(null);\n"
         + "    view1 = null;\n"
-        + "    this.target = null;\n"
         + "  }\n"
         + "}"
     );
@@ -298,15 +298,15 @@ public class OnClickTest {
         + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
         + "import java.lang.Override;\n"
-        + "public class Test_ViewBinding<T extends Test> implements Unbinder {\n"
-        + "  protected T target;\n"
+        + "public class Test_ViewBinding implements Unbinder {\n"
+        + "  private Test target;\n"
         + "  private View view0;\n"
         + "  private View view1;\n"
         + "  private View view2;\n"
         + "  private View view3;\n"
         + "  private View view4;\n"
         + "  @UiThread\n"
-        + "  public Test_ViewBinding(final T target, View source) {\n"
+        + "  public Test_ViewBinding(final Test target, View source) {\n"
         + "    this.target = target;\n"
         + "    View view;\n"
         + "    view = Utils.findRequiredView(source, 0, \"method 'click0'\");\n"
@@ -353,7 +353,8 @@ public class OnClickTest {
         + "  @Override\n"
         + "  @CallSuper\n"
         + "  public void unbind() {\n"
-        + "    if (this.target == null) throw new IllegalStateException(\"Bindings already cleared.\");\n"
+        + "    if (target == null) throw new IllegalStateException(\"Bindings already cleared.\");\n"
+        + "    target = null;\n"
         + "    view0.setOnClickListener(null);\n"
         + "    view0 = null;\n"
         + "    view1.setOnClickListener(null);\n"
@@ -364,7 +365,6 @@ public class OnClickTest {
         + "    view3 = null;\n"
         + "    view4.setOnClickListener(null);\n"
         + "    view4 = null;\n"
-        + "    this.target = null;\n"
         + "  }\n"
         + "}"
     );
@@ -398,13 +398,13 @@ public class OnClickTest {
         + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
         + "import java.lang.Override;\n"
-        + "public class Test_ViewBinding<T extends Test> implements Unbinder {\n"
-        + "  protected T target;\n"
+        + "public class Test_ViewBinding implements Unbinder {\n"
+        + "  private Test target;\n"
         + "  private View view1;\n"
         + "  private View view2;\n"
         + "  private View view3;\n"
         + "  @UiThread\n"
-        + "  public Test_ViewBinding(final T target, View source) {\n"
+        + "  public Test_ViewBinding(final Test target, View source) {\n"
         + "    this.target = target;\n"
         + "    View view;\n"
         + "    view = Utils.findRequiredView(source, 1, \"method 'click'\");\n"
@@ -435,14 +435,14 @@ public class OnClickTest {
         + "  @Override\n"
         + "  @CallSuper\n"
         + "  public void unbind() {\n"
-        + "    if (this.target == null) throw new IllegalStateException(\"Bindings already cleared.\");\n"
+        + "    if (target == null) throw new IllegalStateException(\"Bindings already cleared.\");\n"
+        + "    target = null;\n"
         + "    view1.setOnClickListener(null);\n"
         + "    view1 = null;\n"
         + "    view2.setOnClickListener(null);\n"
         + "    view2 = null;\n"
         + "    view3.setOnClickListener(null);\n"
         + "    view3 = null;\n"
-        + "    this.target = null;\n"
         + "  }\n"
         + "}"
     );
@@ -474,11 +474,11 @@ public class OnClickTest {
         + "import butterknife.internal.DebouncingOnClickListener;\n"
         + "import java.lang.IllegalStateException;\n"
         + "import java.lang.Override;\n"
-        + "public class Test_ViewBinding<T extends Test> implements Unbinder {\n"
-        + "  protected T target;\n"
+        + "public class Test_ViewBinding implements Unbinder {\n"
+        + "  private Test target;\n"
         + "  private View view1;\n"
         + "  @UiThread\n"
-        + "  public Test_ViewBinding(final T target, View source) {\n"
+        + "  public Test_ViewBinding(final Test target, View source) {\n"
         + "    this.target = target;\n"
         + "    View view;\n"
         + "    view = source.findViewById(1);\n"
@@ -495,12 +495,12 @@ public class OnClickTest {
         + "  @Override\n"
         + "  @CallSuper\n"
         + "  public void unbind() {\n"
-        + "    if (this.target == null) throw new IllegalStateException(\"Bindings already cleared.\");\n"
+        + "    if (target == null) throw new IllegalStateException(\"Bindings already cleared.\");\n"
+        + "    target = null;\n"
         + "    if (view1 != null) {\n"
         + "      view1.setOnClickListener(null);\n"
         + "      view1 = null;\n"
         + "    }\n"
-        + "    this.target = null;\n"
         + "  }\n"
         + "}"
     );
@@ -537,11 +537,11 @@ public class OnClickTest {
         + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
         + "import java.lang.Override;\n"
-        + "public class Test_ViewBinding<T extends Test> implements Unbinder {\n"
-        + "  protected T target;\n"
+        + "public class Test_ViewBinding implements Unbinder {\n"
+        + "  private Test target;\n"
         + "  private View view1;\n"
         + "  @UiThread\n"
-        + "  public Test_ViewBinding(final T target, View source) {\n"
+        + "  public Test_ViewBinding(final Test target, View source) {\n"
         + "    this.target = target;\n"
         + "    View view;\n"
         + "    view = Utils.findRequiredView(source, 1, \"field 'view'\");\n"
@@ -557,12 +557,12 @@ public class OnClickTest {
         + "  @Override\n"
         + "  @CallSuper\n"
         + "  public void unbind() {\n"
-        + "    T target = this.target;\n"
+        + "    Test target = this.target;\n"
         + "    if (target == null) throw new IllegalStateException(\"Bindings already cleared.\");\n"
+        + "    this.target = null;\n"
         + "    target.view = null;\n"
         + "    view1.setOnClickListener(null);\n"
         + "    view1 = null;\n"
-        + "    this.target = null;\n"
         + "  }\n"
         + "}"
     );
