diff --git a/butterknife-compiler/src/test/java/butterknife/BindColorTest.java b/butterknife-compiler/src/test/java/butterknife/BindColorTest.java
index 7dec740..7cd18f7 100644
--- a/butterknife-compiler/src/test/java/butterknife/BindColorTest.java
+++ b/butterknife-compiler/src/test/java/butterknife/BindColorTest.java
@@ -19,35 +19,28 @@ public class BindColorTest {
         + "}"
     );
 
-    JavaFileObject binderSource = JavaFileObjects.forSourceString("test/Test_ViewBinder", ""
-        + "// Generated code from Butter Knife. Do not modify!\n"
-        + "package test;\n"
-        + "\n"
-        + "import android.view.View;\n"
-        + "import butterknife.Unbinder;\n"
-        + "import butterknife.internal.ViewBinder;\n"
-        + "import java.lang.Override;\n"
-        + "\n"
-        + "public final class Test_ViewBinder implements ViewBinder<Test> {\n"
-        + "  @Override\n"
-        + "  public Unbinder bind(Test target, View source) {\n"
-        + "    return new Test_ViewBinding<>(target, source.getContext());\n"
-        + "  }\n"
-        + "}"
-    );
-
     JavaFileObject bindingSource = JavaFileObjects.forSourceString("test/Test_ViewBinding", ""
         + "// Generated code from Butter Knife. Do not modify!\n"
         + "package test;\n"
         + "import android.content.Context;\n"
         + "import android.content.res.Resources;\n"
+        + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
         + "import butterknife.internal.Utils;\n"
+        + "import java.lang.Deprecated;\n"
         + "import java.lang.IllegalStateException;\n"
         + "import java.lang.Override;\n"
         + "import java.lang.SuppressWarnings;\n"
         + "public class Test_ViewBinding<T extends Test> implements Unbinder {\n"
         + "  protected T target;\n"
+        + "  /**\n"
+        + "   * @deprecated Use {@link #Test_ViewBinding(T, Context)} for direct creation.\n"
+        + "   *     Only present for runtime invocation through {@code ButterKnife.bind()}.\n"
+        + "   */\n"
+        + "  @Deprecated\n"
+        + "  public Test_ViewBinding(T target, View source) {\n"
+        + "    this(target, source.getContext());\n"
+        + "  }\n"
         + "  @SuppressWarnings(\"ResourceType\")\n"
         + "  public Test_ViewBinding(T target, Context context) {\n"
         + "    this.target = target;\n"
@@ -67,7 +60,7 @@ public class BindColorTest {
         .processedWith(new ButterKnifeProcessor())
         .compilesWithoutWarnings()
         .and()
-        .generatesSources(binderSource, bindingSource);
+        .generatesSources(bindingSource);
   }
 
   @Test public void simpleColorStateList() {
@@ -81,35 +74,28 @@ public class BindColorTest {
         +"}"
     );
 
-    JavaFileObject binderSource = JavaFileObjects.forSourceString("test/Test_ViewBinder", ""
-        + "// Generated code from Butter Knife. Do not modify!\n"
-        + "package test;\n"
-        + "\n"
-        + "import android.view.View;\n"
-        + "import butterknife.Unbinder;\n"
-        + "import butterknife.internal.ViewBinder;\n"
-        + "import java.lang.Override;\n"
-        + "\n"
-        + "public final class Test_ViewBinder implements ViewBinder<Test> {\n"
-        + "  @Override\n"
-        + "  public Unbinder bind(Test target, View source) {\n"
-        + "    return new Test_ViewBinding<>(target, source.getContext());\n"
-        + "  }\n"
-        + "}"
-    );
-
     JavaFileObject bindingSource = JavaFileObjects.forSourceString("test/Test_ViewBinding", ""
         + "// Generated code from Butter Knife. Do not modify!\n"
         + "package test;\n"
         + "import android.content.Context;\n"
         + "import android.content.res.Resources;\n"
+        + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
         + "import butterknife.internal.Utils;\n"
+        + "import java.lang.Deprecated;\n"
         + "import java.lang.IllegalStateException;\n"
         + "import java.lang.Override;\n"
         + "import java.lang.SuppressWarnings;\n"
         + "public class Test_ViewBinding<T extends Test> implements Unbinder {\n"
         + "  protected T target;\n"
+        + "  /**\n"
+        + "   * @deprecated Use {@link #Test_ViewBinding(T, Context)} for direct creation.\n"
+        + "   *     Only present for runtime invocation through {@code ButterKnife.bind()}.\n"
+        + "   */\n"
+        + "  @Deprecated\n"
+        + "  public Test_ViewBinding(T target, View source) {\n"
+        + "    this(target, source.getContext());\n"
+        + "  }\n"
         + "  @SuppressWarnings(\"ResourceType\")\n"
         + "  public Test_ViewBinding(T target, Context context) {\n"
         + "    this.target = target;\n"
@@ -129,7 +115,7 @@ public class BindColorTest {
         .processedWith(new ButterKnifeProcessor())
         .compilesWithoutWarnings()
         .and()
-        .generatesSources(binderSource, bindingSource);
+        .generatesSources(bindingSource);
   }
 
   @Test public void typeMustBeIntOrColorStateList() {
