diff --git a/openai/src/api/opengpt.rs b/openai/src/api/opengpt.rs
index 9718c5c..428f9a5 100644
--- a/openai/src/api/opengpt.rs
+++ b/openai/src/api/opengpt.rs
@@ -11,8 +11,7 @@ use tokio::sync::RwLock;
 
 use super::{
     models::{req, resp},
-    ApiError, ApiResult, PostConvoStreamResponse, RequestMethod, HEADER_UA, URL_CHATGPT_BACKEND,
-    URL_CHATGPT_PUBLIC,
+    ApiError, ApiResult, PostConvoStreamResponse, RequestMethod, HEADER_UA, URL_CHATGPT_API,
 };
 
 pub struct OpenGPT {
@@ -121,13 +120,16 @@ impl OpenGPT {
 
 impl OpenGPT {
     pub async fn get_models(&self) -> ApiResult<resp::GetModelsResponse> {
-        self.request(format!("{URL_CHATGPT_BACKEND}/models"), RequestMethod::GET)
+        self.request(
+            format!("{URL_CHATGPT_API}/backend-api/models"),
+            RequestMethod::GET,
+        )
         .await
     }
 
     pub async fn get_account_check(&self) -> ApiResult<resp::GetAccountsCheckResponse> {
         self.request(
-            format!("{URL_CHATGPT_BACKEND}/accounts/check"),
+            format!("{URL_CHATGPT_API}/backend-api/accounts/check"),
             RequestMethod::GET,
         )
         .await
@@ -135,7 +137,7 @@ impl OpenGPT {
 
     pub async fn get_account_check_4(&self) -> ApiResult<resp::GetAccountsCheckV4Response> {
         self.request(
-            format!("{URL_CHATGPT_BACKEND}/accounts/check/v4-2023-04-27"),
+            format!("{URL_CHATGPT_API}/backend-api/accounts/check/v4-2023-04-27"),
             RequestMethod::GET,
         )
         .await
@@ -148,7 +150,7 @@ impl OpenGPT {
         match req.conversation_id {
             Some(conversation_id) => {
                 self.request::<resp::GetConvoResonse>(
-                    format!("{URL_CHATGPT_BACKEND}/conversation/{conversation_id}"),
+                    format!("{URL_CHATGPT_API}/backend-api/conversation/{conversation_id}"),
                     RequestMethod::GET,
                 )
                 .await
@@ -163,7 +165,7 @@ impl OpenGPT {
     ) -> ApiResult<resp::GetConvosResponse> {
         self.request::<resp::GetConvosResponse>(
             format!(
-                "{URL_CHATGPT_BACKEND}/conversations?offset={}&limit={}&order=updated",
+                "{URL_CHATGPT_API}/backend-api/conversations?offset={}&limit={}&order=updated",
                 req.offset, req.limit
             ),
             RequestMethod::GET,
@@ -175,7 +177,7 @@ impl OpenGPT {
         &self,
         req: req::PostConvoRequest<'a>,
     ) -> ApiResult<PostConvoStreamResponse> {
-        let url = format!("{URL_CHATGPT_BACKEND}/conversation");
+        let url = format!("{URL_CHATGPT_API}/backend-api/conversation");
         let resp = self
             .client
             .post(url)
@@ -193,7 +195,7 @@ impl OpenGPT {
         &self,
         req: req::PostConvoRequest<'a>,
     ) -> ApiResult<Vec<resp::PostConvoResponse>> {
-        let url = format!("{URL_CHATGPT_BACKEND}/conversation");
+        let url = format!("{URL_CHATGPT_API}/backend-api/conversation");
         let resp = self
             .client
             .post(url)
@@ -237,7 +239,7 @@ impl OpenGPT {
         match &req.conversation_id {
             Some(conversation_id) => {
                 self.request_payload(
-                    format!("{URL_CHATGPT_BACKEND}/conversation/{conversation_id}"),
+                    format!("{URL_CHATGPT_API}/backend-api/conversation/{conversation_id}"),
                     RequestMethod::PATCH,
                     &req,
                 )
@@ -252,7 +254,7 @@ impl OpenGPT {
         req: req::PatchConvoRequest<'a>,
     ) -> ApiResult<resp::PatchConvoResponse> {
         self.request_payload(
-            format!("{URL_CHATGPT_BACKEND}/conversations"),
+            format!("{URL_CHATGPT_API}/backend-api/conversations"),
             RequestMethod::PATCH,
             &req,
         )
@@ -265,7 +267,7 @@ impl OpenGPT {
     ) -> ApiResult<resp::PostConvoGenTitleResponse> {
         self.request_payload(
             format!(
-                "{URL_CHATGPT_BACKEND}/conversation/gen_title/{}",
+                "{URL_CHATGPT_API}/backend-api/conversation/gen_title/{}",
                 req.conversation_id
             ),
             RequestMethod::POST,
@@ -279,7 +281,7 @@ impl OpenGPT {
         req: req::MessageFeedbackRequest<'a>,
     ) -> ApiResult<resp::MessageFeedbackResponse> {
         self.request_payload(
-            format!("{URL_CHATGPT_BACKEND}/conversation/message_feedbak"),
+            format!("{URL_CHATGPT_API}/backend-api/conversation/message_feedbak"),
             RequestMethod::POST,
             &req,
         )
@@ -288,7 +290,7 @@ impl OpenGPT {
 
     pub async fn get_conversation_limit(&self) -> ApiResult<resp::GetConvoLimitResponse> {
         self.request(
-            format!("{URL_CHATGPT_PUBLIC}/conversation/message_feedbak"),
+            format!("{URL_CHATGPT_API}/public-api/conversation_limit"),
             RequestMethod::GET,
         )
         .await
@@ -362,7 +364,7 @@ impl OpenGPTBuilder {
         OpenGPTBuilder {
             builder: client,
             api: OpenGPT {
-                api_prefix: String::from(URL_CHATGPT_BACKEND),
+                api_prefix: String::from(URL_CHATGPT_API),
                 client: reqwest::Client::new(),
                 access_token: RwLock::default(),
             },
