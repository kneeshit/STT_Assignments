diff --git a/src/directives/bind.js b/src/directives/bind.js
index f631da33..116c57a9 100644
--- a/src/directives/bind.js
+++ b/src/directives/bind.js
@@ -1,6 +1,6 @@
-import { arrayUnique, isBooleanAttr, convertClassStringToArray } from '../utils'
+import { arrayUnique, isBooleanAttr, convertClassStringToArray, camelCase } from '../utils'
 
-export function handleAttributeBindingDirective(component, el, attrName, expression, extraVars, attrType) {
+export function handleAttributeBindingDirective(component, el, attrName, expression, extraVars, attrType, modifiers) {
     var value = component.evaluateReturnExpression(el, expression, extraVars)
 
     if (attrName === 'value') {
@@ -63,6 +63,8 @@ export function handleAttributeBindingDirective(component, el, attrName, express
             el.setAttribute('class', arrayUnique(originalClasses.concat(newClasses)).join(' '))
         }
     } else {
+        attrName = modifiers.includes('camel') ? camelCase(attrName) : attrName
+
         // If an attribute's bound value is null, undefined or false, remove the attribute
         if ([null, undefined, false].includes(value)) {
             el.removeAttribute(attrName)
@@ -72,7 +74,7 @@ export function handleAttributeBindingDirective(component, el, attrName, express
     }
 }
 
-function setIfChanged(el, attrName, value) {
+function setIfChanged(el, attrName, value, namespaced = false) {
     if (el.getAttribute(attrName) != value){
         el.setAttribute(attrName, value)
     }
