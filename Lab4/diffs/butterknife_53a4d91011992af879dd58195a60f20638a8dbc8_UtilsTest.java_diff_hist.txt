diff --git a/butterknife/src/test/java/butterknife/internal/UtilsTest.java b/butterknife/src/test/java/butterknife/internal/UtilsTest.java
index 3608c8e..efbe883 100644
--- a/butterknife/src/test/java/butterknife/internal/UtilsTest.java
+++ b/butterknife/src/test/java/butterknife/internal/UtilsTest.java
@@ -1,11 +1,20 @@
 package butterknife.internal;
 
+import android.view.View;
+import butterknife.shadow.EditModeShadowView;
 import org.junit.Test;
+import org.junit.runner.RunWith;
+import org.robolectric.RobolectricTestRunner;
+import org.robolectric.RuntimeEnvironment;
+import org.robolectric.annotation.Config;
 
 import static butterknife.internal.Utils.arrayOf;
 import static butterknife.internal.Utils.listOf;
 import static com.google.common.truth.Truth.assertThat;
+import static org.junit.Assert.fail;
 
+@RunWith(RobolectricTestRunner.class)
+@Config(manifest = Config.NONE)
 public final class UtilsTest {
   @Test public void listOfFiltersNull() {
     assertThat(listOf(null, null, null)).isEmpty();
@@ -26,4 +35,29 @@ public final class UtilsTest {
     assertThat(arrayOf("One", null, "Two")).asList().containsExactly("One", "Two");
     assertThat(arrayOf(null, "One", "Two")).asList().containsExactly("One", "Two");
   }
+
+  @Test public void finderThrowsNiceError() {
+    View view = new View(RuntimeEnvironment.application);
+    try {
+      Utils.findRequiredView(view, android.R.id.button1, "yo mama");
+      fail();
+    } catch (IllegalStateException e) {
+      assertThat(e).hasMessage("Required view 'button1' with ID "
+          + android.R.id.button1
+          + " for yo mama was not found. If this view is optional add '@Nullable' (fields) or '@Optional' (methods) annotation.");
+    }
+  }
+
+  @Config(shadows = EditModeShadowView.class)
+  @Test public void finderThrowsLessNiceErrorInEditMode() {
+    View view = new View(RuntimeEnvironment.application);
+    try {
+      Utils.findRequiredView(view, android.R.id.button1, "yo mama");
+      fail();
+    } catch (IllegalStateException e) {
+      assertThat(e).hasMessage("Required view '<unavailable while editing>' "
+          + "with ID " + android.R.id.button1
+          + " for yo mama was not found. If this view is optional add '@Nullable' (fields) or '@Optional' (methods) annotation.");
+    }
+  }
 }
