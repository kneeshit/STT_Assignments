diff --git a/butterknife-compiler/src/test/java/butterknife/UnbinderTest.java b/butterknife-compiler/src/test/java/butterknife/UnbinderTest.java
index a7c61b1..738fe7b 100644
--- a/butterknife-compiler/src/test/java/butterknife/UnbinderTest.java
+++ b/butterknife-compiler/src/test/java/butterknife/UnbinderTest.java
@@ -769,13 +769,12 @@ public class UnbinderTest {
         + "public final class A_ViewBinder implements ViewBinder<A> {\n"
         + "  @Override\n"
         + "  public Unbinder bind(A target, View source) {\n"
-        + "    Context context = source.getContext();\n"
-        + "    Resources res = context.getResources();\n"
-        + "    Resources.Theme theme = context.getTheme();\n"
-        + "    bindToTarget(target, res, theme);\n"
+        + "    bindToTarget(target, source.getContext());\n"
         + "    return Unbinder.EMPTY;\n"
         + "  }\n"
-        + "  public static void bindToTarget(A target, Resources res, Resources.Theme theme) {\n"
+        + "  public static void bindToTarget(A target, Context context) {\n"
+        + "    Resources res = context.getResources();\n"
+        + "    Resources.Theme theme = context.getTheme();\n"
         + "    target.blackColor = Utils.getColor(res, theme, android.R.color.black);\n"
         + "  }\n"
         + "}"
@@ -793,14 +792,13 @@ public class UnbinderTest {
         + "public final class B_ViewBinder implements ViewBinder<B> {\n"
         + "  @Override\n"
         + "  public Unbinder bind(B target, View source) {\n"
-        + "    Context context = source.getContext();\n"
-        + "    Resources res = context.getResources();\n"
-        + "    Resources.Theme theme = context.getTheme();\n"
-        + "    bindToTarget(target, res, theme);\n"
+        + "    bindToTarget(target, source.getContext());\n"
         + "    return Unbinder.EMPTY;\n"
         + "  }\n"
-        + "  public static void bindToTarget(B target, Resources res, Resources.Theme theme) {\n"
-        + "    A_ViewBinder.bindToTarget(target, res, theme);\n"
+        + "  public static void bindToTarget(B target, Context context) {\n"
+        + "    A_ViewBinder.bindToTarget(target, context);\n"
+        + "    Resources res = context.getResources();\n"
+        + "    Resources.Theme theme = context.getTheme();\n"
         + "    target.whiteColor = Utils.getColor(res, theme, android.R.color.white);\n"
         + "  }\n"
         + "}"
@@ -808,8 +806,6 @@ public class UnbinderTest {
 
     JavaFileObject binderCSource = JavaFileObjects.forSourceString("test/C_ViewBinder", ""
         + "package test;\n"
-        + "import android.content.Context;\n"
-        + "import android.content.res.Resources;\n"
         + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
         + "import butterknife.internal.ViewBinder;\n"
@@ -817,16 +813,14 @@ public class UnbinderTest {
         + "public final class C_ViewBinder implements ViewBinder<C> {\n"
         + "  @Override\n"
         + "  public Unbinder bind(C target, View source) {\n"
-        + "    Context context = source.getContext();\n"
-        + "    Resources res = context.getResources();\n"
-        + "    Resources.Theme theme = context.getTheme();\n"
-        + "    return new C_ViewBinding<>(target, source, res, theme);\n"
+        + "    return new C_ViewBinding<>(target, source);\n"
         + "  }\n"
         + "}"
     );
 
     JavaFileObject bindingCSource = JavaFileObjects.forSourceString("test/C_ViewBinding", ""
         + "package test;\n"
+        + "import android.content.Context;\n"
         + "import android.content.res.Resources;\n"
         + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
@@ -835,10 +829,13 @@ public class UnbinderTest {
         + "import java.lang.Override;\n"
         + "public class C_ViewBinding<T extends C> implements Unbinder {\n"
         + "  protected T target;\n"
-        + "  public C_ViewBinding(T target, View source, Resources res, Resources.Theme theme) {\n"
+        + "  public C_ViewBinding(T target, View source) {\n"
         + "    this.target = target;\n"
-        + "    B_ViewBinder.bindToTarget(target, res, theme);\n"
+        + "    B_ViewBinder.bindToTarget(target, source.getContext());\n"
         + "    target.button1 = Utils.findRequiredView(source, android.R.id.button1, \"field 'button1'\");\n"
+        + "    Context context = source.getContext();\n"
+        + "    Resources res = context.getResources();\n"
+        + "    Resources.Theme theme = context.getTheme();\n"
         + "    target.transparentColor = Utils.getColor(res, theme, android.R.color.transparent);\n"
         + "  }\n"
         + "  @Override\n"
@@ -853,8 +850,6 @@ public class UnbinderTest {
 
     JavaFileObject binderDSource = JavaFileObjects.forSourceString("test/D_ViewBinder", ""
         + "package test;\n"
-        + "import android.content.Context;\n"
-        + "import android.content.res.Resources;\n"
         + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
         + "import butterknife.internal.ViewBinder;\n"
@@ -862,22 +857,23 @@ public class UnbinderTest {
         + "public final class D_ViewBinder implements ViewBinder<D> {\n"
         + "  @Override\n"
         + "  public Unbinder bind(D target, View source) {\n"
-        + "    Context context = source.getContext();\n"
-        + "    Resources res = context.getResources();\n"
-        + "    Resources.Theme theme = context.getTheme();\n"
-        + "    return new D_ViewBinding<>(target, source, res, theme);\n"
+        + "    return new D_ViewBinding<>(target, source);\n"
         + "  }\n"
         + "}"
     );
 
     JavaFileObject bindingDSource = JavaFileObjects.forSourceString("test/D_ViewBinding", ""
         + "package test;\n"
+        + "import android.content.Context;\n"
         + "import android.content.res.Resources;\n"
         + "import android.view.View;\n"
         + "import butterknife.internal.Utils;\n"
         + "public class D_ViewBinding<T extends D> extends C_ViewBinding<T> {\n"
-        + "  public D_ViewBinding(T target, View source, Resources res, Resources.Theme theme) {\n"
-        + "    super(target, source, res, theme);\n"
+        + "  public D_ViewBinding(T target, View source) {\n"
+        + "    super(target, source);\n"
+        + "    Context context = source.getContext();\n"
+        + "    Resources res = context.getResources();\n"
+        + "    Resources.Theme theme = context.getTheme();\n"
         + "    target.grayColor = Utils.getColor(res, theme, android.R.color.darker_gray);\n"
         + "  }\n"
         + "}"
@@ -885,8 +881,6 @@ public class UnbinderTest {
 
     JavaFileObject binderESource = JavaFileObjects.forSourceString("test/E_ViewBinder", ""
         + "package test;\n"
-        + "import android.content.Context;\n"
-        + "import android.content.res.Resources;\n"
         + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
         + "import butterknife.internal.ViewBinder;\n"
@@ -894,22 +888,23 @@ public class UnbinderTest {
         + "public final class E_ViewBinder implements ViewBinder<E> {\n"
         + "  @Override\n"
         + "  public Unbinder bind(E target, View source) {\n"
-        + "    Context context = source.getContext();\n"
-        + "    Resources res = context.getResources();\n"
-        + "    Resources.Theme theme = context.getTheme();\n"
-        + "    return new E_ViewBinding<>(target, source, res, theme);\n"
+        + "    return new E_ViewBinding<>(target, source);\n"
         + "  }\n"
         + "}"
     );
 
     JavaFileObject bindingESource = JavaFileObjects.forSourceString("test/E_ViewBinding", ""
         + "package test;\n"
+        + "import android.content.Context;\n"
         + "import android.content.res.Resources;\n"
         + "import android.view.View;\n"
         + "import butterknife.internal.Utils;\n"
         + "public class E_ViewBinding<T extends E> extends C_ViewBinding<T> {\n"
-        + "  public E_ViewBinding(T target, View source, Resources res, Resources.Theme theme) {\n"
-        + "    super(target, source, res, theme);\n"
+        + "  public E_ViewBinding(T target, View source) {\n"
+        + "    super(target, source);\n"
+        + "    Context context = source.getContext();\n"
+        + "    Resources res = context.getResources();\n"
+        + "    Resources.Theme theme = context.getTheme();\n"
         + "    target.backgroundDarkColor = Utils.getColor(res, theme, android.R.color.background_dark);\n"
         + "  }\n"
         + "}"
@@ -917,8 +912,6 @@ public class UnbinderTest {
 
     JavaFileObject binderFSource = JavaFileObjects.forSourceString("test/F_ViewBinder", ""
         + "package test;\n"
-        + "import android.content.Context;\n"
-        + "import android.content.res.Resources;\n"
         + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
         + "import butterknife.internal.ViewBinder;\n"
@@ -926,22 +919,23 @@ public class UnbinderTest {
         + "public final class F_ViewBinder implements ViewBinder<F> {\n"
         + "  @Override\n"
         + "  public Unbinder bind(F target, View source) {\n"
-        + "    Context context = source.getContext();\n"
-        + "    Resources res = context.getResources();\n"
-        + "    Resources.Theme theme = context.getTheme();\n"
-        + "    return new F_ViewBinding<>(target, source, res, theme);\n"
+        + "    return new F_ViewBinding<>(target, source);\n"
         + "  }\n"
         + "}"
     );
 
     JavaFileObject bindingFSource = JavaFileObjects.forSourceString("test/F_ViewBinding", ""
         + "package test;\n"
+        + "import android.content.Context;\n"
         + "import android.content.res.Resources;\n"
         + "import android.view.View;\n"
         + "import butterknife.internal.Utils;\n"
         + "public class F_ViewBinding<T extends F> extends D_ViewBinding<T> {\n"
-        + "  public F_ViewBinding(T target, View source, Resources res, Resources.Theme theme) {\n"
-        + "    super(target, source, res, theme);\n"
+        + "  public F_ViewBinding(T target, View source) {\n"
+        + "    super(target, source);\n"
+        + "    Context context = source.getContext();\n"
+        + "    Resources res = context.getResources();\n"
+        + "    Resources.Theme theme = context.getTheme();\n"
         + "    target.backgroundLightColor = Utils.getColor(res, theme, android.R.color.background_light);\n"
         + "  }\n"
         + "}"
@@ -949,8 +943,6 @@ public class UnbinderTest {
 
     JavaFileObject binderGSource = JavaFileObjects.forSourceString("test/G_ViewBinder", ""
         + "package test;\n"
-        + "import android.content.Context;\n"
-        + "import android.content.res.Resources;\n"
         + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
         + "import butterknife.internal.ViewBinder;\n"
@@ -958,16 +950,14 @@ public class UnbinderTest {
         + "public final class G_ViewBinder implements ViewBinder<G> {\n"
         + "  @Override\n"
         + "  public Unbinder bind(G target, View source) {\n"
-        + "    Context context = source.getContext();\n"
-        + "    Resources res = context.getResources();\n"
-        + "    Resources.Theme theme = context.getTheme();\n"
-        + "    return new G_ViewBinding<>(target, source, res, theme);\n"
+        + "    return new G_ViewBinding<>(target, source);\n"
         + "  }\n"
         + "}"
     );
 
     JavaFileObject bindingGSource = JavaFileObjects.forSourceString("test/G_ViewBinding", ""
         + "package test;\n"
+        + "import android.content.Context;\n"
         + "import android.content.res.Resources;\n"
         + "import android.view.View;\n"
         + "import butterknife.internal.DebouncingOnClickListener;\n"
@@ -975,8 +965,8 @@ public class UnbinderTest {
         + "import java.lang.Override;\n"
         + "public class G_ViewBinding<T extends G> extends E_ViewBinding<T> {\n"
         + "  private View view16908290;\n"
-        + "  public G_ViewBinding(final T target, View source, Resources res, Resources.Theme theme) {\n"
-        + "    super(target, source, res, theme);\n"
+        + "  public G_ViewBinding(final T target, View source) {\n"
+        + "    super(target, source);\n"
         + "    View view;\n"
         + "    target.button2 = Utils.findRequiredView(source, android.R.id.button2, \"field 'button2'\");\n"
         + "    view = Utils.findRequiredView(source, android.R.id.content, \"method 'onClick'\");\n"
@@ -987,6 +977,9 @@ public class UnbinderTest {
         + "        target.onClick();\n"
         + "      }\n"
         + "    });\n"
+        + "    Context context = source.getContext();\n"
+        + "    Resources res = context.getResources();\n"
+        + "    Resources.Theme theme = context.getTheme();\n"
         + "    target.grayColor = Utils.getColor(res, theme, android.R.color.darker_gray);\n"
         + "  }\n"
         + "  @Override\n"
@@ -1002,8 +995,6 @@ public class UnbinderTest {
 
     JavaFileObject binderHSource = JavaFileObjects.forSourceString("test/H_ViewBinder", ""
         + "package test;\n"
-        + "import android.content.Context;\n"
-        + "import android.content.res.Resources;\n"
         + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
         + "import butterknife.internal.ViewBinder;\n"
@@ -1011,24 +1002,25 @@ public class UnbinderTest {
         + "public final class H_ViewBinder implements ViewBinder<H> {\n"
         + "  @Override\n"
         + "  public Unbinder bind(H target, View source) {\n"
-        + "    Context context = source.getContext();\n"
-        + "    Resources res = context.getResources();\n"
-        + "    Resources.Theme theme = context.getTheme();\n"
-        + "    return new H_ViewBinding<>(target, source, res, theme);\n"
+        + "    return new H_ViewBinding<>(target, source);\n"
         + "  }\n"
         + "}"
     );
 
     JavaFileObject bindingHSource = JavaFileObjects.forSourceString("test/H_ViewBinding", ""
         + "package test;\n"
+        + "import android.content.Context;\n"
         + "import android.content.res.Resources;\n"
         + "import android.view.View;\n"
         + "import butterknife.internal.Utils;\n"
         + "import java.lang.Override;\n"
         + "public class H_ViewBinding<T extends H> extends G_ViewBinding<T> {\n"
-        + "  public H_ViewBinding(T target, View source, Resources res, Resources.Theme theme) {\n"
-        + "    super(target, source, res, theme);\n"
+        + "  public H_ViewBinding(T target, View source) {\n"
+        + "    super(target, source);\n"
         + "    target.button3 = Utils.findRequiredView(source, android.R.id.button3, \"field 'button3'\");\n"
+        + "    Context context = source.getContext();\n"
+        + "    Resources res = context.getResources();\n"
+        + "    Resources.Theme theme = context.getTheme();\n"
         + "    target.grayColor = Utils.getColor(res, theme, android.R.color.primary_text_dark);\n"
         + "  }\n"
         + "  @Override\n"
