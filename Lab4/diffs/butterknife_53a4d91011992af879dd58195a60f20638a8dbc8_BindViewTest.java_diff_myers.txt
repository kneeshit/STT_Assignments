diff --git a/butterknife-compiler/src/test/java/butterknife/BindViewTest.java b/butterknife-compiler/src/test/java/butterknife/BindViewTest.java
index 8fc42ac..eedc68a 100644
--- a/butterknife-compiler/src/test/java/butterknife/BindViewTest.java
+++ b/butterknife-compiler/src/test/java/butterknife/BindViewTest.java
@@ -26,31 +26,30 @@ public class BindViewTest {
 
     JavaFileObject binderSource = JavaFileObjects.forSourceString("test/Test_ViewBinder", ""
         + "package test;\n"
+        + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
-        + "import butterknife.internal.Finder;\n"
         + "import butterknife.internal.ViewBinder;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public final class Test_ViewBinder implements ViewBinder<Test> {\n"
         + "  @Override\n"
-        + "  public Unbinder bind(Finder finder, Test target, Object source) {\n"
-        + "    return new Test_ViewBinding<>(target, finder, source);\n"
+        + "  public Unbinder bind(Test target, View source) {\n"
+        + "    return new Test_ViewBinding<>(target, source);\n"
         + "  }\n"
         + "}"
     );
 
     JavaFileObject bindingSource = JavaFileObjects.forSourceString("test/Test_ViewBinding", ""
         + "package test;\n"
+        + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
-        + "import butterknife.internal.Finder;\n"
+        + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public class Test_ViewBinding<T extends Test> implements Unbinder {\n"
         + "  protected T target;\n"
-        + "  public Test_ViewBinding(T target, Finder finder, Object source) {\n"
+        + "  public Test_ViewBinding(T target, View source) {\n"
         + "    this.target = target;\n"
-        + "    target.thing = finder.findRequiredView(source, 1, \"field 'thing'\");\n"
+        + "    target.thing = Utils.findRequiredView(source, 1, \"field 'thing'\");\n"
         + "  }\n"
         + "  @Override\n"
         + "  public void unbind() {\n"
@@ -118,31 +117,30 @@ public class BindViewTest {
 
     JavaFileObject binderSource = JavaFileObjects.forSourceString("test/Test_ViewBinder", ""
         + "package test;\n"
+        + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
-        + "import butterknife.internal.Finder;\n"
         + "import butterknife.internal.ViewBinder;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public final class Test_ViewBinder implements ViewBinder<Test> {\n"
         + "  @Override\n"
-        + "  public Unbinder bind(Finder finder, Test target, Object source) {\n"
-        + "    return new Test_ViewBinding(target, finder, source);\n"
+        + "  public Unbinder bind(Test target, View source) {\n"
+        + "    return new Test_ViewBinding(target, source);\n"
         + "  }\n"
         + "}"
     );
 
     JavaFileObject bindingSource = JavaFileObjects.forSourceString("test/Test_ViewBinding", ""
         + "package test;\n"
+        + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
-        + "import butterknife.internal.Finder;\n"
+        + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public final class Test_ViewBinding implements Unbinder {\n"
         + "  private Test target;\n"
-        + "  public Test_ViewBinding(Test target, Finder finder, Object source) {\n"
+        + "  public Test_ViewBinding(Test target, View source) {\n"
         + "    this.target = target;\n"
-        + "    target.thing = finder.findRequiredView(source, 1, \"field 'thing'\");\n"
+        + "    target.thing = Utils.findRequiredView(source, 1, \"field 'thing'\");\n"
         + "  }\n"
         + "  @Override\n"
         + "  public void unbind() {\n"
@@ -182,31 +180,30 @@ public class BindViewTest {
 
     JavaFileObject binderBaseSource = JavaFileObjects.forSourceString("test/Base_ViewBinder", ""
         + "package test;\n"
+        + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
-        + "import butterknife.internal.Finder;\n"
         + "import butterknife.internal.ViewBinder;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public final class Base_ViewBinder implements ViewBinder<Base> {\n"
         + "  @Override\n"
-        + "  public Unbinder bind(Finder finder, Base target, Object source) {\n"
-        + "    return new Base_ViewBinding<>(target, finder, source);\n"
+        + "  public Unbinder bind(Base target, View source) {\n"
+        + "    return new Base_ViewBinding<>(target, source);\n"
         + "  }\n"
         + "}"
     );
 
     JavaFileObject bindingBaseSource = JavaFileObjects.forSourceString("test/Base_ViewBinding", ""
         + "package test;\n"
+        + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
-        + "import butterknife.internal.Finder;\n"
+        + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public class Base_ViewBinding<T extends Base> implements Unbinder {\n"
         + "  protected T target;\n"
-        + "  public Base_ViewBinding(T target, Finder finder, Object source) {\n"
+        + "  public Base_ViewBinding(T target, View source) {\n"
         + "    this.target = target;\n"
-        + "    target.thing = finder.findRequiredView(source, 1, \"field 'thing'\");\n"
+        + "    target.thing = Utils.findRequiredView(source, 1, \"field 'thing'\");\n"
         + "  }\n"
         + "  @Override\n"
         + "  public void unbind() {\n"
@@ -220,28 +217,27 @@ public class BindViewTest {
 
     JavaFileObject binderTestSource = JavaFileObjects.forSourceString("test/Test_ViewBinder", ""
         + "package test;\n"
+        + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
-        + "import butterknife.internal.Finder;\n"
         + "import butterknife.internal.ViewBinder;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public final class Test_ViewBinder implements ViewBinder<Test> {\n"
         + "  @Override\n"
-        + "  public Unbinder bind(Finder finder, Test target, Object source) {\n"
-        + "    return new Test_ViewBinding(target, finder, source);\n"
+        + "  public Unbinder bind(Test target, View source) {\n"
+        + "    return new Test_ViewBinding(target, source);\n"
         + "  }\n"
         + "}"
     );
 
     JavaFileObject bindingTestSource = JavaFileObjects.forSourceString("test/Test_ViewBinding", ""
         + "package test;\n"
-        + "import butterknife.internal.Finder;\n"
-        + "import java.lang.Object;\n"
+        + "import android.view.View;\n"
+        + "import butterknife.internal.Utils;\n"
         + "import java.lang.Override;\n"
         + "public final class Test_ViewBinding extends Base_ViewBinding<Test> {\n"
-        + "  public Test_ViewBinding(Test target, Finder finder, Object source) {\n"
-        + "    super(target, finder, source);\n"
-        + "    target.thing = finder.findRequiredView(source, 1, \"field 'thing'\");\n"
+        + "  public Test_ViewBinding(Test target, View source) {\n"
+        + "    super(target, source);\n"
+        + "    target.thing = Utils.findRequiredView(source, 1, \"field 'thing'\");\n"
         + "  }\n"
         + "  @Override\n"
         + "  public void unbind() {\n"
@@ -274,31 +270,30 @@ public class BindViewTest {
 
     JavaFileObject binderSource = JavaFileObjects.forSourceString("test/Outer$Test_ViewBinder", ""
         + "package test;\n"
+        + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
-        + "import butterknife.internal.Finder;\n"
         + "import butterknife.internal.ViewBinder;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public final class Outer$Test_ViewBinder implements ViewBinder<Outer.Test> {\n"
         + "  @Override\n"
-        + "  public Unbinder bind(Finder finder, Outer.Test target, Object source) {\n"
-        + "    return new Outer$Test_ViewBinding<>(target, finder, source);\n"
+        + "  public Unbinder bind(Outer.Test target, View source) {\n"
+        + "    return new Outer$Test_ViewBinding<>(target, source);\n"
         + "  }\n"
         + "}"
     );
 
     JavaFileObject bindingSource = JavaFileObjects.forSourceString("test/Outer$Test_ViewBinding", ""
         + "package test;\n"
+        + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
-        + "import butterknife.internal.Finder;\n"
+        + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public class Outer$Test_ViewBinding<T extends Outer.Test> implements Unbinder {\n"
         + "  protected T target;\n"
-        + "  public Outer$Test_ViewBinding(T target, Finder finder, Object source) {\n"
+        + "  public Outer$Test_ViewBinding(T target, View source) {\n"
         + "    this.target = target;\n"
-        + "    target.thing = finder.findRequiredView(source, 1, \"field 'thing'\");\n"
+        + "    target.thing = Utils.findRequiredView(source, 1, \"field 'thing'\");\n"
         + "  }\n"
         + "  @Override\n"
         + "  public void unbind() {\n"
@@ -330,31 +325,30 @@ public class BindViewTest {
 
     JavaFileObject binderSource = JavaFileObjects.forSourceString("test/Test_ViewBinder", ""
         + "package com.Example;\n"
+        + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
-        + "import butterknife.internal.Finder;\n"
         + "import butterknife.internal.ViewBinder;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public final class Test_ViewBinder implements ViewBinder<Test> {\n"
         + "  @Override\n"
-        + "  public Unbinder bind(Finder finder, Test target, Object source) {\n"
-        + "    return new Test_ViewBinding<>(target, finder, source);\n"
+        + "  public Unbinder bind(Test target, View source) {\n"
+        + "    return new Test_ViewBinding<>(target, source);\n"
         + "  }\n"
         + "}"
     );
 
     JavaFileObject bindingSource = JavaFileObjects.forSourceString("test/Test_ViewBinding", ""
         + "package com.Example;\n"
+        + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
-        + "import butterknife.internal.Finder;\n"
+        + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public class Test_ViewBinding<T extends Test> implements Unbinder {\n"
         + "  protected T target;\n"
-        + "  public Test_ViewBinding(T target, Finder finder, Object source) {\n"
+        + "  public Test_ViewBinding(T target, View source) {\n"
         + "    this.target = target;\n"
-        + "    target.thing = finder.findRequiredView(source, 1, \"field 'thing'\");\n"
+        + "    target.thing = Utils.findRequiredView(source, 1, \"field 'thing'\");\n"
         + "  }\n"
         + "  @Override\n"
         + "  public void unbind() {\n"
@@ -387,31 +381,30 @@ public class BindViewTest {
 
     JavaFileObject binderSource = JavaFileObjects.forSourceString("test/Test_ViewBinder", ""
         + "package test;\n"
+        + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
-        + "import butterknife.internal.Finder;\n"
         + "import butterknife.internal.ViewBinder;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public final class Test_ViewBinder implements ViewBinder<Test> {\n"
         + "  @Override\n"
-        + "  public Unbinder bind(Finder finder, Test target, Object source) {\n"
-        + "    return new Test_ViewBinding<>(target, finder, source);\n"
+        + "  public Unbinder bind(Test target, View source) {\n"
+        + "    return new Test_ViewBinding<>(target, source);\n"
         + "  }\n"
         + "}"
     );
 
     JavaFileObject bindingSource = JavaFileObjects.forSourceString("test/Test_ViewBinding", ""
         + "package test;\n"
+        + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
-        + "import butterknife.internal.Finder;\n"
+        + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public class Test_ViewBinding<T extends Test> implements Unbinder {\n"
         + "  protected T target;\n"
-        + "  public Test_ViewBinding(T target, Finder finder, Object source) {\n"
+        + "  public Test_ViewBinding(T target, View source) {\n"
         + "    this.target = target;\n"
-        + "    target.thing = finder.findRequiredViewAsType(source, 1, \"field 'thing'\", Test.TestInterface.class);\n"
+        + "    target.thing = Utils.findRequiredViewAsType(source, 1, \"field 'thing'\", Test.TestInterface.class);\n"
         + "  }\n"
         + "  @Override\n"
         + "  public void unbind() {\n"
@@ -444,32 +437,31 @@ public class BindViewTest {
 
     JavaFileObject binderSource = JavaFileObjects.forSourceString("test/Test_ViewBinder", ""
         + "package test;\n"
+        + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
-        + "import butterknife.internal.Finder;\n"
         + "import butterknife.internal.ViewBinder;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public final class Test_ViewBinder implements ViewBinder<Test> {\n"
         + "  @Override\n"
-        + "  public Unbinder bind(Finder finder, Test target, Object source) {\n"
-        + "    return new Test_ViewBinding<>(target, finder, source);\n"
+        + "  public Unbinder bind(Test target, View source) {\n"
+        + "    return new Test_ViewBinding<>(target, source);\n"
         + "  }\n"
         + "}"
     );
 
     JavaFileObject bindingSource = JavaFileObjects.forSourceString("test/Test_ViewBinding", ""
         + "package test;\n"
+        + "import android.view.View;\n"
         + "import android.widget.TextView;\n"
         + "import butterknife.Unbinder;\n"
-        + "import butterknife.internal.Finder;\n"
+        + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public class Test_ViewBinding<T extends Test> implements Unbinder {\n"
         + "  protected T target;\n"
-        + "  public Test_ViewBinding(T target, Finder finder, Object source) {\n"
+        + "  public Test_ViewBinding(T target, View source) {\n"
         + "    this.target = target;\n"
-        + "    target.thing = finder.findRequiredViewAsType(source, 1, \"field 'thing'\", TextView.class);\n"
+        + "    target.thing = Utils.findRequiredViewAsType(source, 1, \"field 'thing'\", TextView.class);\n"
         + "  }\n"
         + "  @Override\n"
         + "  public void unbind() {\n"
@@ -505,15 +497,14 @@ public class BindViewTest {
 
     JavaFileObject binderSource = JavaFileObjects.forSourceString("test/Test_ViewBinder", ""
         + "package test;\n"
+        + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
-        + "import butterknife.internal.Finder;\n"
         + "import butterknife.internal.ViewBinder;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public final class Test_ViewBinder implements ViewBinder<Test> {\n"
         + "  @Override\n"
-        + "  public Unbinder bind(Finder finder, Test target, Object source) {\n"
-        + "    return new Test_ViewBinding<>(target, finder, source);\n"
+        + "  public Unbinder bind(Test target, View source) {\n"
+        + "    return new Test_ViewBinding<>(target, source);\n"
         + "  }\n"
         + "}"
     );
@@ -523,17 +514,16 @@ public class BindViewTest {
         + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
         + "import butterknife.internal.DebouncingOnClickListener;\n"
-        + "import butterknife.internal.Finder;\n"
+        + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public class Test_ViewBinding<T extends Test> implements Unbinder {\n"
         + "  protected T target;\n"
         + "  private View view1;\n"
-        + "  public Test_ViewBinding(final T target, Finder finder, Object source) {\n"
+        + "  public Test_ViewBinding(final T target, View source) {\n"
         + "    this.target = target;\n"
         + "    View view;\n"
-        + "    view = finder.findRequiredView(source, 1, \"field 'thing1' and method 'doStuff'\");\n"
+        + "    view = Utils.findRequiredView(source, 1, \"field 'thing1' and method 'doStuff'\");\n"
         + "    target.thing1 = view;\n"
         + "    view1 = view;\n"
         + "    view.setOnClickListener(new DebouncingOnClickListener() {\n"
@@ -577,15 +567,14 @@ public class BindViewTest {
 
     JavaFileObject binderSource = JavaFileObjects.forSourceString("test/Test_ViewBinder", ""
         + "package test;\n"
+        + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
-        + "import butterknife.internal.Finder;\n"
         + "import butterknife.internal.ViewBinder;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public final class Test_ViewBinder implements ViewBinder<Test> {\n"
         + "  @Override\n"
-        + "  public Unbinder bind(Finder finder, Test target, Object source) {\n"
-        + "    return new Test_ViewBinding<>(target, finder, source);\n"
+        + "  public Unbinder bind(Test target, View source) {\n"
+        + "    return new Test_ViewBinding<>(target, source);\n"
         + "  }\n"
         + "}"
     );
@@ -596,18 +585,17 @@ public class BindViewTest {
         + "import android.widget.Button;\n"
         + "import butterknife.Unbinder;\n"
         + "import butterknife.internal.DebouncingOnClickListener;\n"
-        + "import butterknife.internal.Finder;\n"
+        + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public class Test_ViewBinding<T extends Test> implements Unbinder {\n"
         + "  protected T target;\n"
         + "  private View view1;\n"
-        + "  public Test_ViewBinding(final T target, Finder finder, Object source) {\n"
+        + "  public Test_ViewBinding(final T target, View source) {\n"
         + "    this.target = target;\n"
         + "    View view;\n"
-        + "    view = finder.findRequiredView(source, 1, \"field 'thing1' and method 'doStuff'\");\n"
-        + "    target.thing1 = finder.castView(view, 1, \"field 'thing1'\", Button.class);\n"
+        + "    view = Utils.findRequiredView(source, 1, \"field 'thing1' and method 'doStuff'\");\n"
+        + "    target.thing1 = Utils.castView(view, 1, \"field 'thing1'\", Button.class);\n"
         + "    view1 = view;\n"
         + "    view.setOnClickListener(new DebouncingOnClickListener() {\n"
         + "      @Override\n"
@@ -667,31 +655,29 @@ public class BindViewTest {
 
     JavaFileObject binderSource = JavaFileObjects.forSourceString("test/Test_ViewBinder", ""
         + "package test;\n"
+        + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
-        + "import butterknife.internal.Finder;\n"
         + "import butterknife.internal.ViewBinder;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public final class Test_ViewBinder implements ViewBinder<Test> {\n"
         + "  @Override\n"
-        + "  public Unbinder bind(Finder finder, Test target, Object source) {\n"
-        + "    return new Test_ViewBinding<>(target, finder, source);\n"
+        + "  public Unbinder bind(Test target, View source) {\n"
+        + "    return new Test_ViewBinding<>(target, source);\n"
         + "  }\n"
         + "}"
     );
 
     JavaFileObject bindingSource = JavaFileObjects.forSourceString("test/Test_ViewBinding", ""
         + "package test;\n"
+        + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
-        + "import butterknife.internal.Finder;\n"
         + "import java.lang.IllegalStateException;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public class Test_ViewBinding<T extends Test> implements Unbinder {\n"
         + "  protected T target;\n"
-        + "  public Test_ViewBinding(T target, Finder finder, Object source) {\n"
+        + "  public Test_ViewBinding(T target, View source) {\n"
         + "    this.target = target;\n"
-        + "    target.view = finder.findOptionalView(source, 1);\n"
+        + "    target.view = source.findViewById(1);\n"
         + "  }\n"
         + "  @Override\n"
         + "  public void unbind() {\n"
@@ -739,31 +725,30 @@ public class BindViewTest {
 
     JavaFileObject binder1Source = JavaFileObjects.forSourceString("test/Test_ViewBinder", ""
         + "package test;\n"
+        + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
-        + "import butterknife.internal.Finder;\n"
         + "import butterknife.internal.ViewBinder;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public final class Test_ViewBinder implements ViewBinder<Test> {\n"
         + "  @Override\n"
-        + "  public Unbinder bind(Finder finder, Test target, Object source) {\n"
-        + "    return new Test_ViewBinding<>(target, finder, source);\n"
+        + "  public Unbinder bind(Test target, View source) {\n"
+        + "    return new Test_ViewBinding<>(target, source);\n"
         + "  }\n"
         + "}"
     );
 
     JavaFileObject binding1Source = JavaFileObjects.forSourceString("test/Test_ViewBinding", ""
         + "package test;\n"
+        + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
-        + "import butterknife.internal.Finder;\n"
+        + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public class Test_ViewBinding<T extends Test> implements Unbinder {\n"
         + "  protected T target;\n"
-        + "  public Test_ViewBinding(T target, Finder finder, Object source) {\n"
+        + "  public Test_ViewBinding(T target, View source) {\n"
         + "    this.target = target;\n"
-        + "    target.view = finder.findRequiredView(source, 1, \"field 'view'\");\n"
+        + "    target.view = Utils.findRequiredView(source, 1, \"field 'view'\");\n"
         + "  }\n"
         + "  @Override\n"
         + "  public void unbind() {\n"
@@ -777,28 +762,27 @@ public class BindViewTest {
 
     JavaFileObject binder2Source = JavaFileObjects.forSourceString("test/TestOne_ViewBinder", ""
         + "package test;\n"
+        + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
-        + "import butterknife.internal.Finder;\n"
         + "import butterknife.internal.ViewBinder;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public final class TestOne_ViewBinder implements ViewBinder<TestOne> {\n"
         + "  @Override\n"
-        + "  public Unbinder bind(Finder finder, TestOne target, Object source) {\n"
-        + "    return new TestOne_ViewBinding<>(target, finder, source);\n"
+        + "  public Unbinder bind(TestOne target, View source) {\n"
+        + "    return new TestOne_ViewBinding<>(target, source);\n"
         + "  }\n"
         + "}"
     );
 
     JavaFileObject binding2Source = JavaFileObjects.forSourceString("test/TestOne_ViewBinding", ""
         + "package test;\n"
-        + "import butterknife.internal.Finder;\n"
-        + "import java.lang.Object;\n"
+        + "import android.view.View;\n"
+        + "import butterknife.internal.Utils;\n"
         + "import java.lang.Override;\n"
         + "public class TestOne_ViewBinding<T extends TestOne> extends Test_ViewBinding<T> {\n"
-        + "  public TestOne_ViewBinding(T target, Finder finder, Object source) {\n"
-        + "    super(target, finder, source);\n"
-        + "    target.thing = finder.findRequiredView(source, 1, \"field 'thing'\");\n"
+        + "  public TestOne_ViewBinding(T target, View source) {\n"
+        + "    super(target, source);\n"
+        + "    target.thing = Utils.findRequiredView(source, 1, \"field 'thing'\");\n"
         + "  }\n"
         + "  @Override\n"
         + "  public void unbind() {\n"
@@ -843,31 +827,30 @@ public class BindViewTest {
     );
     JavaFileObject binder1Source = JavaFileObjects.forSourceString("test/Test_ViewBinder", ""
         + "package test;\n"
+        + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
-        + "import butterknife.internal.Finder;\n"
         + "import butterknife.internal.ViewBinder;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public final class Test_ViewBinder implements ViewBinder<Test> {\n"
         + "  @Override\n"
-        + "  public Unbinder bind(Finder finder, Test target, Object source) {\n"
-        + "    return new Test_ViewBinding<>(target, finder, source);\n"
+        + "  public Unbinder bind(Test target, View source) {\n"
+        + "    return new Test_ViewBinding<>(target, source);\n"
         + "  }\n"
         + "}"
     );
 
     JavaFileObject binding1Source = JavaFileObjects.forSourceString("test/Test_ViewBinding", ""
         + "package test;\n"
+        + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
-        + "import butterknife.internal.Finder;\n"
+        + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public class Test_ViewBinding<T extends Test> implements Unbinder {\n"
         + "  protected T target;\n"
-        + "  public Test_ViewBinding(T target, Finder finder, Object source) {\n"
+        + "  public Test_ViewBinding(T target, View source) {\n"
         + "    this.target = target;\n"
-        + "    target.view = finder.findRequiredView(source, 1, \"field 'view'\");\n"
+        + "    target.view = Utils.findRequiredView(source, 1, \"field 'view'\");\n"
         + "  }\n"
         + "  @Override\n"
         + "  public void unbind() {\n"
@@ -881,28 +864,27 @@ public class BindViewTest {
 
     JavaFileObject binder2Source = JavaFileObjects.forSourceString("test/TestOne_ViewBinder", ""
         + "package test;\n"
+        + "import android.view.View;\n"
         + "import butterknife.Unbinder;\n"
-        + "import butterknife.internal.Finder;\n"
         + "import butterknife.internal.ViewBinder;\n"
-        + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
         + "public final class TestOne_ViewBinder implements ViewBinder<TestOne> {\n"
         + "  @Override\n"
-        + "  public Unbinder bind(Finder finder, TestOne target, Object source) {\n"
-        + "    return new TestOne_ViewBinding<>(target, finder, source);\n"
+        + "  public Unbinder bind(TestOne target, View source) {\n"
+        + "    return new TestOne_ViewBinding<>(target, source);\n"
         + "  }\n"
         + "}"
     );
 
     JavaFileObject binding2Source = JavaFileObjects.forSourceString("test/TestOne_ViewBinding", ""
         + "package test;\n"
-        + "import butterknife.internal.Finder;\n"
-        + "import java.lang.Object;\n"
+        + "import android.view.View;\n"
+        + "import butterknife.internal.Utils;\n"
         + "import java.lang.Override;\n"
         + "public class TestOne_ViewBinding<T extends TestOne> extends Test_ViewBinding<T> {\n"
-        + "  public TestOne_ViewBinding(T target, Finder finder, Object source) {\n"
-        + "    super(target, finder, source);\n"
-        + "    target.thing = finder.findRequiredView(source, 1, \"field 'thing'\");\n"
+        + "  public TestOne_ViewBinding(T target, View source) {\n"
+        + "    super(target, source);\n"
+        + "    target.thing = Utils.findRequiredView(source, 1, \"field 'thing'\");\n"
         + "  }\n"
         + "  @Override\n"
         + "  public void unbind() {\n"
