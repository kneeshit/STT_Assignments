diff --git a/butterknife-compiler/src/test/java/butterknife/OnTextChangedTest.java b/butterknife-compiler/src/test/java/butterknife/OnTextChangedTest.java
index 17685ef..3b089d1 100644
--- a/butterknife-compiler/src/test/java/butterknife/OnTextChangedTest.java
+++ b/butterknife-compiler/src/test/java/butterknife/OnTextChangedTest.java
@@ -35,15 +35,18 @@ public class OnTextChangedTest {
         + "public class Test$$ViewBinder<T extends Test> implements ViewBinder<T> {\n"
         + "  @Override\n"
         + "  public Unbinder bind(Finder finder, T target, Object source) {\n"
-        + "    InnerUnbinder unbinder = new InnerUnbinder(target);\n"
-        + "    bindToTarget(target, finder, source, unbinder);\n"
-        + "    return unbinder;\n"
+        + "    return new InnerUnbinder(target, finder, source);\n"
         + "  }\n"
-        + "  protected static void bindToTarget(final Test target, Finder finder, Object source, InnerUnbinder unbinder) {\n"
+        + "  protected static class InnerUnbinder<T extends Test> implements Unbinder {\n"
+        + "    protected T target;\n"
+        + "    private View view1;\n"
+        + "    private TextWatcher view1TextWatcher;\n"
+        + "    protected InnerUnbinder(final T target, Finder finder, Object source) {\n"
+        + "      this.target = target;\n"
         + "      View view;\n"
         + "      view = finder.findRequiredView(source, 1, \"method 'doStuff'\");\n"
-        + "    unbinder.view1 = view;\n"
-        + "    unbinder.view1TextWatcher = new TextWatcher() {\n"
+        + "      view1 = view;\n"
+        + "      this.view1TextWatcher = new TextWatcher() {\n"
         + "        @Override\n"
         + "        public void onTextChanged(CharSequence p0, int p1, int p2, int p3) {\n"
         + "          target.doStuff();\n"
@@ -55,14 +58,7 @@ public class OnTextChangedTest {
         + "        public void afterTextChanged(Editable p0) {\n"
         + "        }\n"
         + "      };\n"
-        + "    ((TextView) view).addTextChangedListener(unbinder.view1TextWatcher);\n"
-        + "  }\n"
-        + "  protected static class InnerUnbinder<T extends Test> implements Unbinder {\n"
-        + "    protected T target;\n"
-        + "    View view1;\n"
-        + "    TextWatcher view1TextWatcher;\n"
-        + "    protected InnerUnbinder(T target) {\n"
-        + "      this.target = target;\n"
+        + "      ((TextView) view).addTextChangedListener(view1TextWatcher);\n"
         + "    }\n"
         + "    @Override\n"
         + "    public void unbind() {\n"
