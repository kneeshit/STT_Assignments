diff --git a/.github/workflows/Release.yml b/.github/workflows/Release.yml
index 397d02d..1d29d97 100644
--- a/.github/workflows/Release.yml
+++ b/.github/workflows/Release.yml
@@ -69,6 +69,73 @@ jobs:
           prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') }}
           generate_release_notes: true
 
+  macos:
+    runs-on: macos-12
+    environment: MacOS
+    steps:
+      - name: Checkout code
+        uses: actions/checkout@v2
+
+      - name: Set up Rust
+        uses: actions-rs/toolchain@v1
+        with:
+          toolchain: stable
+
+      - name: Get tag
+        if: startsWith(github.ref, 'refs/tags/')
+        id: tag
+        uses: dawidd6/action-get-tag@v1
+        with:
+          strip_v: true
+
+      - name: Build project
+        shell: bash
+        run: | 
+          : ${tag=latest}
+          rustup target add aarch64-apple-darwin x86_64-apple-darwin
+          mkdir uploads
+          cargo update
+
+          cargo build --release --target x86_64-apple-darwin
+          cd target/x86_64-apple-darwin/release
+          sudo upx --lzma opengpt
+          tar czvf opengpt-$tag-x86_64-apple-darwin.tar.gz opengpt.exe
+          shasum -a 256 opengpt-$tag-x86_64-apple-darwin.tar.gz >opengpt-$tag-x86_64-apple-darwin.tar.gz.sha256
+          mv opengpt-$tag-x86_64-apple-darwin.tar.gz $root/uploads/
+          mv opengpt-$tag-x86_64-apple-darwin.tar.gz.sha256 $root/uploads/
+
+          cargo build --release --target aarch64-apple-darwin
+          cd target/aarch64-apple-darwin/release
+          sudo upx --lzma opengpt
+          tar czvf opengpt-$tag-aarch64-apple-darwin.tar.gz opengpt.exe
+          shasum -a 256 opengpt-$tag-aarch64-apple-darwin.tar.gz >opengpt-$tag-aarch64-apple-darwin.tar.gz.sha256
+          mv opengpt-$tag-aarch64-apple-darwin.tar.gz $root/uploads/
+          mv opengpt-$tag-aarch64-apple-darwin.tar.gz.sha256 $root/uploads/
+
+      - name: Tag Check
+        run: |
+          echo "tag=${{ steps.tag.outputs.tag }}" >> $GITHUB_ENV
+          echo "tag=${{ steps.tag.outputs.tag }}" >> $GITHUB_OUTPUT
+          if [ -z "${{ steps.tag.outputs.tag }}" ]; then
+            echo "tag=latest" >> $GITHUB_OUTPUT
+            echo "tag=latest" >> $GITHUB_ENV
+          fi
+
+      - name: Build package
+        shell: bash
+        run: |
+          bash +x build_cross.sh
+          
+      - name: Upload binaries to GitHub Release
+        uses: softprops/action-gh-release@v1
+        if: startsWith(github.ref, 'refs/tags/')
+        with:
+          token: ${{ secrets.CR_PAT }}
+          files: |
+            uploads/*
+          prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') }}
+          generate_release_notes: true
+
   openwrt:
     name: OpenWrt
     runs-on: ubuntu-20.04
