diff --git a/butterknife-compiler/src/test/java/butterknife/OnItemSelectedTest.java b/butterknife-compiler/src/test/java/butterknife/OnItemSelectedTest.java
index e098e58..268599f 100644
--- a/butterknife-compiler/src/test/java/butterknife/OnItemSelectedTest.java
+++ b/butterknife-compiler/src/test/java/butterknife/OnItemSelectedTest.java
@@ -22,6 +22,7 @@ public class OnItemSelectedTest {
 
     JavaFileObject expectedSource = JavaFileObjects.forSourceString("test/Test$$ViewBinder", ""
         + "package test;\n"
+        + "\n"
         + "import android.view.View;\n"
         + "import android.widget.AdapterView;\n"
         + "import butterknife.Unbinder;\n"
@@ -33,14 +34,16 @@ public class OnItemSelectedTest {
         + "public class Test$$ViewBinder<T extends Test> implements ViewBinder<T> {\n"
         + "  @Override\n"
         + "  public Unbinder bind(Finder finder, T target, Object source) {\n"
-        + "    InnerUnbinder unbinder = new InnerUnbinder(target);\n"
-        + "    bindToTarget(target, finder, source, unbinder);\n"
-        + "    return unbinder;\n"
+        + "    return new InnerUnbinder(target, finder, source);\n"
         + "  }\n"
-        + "  protected static void bindToTarget(final Test target, Finder finder, Object source, InnerUnbinder unbinder) {\n"
+        + "  protected static class InnerUnbinder<T extends Test> implements Unbinder {\n"
+        + "    protected T target;\n"
+        + "    private View view1;\n"
+        + "    protected InnerUnbinder(final T target, Finder finder, Object source) {\n"
+        + "      this.target = target;\n"
         + "      View view;\n"
         + "      view = finder.findRequiredView(source, 1, \"method 'doStuff'\");\n"
-        + "    unbinder.view1 = view;\n"
+        + "      view1 = view;\n"
         + "      ((AdapterView<?>) view).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\n"
         + "        @Override\n"
         + "        public void onItemSelected(AdapterView<?> p0, View p1, int p2, long p3) {\n"
@@ -51,12 +54,6 @@ public class OnItemSelectedTest {
         + "        }\n"
         + "      });\n"
         + "    }\n"
-        + "  protected static class InnerUnbinder<T extends Test> implements Unbinder {\n"
-        + "    protected T target;\n"
-        + "    View view1;\n"
-        + "    protected InnerUnbinder(T target) {\n"
-        + "      this.target = target;\n"
-        + "    }\n"
         + "    @Override\n"
         + "    public void unbind() {\n"
         + "      if (this.target == null) throw new IllegalStateException(\"Bindings already cleared.\");\n"
@@ -100,14 +97,16 @@ public class OnItemSelectedTest {
         + "public class Test$$ViewBinder<T extends Test> implements ViewBinder<T> {\n"
         + "  @Override\n"
         + "  public Unbinder bind(Finder finder, T target, Object source) {\n"
-        + "    InnerUnbinder unbinder = new InnerUnbinder(target);\n"
-        + "    bindToTarget(target, finder, source, unbinder);\n"
-        + "    return unbinder;\n"
+        + "    return new InnerUnbinder(target, finder, source);\n"
         + "  }\n"
-        + "  protected static void bindToTarget(final Test target, Finder finder, Object source, InnerUnbinder unbinder) {\n"
+        + "  protected static class InnerUnbinder<T extends Test> implements Unbinder {\n"
+        + "    protected T target;\n"
+        + "    private View view1;\n"
+        + "    protected InnerUnbinder(final T target, Finder finder, Object source) {\n"
+        + "      this.target = target;\n"
         + "      View view;\n"
         + "      view = finder.findRequiredView(source, 1, \"method 'doStuff'\");\n"
-        + "    unbinder.view1 = view;\n"
+        + "      view1 = view;\n"
         + "      ((AdapterView<?>) view).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\n"
         + "        @Override\n"
         + "        public void onItemSelected(AdapterView<?> p0, View p1, int p2, long p3) {\n"
@@ -118,12 +117,6 @@ public class OnItemSelectedTest {
         + "        }\n"
         + "      });\n"
         + "    }\n"
-        + "  protected static class InnerUnbinder<T extends Test> implements Unbinder {\n"
-        + "    protected T target;\n"
-        + "    View view1;\n"
-        + "    protected InnerUnbinder(T target) {\n"
-        + "      this.target = target;\n"
-        + "    }\n"
         + "    @Override\n"
         + "    public void unbind() {\n"
         + "      if (this.target == null) throw new IllegalStateException(\"Bindings already cleared.\");\n"
@@ -169,14 +162,16 @@ public class OnItemSelectedTest {
         + "public class Test$$ViewBinder<T extends Test> implements ViewBinder<T> {\n"
         + "  @Override\n"
         + "  public Unbinder bind(Finder finder, T target, Object source) {\n"
-        + "    InnerUnbinder unbinder = new InnerUnbinder(target);\n"
-        + "    bindToTarget(target, finder, source, unbinder);\n"
-        + "    return unbinder;\n"
+        + "    return new InnerUnbinder(target, finder, source);\n"
         + "  }\n"
-        + "  protected static void bindToTarget(final Test target, Finder finder, Object source, InnerUnbinder unbinder) {\n"
+        + "  protected static class InnerUnbinder<T extends Test> implements Unbinder {\n"
+        + "    protected T target;\n"
+        + "    private View view1;\n"
+        + "    protected InnerUnbinder(final T target, Finder finder, Object source) {\n"
+        + "      this.target = target;\n"
         + "      View view;\n"
         + "      view = finder.findRequiredView(source, 1, \"method 'onItemSelected' and method 'onNothingSelected'\");\n"
-        + "    unbinder.view1 = view;\n"
+        + "      view1 = view;\n"
         + "      ((AdapterView<?>) view).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\n"
         + "        @Override\n"
         + "        public void onItemSelected(AdapterView<?> p0, View p1, int p2, long p3) {\n"
@@ -188,12 +183,6 @@ public class OnItemSelectedTest {
         + "        }\n"
         + "      });\n"
         + "    }\n"
-        + "  protected static class InnerUnbinder<T extends Test> implements Unbinder {\n"
-        + "    protected T target;\n"
-        + "    View view1;\n"
-        + "    protected InnerUnbinder(T target) {\n"
-        + "      this.target = target;\n"
-        + "    }\n"
         + "    @Override\n"
         + "    public void unbind() {\n"
         + "      if (this.target == null) throw new IllegalStateException(\"Bindings already cleared.\");\n"
@@ -239,14 +228,18 @@ public class OnItemSelectedTest {
         + "public class Test$$ViewBinder<T extends Test> implements ViewBinder<T> {\n"
         + "  @Override\n"
         + "  public Unbinder bind(Finder finder, T target, Object source) {\n"
-        + "    InnerUnbinder unbinder = new InnerUnbinder(target);\n"
-        + "    bindToTarget(target, finder, source, unbinder);\n"
-        + "    return unbinder;\n"
+        + "    return new InnerUnbinder(target, finder, source);\n"
         + "  }\n"
-        + "  protected static void bindToTarget(final Test target, Finder finder, Object source, InnerUnbinder unbinder) {\n"
+        + "  protected static class InnerUnbinder<T extends Test> implements Unbinder {\n"
+        + "    protected T target;\n"
+        + "    private View view1;\n"
+        + "    private View view2;\n"
+        + "    private View view3;\n"
+        + "    protected InnerUnbinder(final T target, Finder finder, Object source) {\n"
+        + "      this.target = target;\n"
         + "      View view;\n"
         + "      view = finder.findRequiredView(source, 1, \"method 'onItemSelected' and method 'onNothingSelected'\");\n"
-        + "    unbinder.view1 = view;\n"
+        + "      view1 = view;\n"
         + "      ((AdapterView<?>) view).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\n"
         + "        @Override\n"
         + "        public void onItemSelected(AdapterView<?> p0, View p1, int p2, long p3) {\n"
@@ -258,7 +251,7 @@ public class OnItemSelectedTest {
         + "        }\n"
         + "      });\n"
         + "      view = finder.findRequiredView(source, 2, \"method 'onItemSelected'\");\n"
-        + "    unbinder.view2 = view;\n"
+        + "      view2 = view;\n"
         + "      ((AdapterView<?>) view).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\n"
         + "        @Override\n"
         + "        public void onItemSelected(AdapterView<?> p0, View p1, int p2, long p3) {\n"
@@ -269,7 +262,7 @@ public class OnItemSelectedTest {
         + "        }\n"
         + "      });\n"
         + "      view = finder.findRequiredView(source, 3, \"method 'onNothingSelected'\");\n"
-        + "    unbinder.view3 = view;\n"
+        + "      view3 = view;\n"
         + "      ((AdapterView<?>) view).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\n"
         + "        @Override\n"
         + "        public void onItemSelected(AdapterView<?> p0, View p1, int p2, long p3) {\n"
@@ -280,14 +273,6 @@ public class OnItemSelectedTest {
         + "        }\n"
         + "      });\n"
         + "    }\n"
-        + "  protected static class InnerUnbinder<T extends Test> implements Unbinder {\n"
-        + "    protected T target;\n"
-        + "    View view1;\n"
-        + "    View view2;\n"
-        + "    View view3;\n"
-        + "    protected InnerUnbinder(T target) {\n"
-        + "      this.target = target;\n"
-        + "    }\n"
         + "    @Override\n"
         + "    public void unbind() {\n"
         + "      if (this.target == null) throw new IllegalStateException(\"Bindings already cleared.\");\n"
