diff --git a/butterknife/src/test/java/butterknife/internal/BindIntTest.java b/butterknife/src/test/java/butterknife/internal/BindIntTest.java
new file mode 100644
index 0000000..a8e4f57
--- /dev/null
+++ b/butterknife/src/test/java/butterknife/internal/BindIntTest.java
@@ -0,0 +1,61 @@
+package butterknife.internal;
+
+import com.google.common.base.Joiner;
+import com.google.testing.compile.JavaFileObjects;
+import javax.tools.JavaFileObject;
+import org.junit.Test;
+
+import static com.google.common.truth.Truth.ASSERT;
+import static com.google.testing.compile.JavaSourceSubjectFactory.javaSource;
+
+public class BindIntTest {
+  @Test public void simple() {
+    JavaFileObject source = JavaFileObjects.forSourceString("test.Test", Joiner.on('\n').join(
+        "package test;",
+        "import android.app.Activity;",
+        "import butterknife.BindInt;",
+        "public class Test extends Activity {",
+        "  @BindInt(1) int one;",
+        "}"
+    ));
+
+    JavaFileObject expectedSource = JavaFileObjects.forSourceString("test/Test$$ViewBinder",
+        Joiner.on('\n').join(
+            "package test;",
+            "import android.content.res.Resources;",
+            "import butterknife.ButterKnife.Finder;",
+            "import butterknife.ButterKnife.ViewBinder;",
+            "public class Test$$ViewBinder<T extends test.Test> implements ViewBinder<T> {",
+            "  @Override public void bind(final Finder finder, final T target, Object source) {",
+            "    Resources res = finder.getContext(source).getResources();",
+            "    target.one = res.getInteger(1);",
+            "  }",
+            "  @Override public void unbind(T target) {",
+            "  }",
+            "}"
+        ));
+
+    ASSERT.about(javaSource()).that(source)
+        .processedWith(new ButterKnifeProcessor())
+        .compilesWithoutError()
+        .and()
+        .generatesSources(expectedSource);
+  }
+
+  @Test public void typeMustBeInt() {
+    JavaFileObject source = JavaFileObjects.forSourceString("test.Test", Joiner.on('\n').join(
+        "package test;",
+        "import android.app.Activity;",
+        "import butterknife.BindInt;",
+        "public class Test extends Activity {",
+        "  @BindInt(1) String one;",
+        "}"
+    ));
+
+    ASSERT.about(javaSource()).that(source)
+        .processedWith(new ButterKnifeProcessor())
+        .failsToCompile()
+        .withErrorContaining("@BindInt field type must be 'int'. (test.Test.one)")
+        .in(source).onLine(5);
+  }
+}
