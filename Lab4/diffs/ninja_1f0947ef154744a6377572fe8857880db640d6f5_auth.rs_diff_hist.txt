diff --git a/examples/auth.rs b/examples/auth.rs
index b3fe425..66abe8a 100644
--- a/examples/auth.rs
+++ b/examples/auth.rs
@@ -1,35 +1,32 @@
 use std::{path::PathBuf, time};
 
 use openai::auth::{
-    model::{AuthAccountBuilder, AuthStrategy},
+    model::{AuthAccount, AuthStrategy},
     provide::AuthProvider,
 };
 
 #[tokio::main]
 async fn main() -> anyhow::Result<()> {
-    let ctx = openai::context::ContextArgsBuilder::default()
+    let ctx = openai::context::ContextArgs::builder()
         .arkose_auth_har_file(PathBuf::from(
             "/Users/gngpp/VSCode/ninja/login.chat.openai.com.har",
         ))
-        .build()
-        .unwrap();
+        .build();
     openai::context::init(ctx);
     let email = std::env::var("EMAIL")?;
     let password = std::env::var("PASSWORD")?;
     let auth = openai::auth::AuthClientBuilder::builder()
         .user_agent(openai::HEADER_UA)
-        .timeout(time::Duration::from_secs(1000))
-        .proxy(Some("socks5://10.0.2.1:1081".to_owned()))
-        .preauth_api(Some("https://ai.fakeopen.com/auth/preauth".to_owned()))
-        .connect_timeout(time::Duration::from_secs(1000))
+        .timeout(time::Duration::from_secs(30))
+        .connect_timeout(time::Duration::from_secs(10))
         .build();
     let token = auth
         .do_access_token(
-            &AuthAccountBuilder::default()
+            &AuthAccount::builder()
                 .username(email)
                 .password(password)
-                .option(AuthStrategy::Apple)
-                .build()?,
+                .option(AuthStrategy::Web)
+                .build(),
         )
         .await?;
     let auth_token = openai::token::model::AuthenticateToken::try_from(token)?;
