diff --git a/website/index.html b/website/index.html
index 1171058..8fd469f 100644
--- a/website/index.html
+++ b/website/index.html
@@ -122,6 +122,24 @@
    XML can use it in the <code>onLayoutInflated()</code> callback.</li>
             </ul>
 
+            <h4 id="reset">Injection Reset</h4>
+            <p>Fragments have a different view lifecycle than activities. When injecting a fragment in <code>onCreateView</code>, set the views to <code>null</code> in <code>onDestroyView</code>. Butter Knife has a <code>reset</code> method to do this automatically.</p>
+            <pre class="prettyprint">public class FancyFragment extends Fragment {
+  @InjectView(R.id.button1) Button button1;
+  @InjectView(R.id.button2) Button button2;
+
+  @Override View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
+    View view = inflater.inflate(R.layout.fancy_fragment, container, false);
+    Views.inject(this, view);
+    // TODO Use "injected" views...
+    return view;
+  }
+
+  @Override void onDestroyView() {
+    Views.reset(this);
+  }
+}</pre>
+
             <h4 id="bonus">Bonus</h4>
             <p>Also included are two <code>findById</code> methods which simplify code that still has to find views on a <code>View</code> or <code>Activity</code>. It uses generics to infer the return type and automatically performs the cast.</p>
             <pre class="prettyprint">View view = LayoutInflater.from(context).inflate(R.layout.thing, null);
