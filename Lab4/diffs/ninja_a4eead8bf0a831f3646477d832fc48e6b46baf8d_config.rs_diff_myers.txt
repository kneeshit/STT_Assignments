diff --git a/src/inter/config.rs b/src/inter/config.rs
index 129fbde..57d5379 100644
--- a/src/inter/config.rs
+++ b/src/inter/config.rs
@@ -50,12 +50,20 @@ pub async fn prompt() -> anyhow::Result<()> {
         }
     };
 
-    let mut arkose_har_file = Text::new("ChatGPT ArkoseLabs HAR file ›")
+    let mut arkose_chat_har_file = Text::new("ChatGPT ArkoseLabs HAR file ›")
         .with_render_config(render_config())
         .with_help_message("About the browser HAR file path requested by ChatGPT ArkoseLabs")
         .with_validator(valid_file_path);
     if let Some(content) = conf.arkose_chat_har_path.as_deref() {
-        arkose_har_file = arkose_har_file.with_initial_value(content)
+        arkose_chat_har_file = arkose_chat_har_file.with_initial_value(content)
+    };
+
+    let mut arkose_auth_har_path = Text::new("Auth ArkoseLabs HAR file ›")
+        .with_render_config(render_config())
+        .with_help_message("About the browser HAR file path requested by Auth ArkoseLabs")
+        .with_validator(valid_file_path);
+    if let Some(content) = conf.arkose_auth_har_path.as_deref() {
+        arkose_auth_har_path = arkose_auth_har_path.with_initial_value(content)
     };
 
     let mut arkose_platform_har_path = Text::new("Platform ArkoseLabs HAR file ›")
@@ -105,11 +113,16 @@ pub async fn prompt() -> anyhow::Result<()> {
         .map(|ok| if ok.is_empty() { None } else { Some(ok) })
         .unwrap_or(conf.proxy);
 
-    conf.arkose_chat_har_path = arkose_har_file
+    conf.arkose_chat_har_path = arkose_chat_har_file
         .prompt_skippable()?
         .map(|ok| if ok.is_empty() { None } else { Some(ok) })
         .unwrap_or(conf.arkose_chat_har_path);
 
+    conf.arkose_auth_har_path = arkose_auth_har_path
+        .prompt_skippable()?
+        .map(|ok| if ok.is_empty() { None } else { Some(ok) })
+        .unwrap_or(conf.arkose_auth_har_path);
+
     conf.arkose_platform_har_path = arkose_platform_har_path
         .prompt_skippable()?
         .map(|ok| if ok.is_empty() { None } else { Some(ok) })
