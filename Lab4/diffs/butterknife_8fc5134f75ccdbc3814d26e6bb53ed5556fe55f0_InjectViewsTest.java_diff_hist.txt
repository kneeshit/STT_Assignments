diff --git a/butterknife/src/test/java/butterknife/internal/InjectViewsTest.java b/butterknife/src/test/java/butterknife/internal/InjectViewsTest.java
index 53122ca..ca6148b 100644
--- a/butterknife/src/test/java/butterknife/internal/InjectViewsTest.java
+++ b/butterknife/src/test/java/butterknife/internal/InjectViewsTest.java
@@ -29,12 +29,12 @@ public class InjectViewsTest {
             "import butterknife.ButterKnife.Finder;",
             "import butterknife.ButterKnife.Injector;",
             "public class Test$$ViewInjector<T extends test.Test> implements Injector<T> {",
-            "  @Override public void inject(Finder finder, final T target, Object source) {",
+            "  @Override public void inject(final Finder finder, final T target, Object source) {",
             "    View view;",
             "    target.thing = Finder.arrayOf(",
-            "        finder.findRequiredView(source, 1, \"thing\"),",
-            "        finder.findRequiredView(source, 2, \"thing\"),",
-            "        finder.findRequiredView(source, 3, \"thing\")",
+            "        finder.<android.view.View>findRequiredView(source, 1, \"field 'thing'\"),",
+            "        finder.<android.view.View>findRequiredView(source, 2, \"field 'thing'\"),",
+            "        finder.<android.view.View>findRequiredView(source, 3, \"field 'thing'\")",
             "    );",
             "  }",
             "  @Override public void reset(T target) {",
@@ -68,12 +68,12 @@ public class InjectViewsTest {
             "import butterknife.ButterKnife.Finder;",
             "import butterknife.ButterKnife.Injector;",
             "public class Test$$ViewInjector<T extends test.Test> implements Injector<T> {",
-            "  @Override public void inject(Finder finder, final T target, Object source) {",
+            "  @Override public void inject(final Finder finder, final T target, Object source) {",
             "    View view;",
             "    target.thing = Finder.arrayOf(",
-            "        finder.findRequiredView(source, 1, \"thing\"),",
-            "        finder.findRequiredView(source, 2, \"thing\"),",
-            "        finder.findRequiredView(source, 3, \"thing\")",
+            "        finder.<android.view.View>findRequiredView(source, 1, \"field 'thing'\"),",
+            "        finder.<android.view.View>findRequiredView(source, 2, \"field 'thing'\"),",
+            "        finder.<android.view.View>findRequiredView(source, 3, \"field 'thing'\")",
             "    );",
             "  }",
             "  @Override public void reset(T target) {",
@@ -107,12 +107,12 @@ public class InjectViewsTest {
             "import butterknife.ButterKnife.Finder;",
             "import butterknife.ButterKnife.Injector;",
             "public class Test$$ViewInjector<T extends test.Test> implements Injector<T> {",
-            "  @Override public void inject(Finder finder, final T target, Object source) {",
+            "  @Override public void inject(final Finder finder, final T target, Object source) {",
             "    View view;",
             "    target.thing = Finder.arrayOf(",
-            "        (android.widget.TextView) finder.findRequiredView(source, 1, \"thing\"),",
-            "        (android.widget.TextView) finder.findRequiredView(source, 2, \"thing\"),",
-            "        (android.widget.TextView) finder.findRequiredView(source, 3, \"thing\")",
+            "        finder.<android.widget.TextView>findRequiredView(source, 1, \"field 'thing'\"),",
+            "        finder.<android.widget.TextView>findRequiredView(source, 2, \"field 'thing'\"),",
+            "        finder.<android.widget.TextView>findRequiredView(source, 3, \"field 'thing'\")",
             "    );",
             "  }",
             "  @Override public void reset(T target) {",
@@ -147,12 +147,52 @@ public class InjectViewsTest {
             "import butterknife.ButterKnife.Finder;",
             "import butterknife.ButterKnife.Injector;",
             "public class Test$$ViewInjector<T extends test.Test> implements Injector<T> {",
-            "  @Override public void inject(Finder finder, final T target, Object source) {",
+            "  @Override public void inject(final Finder finder, final T target, Object source) {",
             "    View view;",
             "    target.thing = Finder.listOf(",
-            "        finder.findRequiredView(source, 1, \"thing\"),",
-            "        finder.findRequiredView(source, 2, \"thing\"),",
-            "        finder.findRequiredView(source, 3, \"thing\")",
+            "        finder.<android.view.View>findRequiredView(source, 1, \"field 'thing'\"),",
+            "        finder.<android.view.View>findRequiredView(source, 2, \"field 'thing'\"),",
+            "        finder.<android.view.View>findRequiredView(source, 3, \"field 'thing'\")",
+            "    );",
+            "  }",
+            "  @Override public void reset(T target) {",
+            "    target.thing = null;",
+            "  }",
+            "}"
+        ));
+
+    ASSERT.about(javaSource()).that(source)
+        .processedWith(butterknifeProcessors())
+        .compilesWithoutError()
+        .and()
+        .generatesSources(expectedSource);
+  }
+
+  @Test public void injectingListOfInterface() {
+    JavaFileObject source = JavaFileObjects.forSourceString("test.Test", Joiner.on('\n').join(
+        "package test;",
+        "import android.app.Activity;",
+        "import butterknife.InjectViews;",
+        "import java.util.List;",
+        "public class Test {",
+        "    interface TestInterface {}",
+        "    @InjectViews({1, 2, 3}) List<TestInterface> thing;",
+        "}"
+    ));
+
+    JavaFileObject expectedSource = JavaFileObjects.forSourceString("test/Test$$ViewInjector",
+        Joiner.on('\n').join(
+            "package test;",
+            "import android.view.View;",
+            "import butterknife.ButterKnife.Finder;",
+            "import butterknife.ButterKnife.Injector;",
+            "public class Test$$ViewInjector<T extends test.Test> implements Injector<T> {",
+            "  @Override public void inject(final Finder finder, final T target, Object source) {",
+            "    View view;",
+            "    target.thing = Finder.listOf(",
+            "        finder.<test.Test.TestInterface>findRequiredView(source, 1, \"field 'thing'\"),",
+            "        finder.<test.Test.TestInterface>findRequiredView(source, 2, \"field 'thing'\"),",
+            "        finder.<test.Test.TestInterface>findRequiredView(source, 3, \"field 'thing'\")",
             "    );",
             "  }",
             "  @Override public void reset(T target) {",
@@ -187,12 +227,12 @@ public class InjectViewsTest {
             "import butterknife.ButterKnife.Finder;",
             "import butterknife.ButterKnife.Injector;",
             "public class Test$$ViewInjector<T extends test.Test> implements Injector<T> {",
-            "  @Override public void inject(Finder finder, final T target, Object source) {",
+            "  @Override public void inject(final Finder finder, final T target, Object source) {",
             "    View view;",
             "    target.thing = Finder.listOf(",
-            "        finder.findRequiredView(source, 1, \"thing\"),",
-            "        finder.findRequiredView(source, 2, \"thing\"),",
-            "        finder.findRequiredView(source, 3, \"thing\")",
+            "        finder.<android.view.View>findRequiredView(source, 1, \"field 'thing'\"),",
+            "        finder.<android.view.View>findRequiredView(source, 2, \"field 'thing'\"),",
+            "        finder.<android.view.View>findRequiredView(source, 3, \"field 'thing'\")",
             "    );",
             "  }",
             "  @Override public void reset(T target) {",
@@ -228,12 +268,12 @@ public class InjectViewsTest {
             "import butterknife.ButterKnife.Finder;",
             "import butterknife.ButterKnife.Injector;",
             "public class Test$$ViewInjector<T extends test.Test> implements Injector<T> {",
-            "  @Override public void inject(Finder finder, final T target, Object source) {",
+            "  @Override public void inject(final Finder finder, final T target, Object source) {",
             "    View view;",
             "    target.thing = Finder.listOf(",
-            "        finder.findOptionalView(source, 1),",
-            "        finder.findOptionalView(source, 2),",
-            "        finder.findOptionalView(source, 3)",
+            "        finder.<android.view.View>findOptionalView(source, 1, \"field 'thing'\"),",
+            "        finder.<android.view.View>findOptionalView(source, 2, \"field 'thing'\"),",
+            "        finder.<android.view.View>findOptionalView(source, 3, \"field 'thing'\")",
             "    );",
             "  }",
             "  @Override public void reset(T target) {",
@@ -318,7 +358,7 @@ public class InjectViewsTest {
     ASSERT.about(javaSource()).that(source)
         .processedWith(butterknifeProcessors())
         .failsToCompile()
-        .withErrorContaining("@InjectViews type must extend from View. (test.Test.thing)")
+        .withErrorContaining("@InjectViews type must extend from View or be an interface. (test.Test.thing)")
         .in(source).onLine(6);
   }
 
@@ -330,7 +370,7 @@ public class InjectViewsTest {
     ASSERT.about(javaSource()).that(source)
         .processedWith(butterknifeProcessors())
         .failsToCompile()
-        .withErrorContaining("@InjectViews type must extend from View. (test.Test.thing)")
+        .withErrorContaining("@InjectViews type must extend from View or be an interface. (test.Test.thing)")
         .in(source).onLine(5);
   }
 
