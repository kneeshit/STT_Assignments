diff --git a/src/handle.rs b/src/handle.rs
index b8ea335..40a3b2a 100644
--- a/src/handle.rs
+++ b/src/handle.rs
@@ -1,7 +1,4 @@
-use std::{env, ffi::OsString, ops::Not, path::PathBuf};
-
-use anyhow::bail;
-use inquire::ui::{Color, RenderConfig, Styled};
+use std::{ops::Not, path::PathBuf};
 
 use crate::{
     args::{self, ServeArgs},
@@ -190,49 +187,6 @@ pub(super) fn serve_log() -> anyhow::Result<()> {
     Ok(())
 }
 
-pub(super) fn edit_template_file(edit: Option<PathBuf>) -> anyhow::Result<()> {
-    if let Some(path) = edit {
-        if !path.is_file() {
-            bail!("{} not is file", path.display())
-        }
-
-        let extension = path
-            .extension()
-            .map(|e| format!(".{:?}", e))
-            .unwrap_or_else(|| "".to_owned());
-
-        fn get_default_editor() -> OsString {
-            env::var_os("VISUAL")
-                .or_else(|| env::var_os("EDITOR"))
-                .unwrap_or_else(|| {
-                    if cfg!(windows) {
-                        "notepad.exe".into()
-                    } else {
-                        "vi".into()
-                    }
-                })
-        }
-
-        let file_string = std::fs::read_to_string(&path)?;
-
-        let mut edit_content = inquire::Editor::new("Edit:")
-            .with_editor_command(&get_default_editor())
-            .with_render_config(RenderConfig::default().with_canceled_prompt_indicator(
-                Styled::new("<skipped>").with_fg(Color::DarkYellow),
-            ))
-            .with_file_extension(&extension)
-            .with_predefined_text(&file_string)
-            .prompt()?;
-
-        println!("------------Edit Complete------------\n{}", edit_content);
-
-        edit_content.push('\n');
-
-        std::fs::write(path, edit_content)?
-    }
-    Ok(())
-}
-
 pub(super) fn generate_template(out: Option<PathBuf>) -> anyhow::Result<()> {
     let out = if let Some(out) = out {
         match out.is_dir() {
