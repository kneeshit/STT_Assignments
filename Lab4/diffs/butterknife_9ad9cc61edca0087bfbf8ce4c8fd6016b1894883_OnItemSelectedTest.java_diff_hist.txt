diff --git a/butterknife-compiler/src/test/java/butterknife/OnItemSelectedTest.java b/butterknife-compiler/src/test/java/butterknife/OnItemSelectedTest.java
index 268599f..cc2d548 100644
--- a/butterknife-compiler/src/test/java/butterknife/OnItemSelectedTest.java
+++ b/butterknife-compiler/src/test/java/butterknife/OnItemSelectedTest.java
@@ -34,7 +34,7 @@ public class OnItemSelectedTest {
         + "public class Test$$ViewBinder<T extends Test> implements ViewBinder<T> {\n"
         + "  @Override\n"
         + "  public Unbinder bind(Finder finder, T target, Object source) {\n"
-        + "    return new InnerUnbinder(target, finder, source);\n"
+        + "    return new InnerUnbinder<>(target, finder, source);\n"
         + "  }\n"
         + "  protected static class InnerUnbinder<T extends Test> implements Unbinder {\n"
         + "    protected T target;\n"
@@ -97,7 +97,7 @@ public class OnItemSelectedTest {
         + "public class Test$$ViewBinder<T extends Test> implements ViewBinder<T> {\n"
         + "  @Override\n"
         + "  public Unbinder bind(Finder finder, T target, Object source) {\n"
-        + "    return new InnerUnbinder(target, finder, source);\n"
+        + "    return new InnerUnbinder<>(target, finder, source);\n"
         + "  }\n"
         + "  protected static class InnerUnbinder<T extends Test> implements Unbinder {\n"
         + "    protected T target;\n"
@@ -162,7 +162,7 @@ public class OnItemSelectedTest {
         + "public class Test$$ViewBinder<T extends Test> implements ViewBinder<T> {\n"
         + "  @Override\n"
         + "  public Unbinder bind(Finder finder, T target, Object source) {\n"
-        + "    return new InnerUnbinder(target, finder, source);\n"
+        + "    return new InnerUnbinder<>(target, finder, source);\n"
         + "  }\n"
         + "  protected static class InnerUnbinder<T extends Test> implements Unbinder {\n"
         + "    protected T target;\n"
@@ -228,7 +228,7 @@ public class OnItemSelectedTest {
         + "public class Test$$ViewBinder<T extends Test> implements ViewBinder<T> {\n"
         + "  @Override\n"
         + "  public Unbinder bind(Finder finder, T target, Object source) {\n"
-        + "    return new InnerUnbinder(target, finder, source);\n"
+        + "    return new InnerUnbinder<>(target, finder, source);\n"
         + "  }\n"
         + "  protected static class InnerUnbinder<T extends Test> implements Unbinder {\n"
         + "    protected T target;\n"
