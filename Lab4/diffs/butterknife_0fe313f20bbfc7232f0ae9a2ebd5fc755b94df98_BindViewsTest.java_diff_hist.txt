diff --git a/butterknife-compiler/src/test/java/butterknife/BindViewsTest.java b/butterknife-compiler/src/test/java/butterknife/BindViewsTest.java
index 134f1ed..c9ed9bb 100644
--- a/butterknife-compiler/src/test/java/butterknife/BindViewsTest.java
+++ b/butterknife-compiler/src/test/java/butterknife/BindViewsTest.java
@@ -47,9 +47,9 @@ public class BindViewsTest {
         + "import butterknife.internal.ViewBinder;\n"
         + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
-        + "public class Test_ViewBinder<T extends Test> implements ViewBinder<T> {\n"
+        + "public final class Test_ViewBinder implements ViewBinder<Test> {\n"
         + "  @Override\n"
-        + "  public Unbinder bind(Finder finder, T target, Object source) {\n"
+        + "  public Unbinder bind(Finder finder, Test target, Object source) {\n"
         + "    return new Test_ViewBinding<>(target, finder, source);\n"
         + "  }\n"
         + "}"
@@ -107,9 +107,9 @@ public class BindViewsTest {
         + "import butterknife.internal.ViewBinder;\n"
         + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
-        + "public class Test_ViewBinder<T extends Test> implements ViewBinder<T> {\n"
+        + "public final class Test_ViewBinder implements ViewBinder<Test> {\n"
         + "  @Override\n"
-        + "  public Unbinder bind(Finder finder, T target, Object source) {\n"
+        + "  public Unbinder bind(Finder finder, Test target, Object source) {\n"
         + "    return new Test_ViewBinding<>(target, finder, source);\n"
         + "  }\n"
         + "}"
@@ -167,9 +167,9 @@ public class BindViewsTest {
         + "import butterknife.internal.ViewBinder;\n"
         + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
-        + "public class Test_ViewBinder<T extends Test> implements ViewBinder<T> {\n"
+        + "public final class Test_ViewBinder implements ViewBinder<Test> {\n"
         + "  @Override\n"
-        + "  public Unbinder bind(Finder finder, T target, Object source) {\n"
+        + "  public Unbinder bind(Finder finder, Test target, Object source) {\n"
         + "    return new Test_ViewBinding<>(target, finder, source);\n"
         + "  }\n"
         + "}"
@@ -229,9 +229,9 @@ public class BindViewsTest {
         + "import butterknife.internal.ViewBinder;\n"
         + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
-        + "public class Test_ViewBinder<T extends Test> implements ViewBinder<T> {\n"
+        + "public final class Test_ViewBinder implements ViewBinder<Test> {\n"
         + "  @Override\n"
-        + "  public Unbinder bind(Finder finder, T target, Object source) {\n"
+        + "  public Unbinder bind(Finder finder, Test target, Object source) {\n"
         + "    return new Test_ViewBinding<>(target, finder, source);\n"
         + "  }\n"
         + "}"
@@ -290,9 +290,9 @@ public class BindViewsTest {
         + "import butterknife.internal.ViewBinder;\n"
         + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
-        + "public class Test_ViewBinder<T extends Test> implements ViewBinder<T> {\n"
+        + "public final class Test_ViewBinder implements ViewBinder<Test> {\n"
         + "  @Override\n"
-        + "  public Unbinder bind(Finder finder, T target, Object source) {\n"
+        + "  public Unbinder bind(Finder finder, Test target, Object source) {\n"
         + "    return new Test_ViewBinding<>(target, finder, source);\n"
         + "  }\n"
         + "}"
@@ -351,9 +351,9 @@ public class BindViewsTest {
         + "import butterknife.internal.ViewBinder;\n"
         + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
-        + "public class Test_ViewBinder<T extends Test> implements ViewBinder<T> {\n"
+        + "public final class Test_ViewBinder implements ViewBinder<Test> {\n"
         + "  @Override\n"
-        + "  public Unbinder bind(Finder finder, T target, Object source) {\n"
+        + "  public Unbinder bind(Finder finder, Test target, Object source) {\n"
         + "    return new Test_ViewBinding<>(target, finder, source);\n"
         + "  }\n"
         + "}"
@@ -413,9 +413,9 @@ public class BindViewsTest {
         + "import butterknife.internal.ViewBinder;\n"
         + "import java.lang.Object;\n"
         + "import java.lang.Override;\n"
-        + "public class Test_ViewBinder<T extends Test> implements ViewBinder<T> {\n"
+        + "public final class Test_ViewBinder implements ViewBinder<Test> {\n"
         + "  @Override\n"
-        + "  public Unbinder bind(Finder finder, T target, Object source) {\n"
+        + "  public Unbinder bind(Finder finder, Test target, Object source) {\n"
         + "    return new Test_ViewBinding<>(target, finder, source);\n"
         + "  }\n"
         + "}"
