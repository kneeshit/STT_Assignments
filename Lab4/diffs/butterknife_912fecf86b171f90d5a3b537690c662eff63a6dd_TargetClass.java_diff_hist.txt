diff --git a/butterknife/src/main/java/butterknife/internal/TargetClass.java b/butterknife/src/main/java/butterknife/internal/TargetClass.java
index df6ace2..dec8ee1 100644
--- a/butterknife/src/main/java/butterknife/internal/TargetClass.java
+++ b/butterknife/src/main/java/butterknife/internal/TargetClass.java
@@ -22,6 +22,15 @@ class TargetClass {
     getTargetView(id).fields.add(new FieldInjection(name, type));
   }
 
+  boolean addMethod(int id, String name, String parameterType) {
+    ViewId targetView = getTargetView(id);
+    if (targetView.method != null) {
+      return false;
+    }
+    targetView.method = new MethodInjection(name, parameterType);
+    return true;
+  }
+
   void setParentInjector(String parentInjector) {
     this.parentInjector = parentInjector;
   }
@@ -46,7 +55,7 @@ class TargetClass {
     builder.append("import android.view.View;\n");
     builder.append("import butterknife.Views.Finder;\n\n");
     builder.append("public class ").append(className).append(" {\n");
-    builder.append("  public static void inject(Finder finder, ")
+    builder.append("  public static void inject(Finder finder, final ")
         .append(targetClass)
         .append(" target, Object source) {\n");
     if (parentInjector != null) {
@@ -57,13 +66,26 @@ class TargetClass {
     builder.append("    View view;\n");
     for (Map.Entry<Integer, ViewId> entry : viewIdMap.entrySet()) {
       builder.append("    view = finder.findById(source, ").append(entry.getKey()).append(");\n");
-      for (FieldInjection fieldInjection : entry.getValue().fields) {
+      ViewId viewId = entry.getValue();
+      for (FieldInjection fieldInjection : viewId.fields) {
         builder.append("    target.")
             .append(fieldInjection.name)
             .append(" = (")
             .append(fieldInjection.type)
             .append(") view;\n");
       }
+      MethodInjection method = viewId.method;
+      if (method != null) {
+        builder.append("    view.setOnClickListener(new View.OnClickListener() {\n")
+            .append("      @Override public void onClick(View view) {\n")
+            .append("        target.").append(method.name).append("(");
+        if (method.type != null) {
+          builder.append("(").append(method.type).append(") view");
+        }
+        builder.append(");\n")
+            .append("      }\n")
+            .append("    });\n");
+      }
     }
     builder.append("  }\n\n");
     builder.append("  public static void reset(").append(targetClass).append(" target) {\n");
@@ -85,6 +107,7 @@ class TargetClass {
   static class ViewId {
     final int id;
     final Set<FieldInjection> fields = new LinkedHashSet<FieldInjection>();
+    MethodInjection method;
 
     ViewId(int id) {
       this.id = id;
@@ -100,4 +123,14 @@ class TargetClass {
       this.type = type;
     }
   }
+
+  static class MethodInjection {
+    final String name;
+    final String type;
+
+    MethodInjection(String name, String type) {
+      this.name = name;
+      this.type = type;
+    }
+  }
 }
