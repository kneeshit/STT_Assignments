diff --git a/src/utils.js b/src/utils.js
index 67122295..9e570806 100644
--- a/src/utils.js
+++ b/src/utils.js
@@ -361,42 +361,6 @@ export function transition(el, stages) {
     });
 }
 
-export function deepProxy(target, proxyHandler) {
-    // If target is null, return it.
-    if (target === null) return target;
-
-    // If target is not an object, return it.
-    if (typeof target !== 'object') return target;
-
-    // If target is a DOM node (like in the case of this.$el), return it.
-    if (target instanceof Node) return target
-
-    // If target is already an Alpine proxy, return it.
-    if (target['$isAlpineProxy']) return target;
-
-    // Otherwise, proxy the properties recursively.
-    // This enables reactivity on setting nested data.
-    for (let property in target) {
-        // Don't Proxy readonly properties.
-        if (propertyIsReadOnly(target, property)) continue
-
-        target[property] = deepProxy(target[property], proxyHandler)
-    }
-
-    return new Proxy(target, proxyHandler)
-}
-
-function propertyIsReadOnly(target, property) {
-    let propertyDescriptor = Object.getOwnPropertyDescriptor(target, property)
-
-    while (typeof propertyDescriptor === 'undefined' && target !== null) {
-        target = Object.getPrototypeOf(target)
-        propertyDescriptor = Object.getOwnPropertyDescriptor(target, property);
-    }
-
-    return propertyDescriptor && ! propertyDescriptor.writable
-}
-
 function isNumeric(subject){
     return ! isNaN(subject)
 }
