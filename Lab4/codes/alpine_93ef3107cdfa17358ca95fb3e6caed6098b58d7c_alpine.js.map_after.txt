{"version":3,"file":"alpine.js","sources":["../src/utils.js","../src/component.js","../src/index.js"],"sourcesContent":["\r\n// Thanks @stimulus:\r\n// https://github.com/stimulusjs/stimulus/blob/master/packages/%40stimulus/core/src/application.ts\r\nexport function domReady() {\r\n    return new Promise(resolve => {\r\n        if (document.readyState == \"loading\") {\r\n            document.addEventListener(\"DOMContentLoaded\", resolve)\r\n        } else {\r\n            resolve()\r\n        }\r\n    })\r\n}\r\n\r\nexport function arrayUnique(array) {\r\n    var a = array.concat();\r\n    for(var i=0; i<a.length; ++i) {\r\n        for(var j=i+1; j<a.length; ++j) {\r\n            if(a[i] === a[j])\r\n                a.splice(j--, 1);\r\n        }\r\n    }\r\n\r\n    return a;\r\n}\r\n\r\nexport function isTesting() {\r\n    return navigator.userAgent, navigator.userAgent.includes(\"Node.js\")\r\n        || navigator.userAgent.includes(\"jsdom\")\r\n}\r\n\r\nexport function kebabCase(subject) {\r\n    return subject.replace(/([a-z])([A-Z])/g, '$1-$2').replace(/[_\\s]/, '-').toLowerCase()\r\n}\r\n\r\nexport function keyToModifier(key) {\r\n    switch (key) {\r\n        case '/':\r\n            return 'slash'\r\n        case ' ':\r\n        case 'Spacebar':\r\n            return 'space'\r\n        default:\r\n            return kebabCase(key)\r\n    }\r\n}\r\n\r\nexport function walkSkippingNestedComponents(el, callback, isRoot = true) {\r\n    if (el.hasAttribute('x-data') && ! isRoot) return\r\n\r\n    callback(el)\r\n\r\n    let node = el.firstElementChild\r\n\r\n    while (node) {\r\n        walkSkippingNestedComponents(node, callback, false)\r\n\r\n        node = node.nextElementSibling\r\n    }\r\n}\r\n\r\nexport function debounce(func, wait) {\r\n    var timeout\r\n    return function () {\r\n        var context = this, args = arguments\r\n        var later = function () {\r\n            timeout = null\r\n            func.apply(context, args)\r\n        }\r\n        clearTimeout(timeout)\r\n        timeout = setTimeout(later, wait)\r\n    }\r\n}\r\n\r\nexport function saferEval(expression, dataContext, additionalHelperVariables = {}) {\r\n    return (new Function(['$data', ...Object.keys(additionalHelperVariables)], `var result; with($data) { result = ${expression} }; return result`))(\r\n        dataContext, ...Object.values(additionalHelperVariables)\r\n    )\r\n}\r\n\r\nexport function saferEvalNoReturn(expression, dataContext, additionalHelperVariables = {}) {\r\n    return (new Function(['dataContext', ...Object.keys(additionalHelperVariables)], `with(dataContext) { ${expression} }`))(\r\n        dataContext, ...Object.values(additionalHelperVariables)\r\n    )\r\n}\r\n\r\nexport function isXAttr(attr) {\r\n    const name = replaceAtAndColonWithStandardSyntax(attr.name)\r\n\r\n    const xAttrRE = /x-(on|bind|data|text|html|model|if|show|cloak|transition|ref)/\r\n\r\n    return xAttrRE.test(name)\r\n}\r\n\r\nexport function getXAttrs(el, type) {\r\n    return Array.from(el.attributes)\r\n        .filter(isXAttr)\r\n        .map(attr => {\r\n            const name = replaceAtAndColonWithStandardSyntax(attr.name)\r\n\r\n            const typeMatch = name.match(/x-(on|bind|data|text|html|model|if|show|cloak|transition|ref)/)\r\n            const valueMatch = name.match(/:([a-zA-Z\\-:]+)/)\r\n            const modifiers = name.match(/\\.[^.\\]]+(?=[^\\]]*$)/g) || []\r\n\r\n            return {\r\n                type: typeMatch ? typeMatch[1] : null,\r\n                value: valueMatch ? valueMatch[1] : null,\r\n                modifiers: modifiers.map(i => i.replace('.', '')),\r\n                expression: attr.value,\r\n            }\r\n        })\r\n        .filter(i => {\r\n            // If no type is passed in for filtering, bypassfilter\r\n            if (! type) return true\r\n\r\n            return i.type === type\r\n        })\r\n}\r\n\r\nexport function replaceAtAndColonWithStandardSyntax(name) {\r\n    if (name.startsWith('@')) {\r\n        return name.replace('@', 'x-on:')\r\n    } else if (name.startsWith(':')) {\r\n        return name.replace(':', 'x-bind:')\r\n    }\r\n\r\n    return name\r\n}\r\n\r\nexport function transitionIn(el, callback, forceSkip = false) {\r\n    if (forceSkip) return callback()\r\n\r\n    const attrs = getXAttrs(el, 'transition')\r\n\r\n    if (attrs.length < 1) return callback()\r\n\r\n    const enter = (attrs.find(i => i.value === 'enter') || { expression: '' }).expression.split(' ').filter(i => i !== '')\r\n    const enterStart = (attrs.find(i => i.value === 'enter-start') || { expression: '' }).expression.split(' ').filter(i => i !== '')\r\n    const enterEnd = (attrs.find(i => i.value === 'enter-end') || { expression: '' }).expression.split(' ').filter(i => i !== '')\r\n\r\n    transition(el, enter, enterStart, enterEnd, callback, () => {})\r\n}\r\n\r\nexport function transitionOut(el, callback, forceSkip = false) {\r\n    if (forceSkip) return callback()\r\n\r\n    const attrs = getXAttrs(el, 'transition')\r\n\r\n    if (attrs.length < 1) return callback()\r\n\r\n    const leave = (attrs.find(i => i.value === 'leave') || { expression: '' }).expression.split(' ').filter(i => i !== '')\r\n    const leaveStart = (attrs.find(i => i.value === 'leave-start') || { expression: '' }).expression.split(' ').filter(i => i !== '')\r\n    const leaveEnd = (attrs.find(i => i.value === 'leave-end') || { expression: '' }).expression.split(' ').filter(i => i !== '')\r\n\r\n    transition(el, leave, leaveStart, leaveEnd, () => {}, callback)\r\n}\r\n\r\nexport function transition(el, classesDuring, classesStart, classesEnd, hook1, hook2) {\r\n    el.classList.add(...classesStart)\r\n    el.classList.add(...classesDuring)\r\n\r\n    requestAnimationFrame(() => {\r\n        const duration = Number(getComputedStyle(el).transitionDuration.replace('s', '')) * 1000\r\n\r\n        hook1()\r\n\r\n        requestAnimationFrame(() => {\r\n            el.classList.remove(...classesStart)\r\n            el.classList.add(...classesEnd)\r\n\r\n            setTimeout(() => {\r\n                hook2()\r\n\r\n                // Adding an \"isConnected\" check, in case the callback\r\n                // removed the element from the DOM.\r\n                if (el.isConnected) {\r\n                    el.classList.remove(...classesDuring)\r\n                    el.classList.remove(...classesEnd)\r\n                }\r\n            }, duration);\r\n        })\r\n    });\r\n}\r\n","import { arrayUnique, walkSkippingNestedComponents, keyToModifier, saferEval, saferEvalNoReturn, getXAttrs, debounce, transitionIn, transitionOut } from './utils'\r\n\r\nexport default class Component {\r\n    constructor(el) {\r\n        this.$el = el\r\n\r\n        const dataAttr = this.$el.getAttribute('x-data')\r\n        const dataExpression = dataAttr === '' ? '{}' : dataAttr\r\n        const initExpression = this.$el.getAttribute('x-init')\r\n        const createdExpression = this.$el.getAttribute('x-created')\r\n        const mountedExpression = this.$el.getAttribute('x-mounted')\r\n\r\n        const unobservedData = saferEval(dataExpression, {})\r\n\r\n        // Add our magic properties to the original data for access.\r\n        unobservedData.$el = this.$el\r\n        unobservedData.$refs = this.getRefsProxy()\r\n\r\n        this.nextTickStack = []\r\n        unobservedData.$nextTick = (callback) => {\r\n            this.nextTickStack.push(callback)\r\n        }\r\n\r\n        // Construct a Proxy-based observable. This will be used to handle reactivity.\r\n        this.$data = this.wrapDataInObservable(unobservedData)\r\n\r\n        var initReturnedCallback\r\n        if (initExpression) {\r\n            // We want to allow data manipulation, but not trigger DOM updates just yet.\r\n            // We haven't even initialized the elements with their Alpine bindings. I mean c'mon.\r\n            this.pauseReactivity = true\r\n            initReturnedCallback = saferEval(this.$el.getAttribute('x-init'), this.$data)\r\n            this.pauseReactivity = false\r\n        }\r\n\r\n        if (createdExpression) {\r\n            console.warn('AlpineJS Warning: \"x-created\" is deprecated and will be removed in the next major version. Use \"x-init\" instead.')\r\n            this.pauseReactivity = true\r\n            saferEvalNoReturn(this.$el.getAttribute('x-created'), this.$data)\r\n            this.pauseReactivity = false\r\n        }\r\n\r\n        // Register all our listeners and set all our attribute bindings.\r\n        this.initializeElements()\r\n\r\n        // Use mutation observer to detect new elements being added within this component at run-time.\r\n        // Alpine's just so darn flexible amirite?\r\n        this.listenForNewElementsToInitialize()\r\n\r\n        if (typeof initReturnedCallback === 'function') {\r\n            // Run the callback returned form the \"x-init\" hook to allow the user to do stuff after\r\n            // Alpine's got it's grubby little paws all over everything.\r\n            initReturnedCallback.call(this.$data)\r\n        }\r\n\r\n        if (mountedExpression) {\r\n            console.warn('AlpineJS Warning: \"x-mounted\" is deprecated and will be removed in the next major version. Use \"x-init\" (with a callback return) for the same behavior.')\r\n            // Run an \"x-mounted\" hook to allow the user to do stuff after\r\n            // Alpine's got it's grubby little paws all over everything.\r\n            saferEvalNoReturn(mountedExpression, this.$data)\r\n        }\r\n    }\r\n\r\n    wrapDataInObservable(data) {\r\n        var self = this\r\n\r\n        const proxyHandler = {\r\n            set(obj, property, value) {\r\n                const setWasSuccessful = Reflect.set(obj, property, value)\r\n\r\n                // Don't react to data changes for cases like the `x-created` hook.\r\n                if (self.pauseReactivity) return\r\n\r\n                debounce(() => {\r\n                    self.refresh()\r\n\r\n                    // Walk through the $nextTick stack and clear it as we go.\r\n                    while (self.nextTickStack.length > 0) {\r\n                        self.nextTickStack.shift()()\r\n                    }\r\n                }, 0)()\r\n\r\n                return setWasSuccessful\r\n            },\r\n            get(target, key) {\r\n                // If the property we are trying to get is a proxy, just return it.\r\n                // Like in the case of $refs\r\n                if (target[key] && target[key].isRefsProxy) return target[key]\r\n\r\n                // If property is a DOM node, just return it. (like in the case of this.$el)\r\n                if (target[key] && target[key] instanceof Node) return target[key]\r\n\r\n                // If accessing a nested property, retur this proxy recursively.\r\n                // This enables reactivity on setting nested data.\r\n                if (typeof target[key] === 'object' && target[key] !== null) {\r\n                    return new Proxy(target[key], proxyHandler)\r\n                }\r\n\r\n                // If none of the above, just return the flippin' value. Gawsh.\r\n                return target[key]\r\n            }\r\n        }\r\n\r\n        return new Proxy(data, proxyHandler)\r\n    }\r\n\r\n    initializeElements() {\r\n        walkSkippingNestedComponents(this.$el, el => {\r\n            this.initializeElement(el)\r\n        })\r\n    }\r\n\r\n    initializeElement(el) {\r\n        // To support class attribute merging, we have to know what the element's\r\n        // original class attribute looked like for reference.\r\n        if (el.hasAttribute('class') && getXAttrs(el).length > 0) {\r\n            el.__originalClasses = el.getAttribute('class').split(' ')\r\n        }\r\n\r\n        this.registerListeners(el)\r\n        this.resolveBoundAttributes(el, true)\r\n    }\r\n\r\n    registerListeners(el) {\r\n        getXAttrs(el).forEach(({ type, value, modifiers, expression }) => {\r\n            switch (type) {\r\n                case 'on':\r\n                    var event = value\r\n                    this.registerListener(el, event, modifiers, expression)\r\n                    break;\r\n\r\n                case 'model':\r\n                    // If the element we are binding to is a select, a radio, or checkbox\r\n                    // we'll listen for the change event instead of the \"input\" event.\r\n                    var event = (el.tagName.toLowerCase() === 'select')\r\n                        || ['checkbox', 'radio'].includes(el.type)\r\n                        || modifiers.includes('lazy')\r\n                        ? 'change' : 'input'\r\n\r\n                    const listenerExpression = this.generateExpressionForXModelListener(el, modifiers, expression)\r\n\r\n                    this.registerListener(el, event, modifiers, listenerExpression)\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        })\r\n    }\r\n\r\n    resolveBoundAttributes(el, initialUpdate = false) {\r\n        getXAttrs(el).forEach(({ type, value, modifiers, expression }) => {\r\n            switch (type) {\r\n                case 'model':\r\n                    var attrName = 'value'\r\n                    var output = this.evaluateReturnExpression(expression)\r\n                    this.updateAttributeValue(el, attrName, output)\r\n                    break;\r\n\r\n                case 'bind':\r\n                    var attrName = value\r\n                    var output = this.evaluateReturnExpression(expression)\r\n                    this.updateAttributeValue(el, attrName, output)\r\n                    break;\r\n\r\n                case 'text':\r\n                    var output = this.evaluateReturnExpression(expression)\r\n                    this.updateTextValue(el, output)\r\n                    break;\r\n\r\n                case 'html':\r\n                    var output = this.evaluateReturnExpression(expression)\r\n                    this.updateHtmlValue(el, output)\r\n                    break;\r\n\r\n                case 'show':\r\n                    var output = this.evaluateReturnExpression(expression)\r\n                    this.updateVisibility(el, output, initialUpdate)\r\n                    break;\r\n\r\n                case 'if':\r\n                    var output = this.evaluateReturnExpression(expression)\r\n                    this.updatePresence(el, output)\r\n                    break;\r\n\r\n                case 'cloak':\r\n                    el.removeAttribute('x-cloak')\r\n                    break;\r\n\r\n                default:\r\n                    break;\r\n            }\r\n        })\r\n    }\r\n\r\n    listenForNewElementsToInitialize() {\r\n        const targetNode = this.$el\r\n\r\n        const observerOptions = {\r\n            childList: true,\r\n            attributes: true,\r\n            subtree: true,\r\n        }\r\n\r\n        const observer = new MutationObserver((mutations) => {\r\n            for (let i=0; i < mutations.length; i++){\r\n                // Filter out mutations triggered from child components.\r\n                if (! mutations[i].target.closest('[x-data]').isSameNode(this.$el)) return\r\n\r\n                if (mutations[i].type === 'attributes' && mutations[i].attributeName === 'x-data') {\r\n                    const rawData = saferEval(mutations[i].target.getAttribute('x-data'), {})\r\n\r\n                    Object.keys(rawData).forEach(key => {\r\n                        if (this.$data[key] !== rawData[key]) {\r\n                            this.$data[key] = rawData[key]\r\n                        }\r\n                    })\r\n                }\r\n\r\n                if (mutations[i].addedNodes.length > 0) {\r\n                    mutations[i].addedNodes.forEach(node => {\r\n                        if (node.nodeType !== 1) return\r\n\r\n                        if (node.matches('[x-data]')) return\r\n\r\n                        if (getXAttrs(node).length > 0) {\r\n                            this.initializeElement(node)\r\n                        }\r\n                    })\r\n                }\r\n              }\r\n        })\r\n\r\n        observer.observe(targetNode, observerOptions);\r\n    }\r\n\r\n    refresh() {\r\n        walkSkippingNestedComponents(this.$el, el => {\r\n            this.resolveBoundAttributes(el)\r\n        })\r\n    }\r\n\r\n    generateExpressionForXModelListener(el, modifiers, dataKey) {\r\n        var rightSideOfExpression = ''\r\n        if (el.type === 'checkbox') {\r\n            // If the data we are binding to is an array, toggle it's value inside the array.\r\n            if (Array.isArray(this.$data[dataKey])) {\r\n                rightSideOfExpression = `$event.target.checked ? ${dataKey}.concat([$event.target.value]) : ${dataKey}.filter(i => i !== $event.target.value)`\r\n            } else {\r\n                rightSideOfExpression = `$event.target.checked`\r\n            }\r\n        } else if (el.tagName.toLowerCase() === 'select' && el.multiple) {\r\n            rightSideOfExpression = modifiers.includes('number')\r\n                ? 'Array.from($event.target.selectedOptions).map(option => { return parseFloat(option.value || option.text) })'\r\n                : 'Array.from($event.target.selectedOptions).map(option => { return option.value || option.text })'\r\n        } else {\r\n            rightSideOfExpression = modifiers.includes('number')\r\n                ? 'parseFloat($event.target.value)'\r\n                : (modifiers.includes('trim') ? '$event.target.value.trim()' : '$event.target.value')\r\n        }\r\n\r\n        if (el.type === 'radio') {\r\n            // Radio buttons only work properly when they share a name attribute.\r\n            // People might assume we take care of that for them, because\r\n            // they already set a shared \"x-model\" attribute.\r\n            if (! el.hasAttribute('name')) el.setAttribute('name', dataKey)\r\n        }\r\n\r\n        return `${dataKey} = ${rightSideOfExpression}`\r\n    }\r\n\r\n    registerListener(el, event, modifiers, expression) {\r\n        if (modifiers.includes('away')) {\r\n            const handler = e => {\r\n                // Don't do anything if the click came form the element or within it.\r\n                if (el.contains(e.target)) return\r\n\r\n                // Don't do anything if this element isn't currently visible.\r\n                if (el.offsetWidth < 1 && el.offsetHeight < 1) return\r\n\r\n                // Now that we are sure the element is visible, AND the click\r\n                // is from outside it, let's run the expression.\r\n                this.runListenerHandler(expression, e)\r\n\r\n                if (modifiers.includes('once')) {\r\n                    document.removeEventListener(event, handler)\r\n                }\r\n            }\r\n\r\n            // Listen for this event at the root level.\r\n            document.addEventListener(event, handler)\r\n        } else {\r\n            const listenerTarget = modifiers.includes('window')\r\n                ? window : (modifiers.includes('document') ? document : el)\r\n\r\n            const handler = e => {\r\n                const keyModifiers = modifiers.filter(i => i !== 'window').filter(i => i !== 'document')\r\n\r\n                // The user is scoping the keydown listener to a specific key using modifiers.\r\n                if (event === 'keydown' && keyModifiers.length > 0) {\r\n                    // The user is listening for a specific key.\r\n                    if (keyModifiers.length === 1 && ! keyModifiers.includes(keyToModifier(e.key))) return\r\n\r\n                    // The user is listening for key combinations.\r\n                    const systemKeyModifiers = ['ctrl', 'shift', 'alt', 'meta', 'cmd', 'super']\r\n                    const selectedSystemKeyModifiers = systemKeyModifiers.filter(modifier => keyModifiers.includes(modifier))\r\n\r\n                    if (selectedSystemKeyModifiers.length > 0) {\r\n                        const activelyPressedKeyModifiers = selectedSystemKeyModifiers.filter(modifier => {\r\n                            // Alias \"cmd\" and \"super\" to \"meta\"\r\n                            if (modifier === 'cmd' || modifier === 'super') modifier = 'meta'\r\n\r\n                            return e[`${modifier}Key`]\r\n                        })\r\n\r\n                        if (activelyPressedKeyModifiers.length === 0) return\r\n                    }\r\n                }\r\n\r\n                if (modifiers.includes('prevent')) e.preventDefault()\r\n                if (modifiers.includes('stop')) e.stopPropagation()\r\n\r\n                this.runListenerHandler(expression, e)\r\n\r\n                if (modifiers.includes('once')) {\r\n                    listenerTarget.removeEventListener(event, handler)\r\n                }\r\n            }\r\n\r\n            listenerTarget.addEventListener(event, handler)\r\n        }\r\n    }\r\n\r\n    runListenerHandler(expression, e) {\r\n        this.evaluateCommandExpression(expression, {\r\n            '$event': e,\r\n        })\r\n    }\r\n\r\n    evaluateReturnExpression(expression) {\r\n        return saferEval(expression, this.$data)\r\n    }\r\n\r\n    evaluateCommandExpression(expression, extraData) {\r\n        saferEvalNoReturn(expression, this.$data, extraData)\r\n    }\r\n\r\n    updateTextValue(el, value) {\r\n        el.innerText = value\r\n    }\r\n\r\n    updateHtmlValue(el, value) {\r\n        el.innerHTML = value\r\n    }\r\n\r\n    updateVisibility(el, value, initialUpdate = false) {\r\n        if (! value) {\r\n            transitionOut(el, () => {\r\n                el.style.display = 'none'\r\n            }, initialUpdate)\r\n        } else {\r\n            transitionIn(el, () => {\r\n                if (el.style.length === 1 && el.style.display !== '') {\r\n                    el.removeAttribute('style')\r\n                } else {\r\n                    el.style.removeProperty('display')\r\n                }\r\n            }, initialUpdate)\r\n        }\r\n    }\r\n\r\n    updatePresence(el, expressionResult) {\r\n        if (el.nodeName.toLowerCase() !== 'template') console.warn(`Alpine: [x-if] directive should only be added to <template> tags.`)\r\n\r\n        const elementHasAlreadyBeenAdded = el.nextElementSibling && el.nextElementSibling.__x_inserted_me === true\r\n\r\n        if (expressionResult && ! elementHasAlreadyBeenAdded) {\r\n            const clone = document.importNode(el.content, true);\r\n\r\n            el.parentElement.insertBefore(clone, el.nextElementSibling)\r\n\r\n            el.nextElementSibling.__x_inserted_me = true\r\n\r\n            transitionIn(el.nextElementSibling, () => {})\r\n        } else if (! expressionResult && elementHasAlreadyBeenAdded) {\r\n            transitionOut(el.nextElementSibling, () => {\r\n                el.nextElementSibling.remove()\r\n            })\r\n        }\r\n    }\r\n\r\n    updateAttributeValue(el, attrName, value) {\r\n        if (attrName === 'value') {\r\n            if (el.type === 'radio') {\r\n                el.checked = el.value == value\r\n            } else if (el.type === 'checkbox') {\r\n                if (Array.isArray(value)) {\r\n                    // I'm purposely not using Array.includes here because it's\r\n                    // strict, and because of Numeric/String mis-casting, I\r\n                    // want the \"includes\" to be \"fuzzy\".\r\n                    let valueFound = false\r\n                    value.forEach(val => {\r\n                        if (val == el.value) {\r\n                            valueFound = true\r\n                        }\r\n                    })\r\n\r\n                    el.checked = valueFound\r\n                } else {\r\n                    el.checked = !! value\r\n                }\r\n            } else if (el.tagName === 'SELECT') {\r\n                this.updateSelect(el, value)\r\n            } else {\r\n                el.value = value\r\n            }\r\n        } else if (attrName === 'class') {\r\n            if (Array.isArray(value)) {\r\n                const originalClasses = el.__originalClasses || []\r\n                el.setAttribute('class', arrayUnique(originalClasses.concat(value)).join(' '))\r\n            } else if (typeof value === 'object') {\r\n                Object.keys(value).forEach(classNames => {\r\n                    if (value[classNames]) {\r\n                        classNames.split(' ').forEach(className => el.classList.add(className))\r\n                    } else {\r\n                        classNames.split(' ').forEach(className => el.classList.remove(className))\r\n                    }\r\n                })\r\n            } else {\r\n                const originalClasses = el.__originalClasses || []\r\n                const newClasses = value.split(' ')\r\n                el.setAttribute('class', arrayUnique(originalClasses.concat(newClasses)).join(' '))\r\n            }\r\n        } else if (['disabled', 'readonly', 'required', 'checked', 'hidden'].includes(attrName)) {\r\n            // Boolean attributes have to be explicitly added and removed, not just set.\r\n            if (!! value) {\r\n                el.setAttribute(attrName, '')\r\n            } else {\r\n                el.removeAttribute(attrName)\r\n            }\r\n        } else {\r\n            el.setAttribute(attrName, value)\r\n        }\r\n    }\r\n\r\n    updateSelect(el, value) {\r\n        const arrayWrappedValue = [].concat(value).map(value => { return value + '' })\r\n\r\n        Array.from(el.options).forEach(option => {\r\n            option.selected = arrayWrappedValue.includes(option.value || option.text)\r\n        })\r\n    }\r\n\r\n    getRefsProxy() {\r\n        var self = this\r\n\r\n        var refObj = {}\r\n\r\n        // If we are in IE, since the polyfill needs all properties to be defined before building the proxy,\r\n        // we just loop on the element, look for any x-ref and create a the property on a fake object.\r\n        // We don't need to put a real value since it will be resolved by the proxy class\r\n        if (window.document.documentMode) {\r\n            walkSkippingNestedComponents(self.$el, el => {\r\n                if (el.hasAttribute('x-ref')) {\r\n                    refObj.el = true\r\n                }\r\n            })\r\n        }\r\n\r\n        // One of the goals of this is to not hold elements in memory, but rather re-evaluate\r\n        // the DOM when the system needs something from it. This way, the framework is flexible and\r\n        // friendly to outside DOM changes from libraries like Vue/Livewire.\r\n        // For this reason, I'm using an \"on-demand\" proxy to fake a \"$refs\" object.\r\n        return new Proxy(refObj, {\r\n            get(object, property) {\r\n                if (property === 'isRefsProxy') return true\r\n\r\n                var ref\r\n\r\n                // We can't just query the DOM because it's hard to filter out refs in\r\n                // nested components.\r\n                walkSkippingNestedComponents(self.$el, el => {\r\n                    if (el.hasAttribute('x-ref') && el.getAttribute('x-ref') === property) {\r\n                        ref = el\r\n                    }\r\n                })\r\n\r\n                return ref\r\n            }\r\n        })\r\n    }\r\n}\r\n","import Component from './component'\r\nimport { domReady, isTesting } from './utils'\r\n\r\nconst Alpine = {\r\n    start: async function () {\r\n        if (! isTesting()) {\r\n            await domReady()\r\n        }\r\n\r\n        this.discoverComponents(el => {\r\n            this.initializeComponent(el)\r\n        })\r\n\r\n        // It's easier and more performant to just support Turbolinks than listen\r\n        // to MutationOberserver mutations at the document level.\r\n        document.addEventListener(\"turbolinks:load\", () => {\r\n            this.discoverUninitializedComponents(el => {\r\n                this.initializeComponent(el)\r\n            })\r\n        })\r\n\r\n        this.listenForNewUninitializedComponentsAtRunTime(el => {\r\n            this.initializeComponent(el)\r\n        })\r\n    },\r\n\r\n    discoverComponents: function (callback) {\r\n        const rootEls = document.querySelectorAll('[x-data]');\r\n\r\n        rootEls.forEach(rootEl => {\r\n            callback(rootEl)\r\n        })\r\n    },\r\n\r\n    discoverUninitializedComponents: function (callback) {\r\n        const rootEls = document.querySelectorAll('[x-data]');\r\n\r\n        Array.from(rootEls)\r\n            .filter(el => el.__x === undefined)\r\n            .forEach(rootEl => {\r\n                callback(rootEl)\r\n            })\r\n    },\r\n\r\n    listenForNewUninitializedComponentsAtRunTime: function (callback) {\r\n        const targetNode = document.querySelector('body');\r\n\r\n        const observerOptions = {\r\n            childList: true,\r\n            attributes: true,\r\n            subtree: true,\r\n        }\r\n\r\n        const observer = new MutationObserver((mutations) => {\r\n            for (let i=0; i < mutations.length; i++){\r\n                if (mutations[i].addedNodes.length > 0) {\r\n                    mutations[i].addedNodes.forEach(node => {\r\n                        if (node.nodeType !== 1) return\r\n\r\n                        if (node.matches('[x-data]')) callback(node)\r\n                    })\r\n                }\r\n              }\r\n        })\r\n\r\n        observer.observe(targetNode, observerOptions)\r\n    },\r\n\r\n    initializeComponent: function (el) {\r\n        el.__x = new Component(el)\r\n    }\r\n}\r\n\r\nif (! isTesting()) {\r\n    window.Alpine = Alpine\r\n    window.Alpine.start()\r\n}\r\n\r\nexport default Alpine\r\n"],"names":["arrayUnique","array","a","concat","i","length","j","splice","isTesting","navigator","userAgent","includes","walkSkippingNestedComponents","el","callback","isRoot","hasAttribute","node","firstElementChild","nextElementSibling","saferEval","expression","dataContext","additionalHelperVariables","Function","Object","keys","values","saferEvalNoReturn","isXAttr","attr","name","replaceAtAndColonWithStandardSyntax","test","getXAttrs","type","Array","from","attributes","filter","map","typeMatch","match","valueMatch","modifiers","value","replace","startsWith","transitionIn","forceSkip","attrs","transition","find","split","transitionOut","classesDuring","classesStart","classesEnd","hook1","hook2","classList","add","requestAnimationFrame","duration","Number","getComputedStyle","transitionDuration","remove","setTimeout","isConnected","Component","constructor","$el","dataAttr","this","getAttribute","dataExpression","initExpression","createdExpression","mountedExpression","unobservedData","initReturnedCallback","$refs","getRefsProxy","nextTickStack","$nextTick","push","$data","wrapDataInObservable","pauseReactivity","console","warn","initializeElements","listenForNewElementsToInitialize","call","data","self","proxyHandler","set","obj","property","setWasSuccessful","Reflect","func","wait","timeout","refresh","shift","context","args","arguments","later","apply","clearTimeout","get","target","key","isRefsProxy","Node","Proxy","initializeElement","__originalClasses","registerListeners","resolveBoundAttributes","forEach","event","registerListener","tagName","toLowerCase","listenerExpression","generateExpressionForXModelListener","initialUpdate","attrName","output","evaluateReturnExpression","updateAttributeValue","updateTextValue","updateHtmlValue","updateVisibility","updatePresence","removeAttribute","targetNode","MutationObserver","mutations","closest","isSameNode","attributeName","rawData","addedNodes","nodeType","matches","observe","childList","subtree","dataKey","rightSideOfExpression","isArray","multiple","setAttribute","handler","e","contains","offsetWidth","offsetHeight","runListenerHandler","document","removeEventListener","addEventListener","listenerTarget","window","keyModifiers","keyToModifier","selectedSystemKeyModifiers","modifier","preventDefault","stopPropagation","evaluateCommandExpression","extraData","innerText","innerHTML","style","display","removeProperty","expressionResult","nodeName","elementHasAlreadyBeenAdded","__x_inserted_me","clone","importNode","content","parentElement","insertBefore","checked","valueFound","val","updateSelect","originalClasses","join","classNames","className","newClasses","arrayWrappedValue","options","option","selected","text","refObj","documentMode","object","ref","Alpine","start","async","Promise","resolve","readyState","discoverComponents","initializeComponent","discoverUninitializedComponents","listenForNewUninitializedComponentsAtRunTime","querySelectorAll","rootEl","rootEls","undefined","__x","querySelector"],"mappings":"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"}