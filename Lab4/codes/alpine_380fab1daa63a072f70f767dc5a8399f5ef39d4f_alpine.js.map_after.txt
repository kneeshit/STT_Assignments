{"version":3,"file":"alpine.js","sources":["../src/utils.js","../src/directives/for.js","../src/directives/bind.js","../src/directives/on.js","../src/directives/model.js","../node_modules/observable-membrane/dist/modules/observable-membrane.js","../src/component.js","../src/directives/show.js","../src/directives/if.js","../src/index.js"],"sourcesContent":["\n// Thanks @stimulus:\n// https://github.com/stimulusjs/stimulus/blob/master/packages/%40stimulus/core/src/application.ts\nexport function domReady() {\n    return new Promise(resolve => {\n        if (document.readyState == \"loading\") {\n            document.addEventListener(\"DOMContentLoaded\", resolve)\n        } else {\n            resolve()\n        }\n    })\n}\n\nexport function arrayUnique(array) {\n    var a = array.concat();\n    for(var i=0; i<a.length; ++i) {\n        for(var j=i+1; j<a.length; ++j) {\n            if(a[i] === a[j])\n                a.splice(j--, 1);\n        }\n    }\n\n    return a;\n}\n\nexport function isTesting() {\n    return navigator.userAgent, navigator.userAgent.includes(\"Node.js\")\n        || navigator.userAgent.includes(\"jsdom\")\n}\n\nexport function kebabCase(subject) {\n    return subject.replace(/([a-z])([A-Z])/g, '$1-$2').replace(/[_\\s]/, '-').toLowerCase()\n}\n\nexport function walk(el, callback) {\n    if (callback(el) === false) return\n\n    let node = el.firstElementChild\n\n    while (node) {\n        walk(node, callback)\n\n        node = node.nextElementSibling\n    }\n}\n\nexport function debounce(func, wait) {\n    var timeout\n    return function () {\n        var context = this, args = arguments\n        var later = function () {\n            timeout = null\n            func.apply(context, args)\n        }\n        clearTimeout(timeout)\n        timeout = setTimeout(later, wait)\n    }\n}\n\nexport function saferEval(expression, dataContext, additionalHelperVariables = {}) {\n    return (new Function(['$data', ...Object.keys(additionalHelperVariables)], `var result; with($data) { result = ${expression} }; return result`))(\n        dataContext, ...Object.values(additionalHelperVariables)\n    )\n}\n\nexport function saferEvalNoReturn(expression, dataContext, additionalHelperVariables = {}) {\n    return (new Function(['dataContext', ...Object.keys(additionalHelperVariables)], `with(dataContext) { ${expression} }`))(\n        dataContext, ...Object.values(additionalHelperVariables)\n    )\n}\n\nexport function isXAttr(attr) {\n    const name = replaceAtAndColonWithStandardSyntax(attr.name)\n\n    const xAttrRE = /x-(on|bind|data|text|html|model|if|for|show|cloak|transition|ref)/\n\n    return xAttrRE.test(name)\n}\n\nexport function getXAttrs(el, type) {\n    return Array.from(el.attributes)\n        .filter(isXAttr)\n        .map(attr => {\n            const name = replaceAtAndColonWithStandardSyntax(attr.name)\n\n            const typeMatch = name.match(/x-(on|bind|data|text|html|model|if|for|show|cloak|transition|ref)/)\n            const valueMatch = name.match(/:([a-zA-Z\\-:]+)/)\n            const modifiers = name.match(/\\.[^.\\]]+(?=[^\\]]*$)/g) || []\n\n            return {\n                type: typeMatch ? typeMatch[1] : null,\n                value: valueMatch ? valueMatch[1] : null,\n                modifiers: modifiers.map(i => i.replace('.', '')),\n                expression: attr.value,\n            }\n        })\n        .filter(i => {\n            // If no type is passed in for filtering, bypass filter\n            if (! type) return true\n\n            return i.type === type\n        })\n}\n\nexport function replaceAtAndColonWithStandardSyntax(name) {\n    if (name.startsWith('@')) {\n        return name.replace('@', 'x-on:')\n    } else if (name.startsWith(':')) {\n        return name.replace(':', 'x-bind:')\n    }\n\n    return name\n}\n\nexport function transitionIn(el, show, forceSkip = false) {\n    // We don't want to transition on the initial page load.\n    if (forceSkip) return show()\n\n    const attrs = getXAttrs(el, 'transition')\n    const showAttr = getXAttrs(el, 'show')[0]\n\n    // If this is triggered by a x-show.transition.\n    if (showAttr && showAttr.modifiers.includes('transition')) {\n        let modifiers = showAttr.modifiers\n\n        // If x-show.transition.out, we'll skip the \"in\" transition.\n        if (modifiers.includes('out') && ! modifiers.includes('in')) return show()\n\n        const settingBothSidesOfTransition = modifiers.includes('in') && modifiers.includes('out')\n\n        // If x-show.transition.in...out... only use \"in\" related modifiers for this transition.\n        modifiers = settingBothSidesOfTransition\n            ? modifiers.filter((i, index) => index < modifiers.indexOf('out')) : modifiers\n\n        transitionHelperIn(el, modifiers, show)\n    // Otherwise, we can assume x-transition:enter.\n    } else if (attrs.length > 0) {\n        transitionClassesIn(el, attrs, show)\n    } else {\n    // If neither, just show that damn thing.\n        show()\n    }\n}\n\nexport function transitionOut(el, hide, forceSkip = false) {\n    if (forceSkip) return hide()\n\n    const attrs = getXAttrs(el, 'transition')\n    const showAttr = getXAttrs(el, 'show')[0]\n\n    if (showAttr && showAttr.modifiers.includes('transition')) {\n        let modifiers = showAttr.modifiers\n\n        if (modifiers.includes('in') && ! modifiers.includes('out')) return hide()\n\n        const settingBothSidesOfTransition = modifiers.includes('in') && modifiers.includes('out')\n\n        modifiers = settingBothSidesOfTransition\n            ? modifiers.filter((i, index) => index > modifiers.indexOf('out')) : modifiers\n\n        transitionHelperOut(el, modifiers, settingBothSidesOfTransition, hide)\n    } else if (attrs.length > 0) {\n        transitionClassesOut(el, attrs, hide)\n    } else {\n        hide()\n    }\n}\n\nexport function transitionHelperIn(el, modifiers, showCallback) {\n    // Default values inspired by: https://material.io/design/motion/speed.html#duration\n    const styleValues = {\n        duration: modifierValue(modifiers, 'duration', 150),\n        origin: modifierValue(modifiers, 'origin', 'center'),\n        first: {\n            opacity: 0,\n            scale: modifierValue(modifiers, 'scale', 95),\n        },\n        second: {\n            opacity: 1,\n            scale: 100,\n        },\n    }\n\n    transitionHelper(el, modifiers, showCallback, () => {}, styleValues)\n}\n\nexport function transitionHelperOut(el, modifiers, settingBothSidesOfTransition, hideCallback) {\n    // Make the \"out\" transition .5x slower than the \"in\". (Visually better)\n    // HOWEVER, if they explicitly set a duration for the \"out\" transition,\n    // use that.\n    const duration = settingBothSidesOfTransition\n        ? modifierValue(modifiers, 'duration', 150)\n        : modifierValue(modifiers, 'duration', 150) / 2\n\n    const styleValues = {\n        duration: duration,\n        origin: modifierValue(modifiers, 'origin', 'center'),\n        first: {\n            opacity: 1,\n            scale: 100,\n        },\n        second: {\n            opacity: 0,\n            scale: modifierValue(modifiers, 'scale', 95),\n        },\n    }\n\n    transitionHelper(el, modifiers, () => {}, hideCallback, styleValues)\n}\n\nfunction modifierValue(modifiers, key, fallback) {\n    // If the modifier isn't present, use the default.\n    if (modifiers.indexOf(key) === -1) return fallback\n\n    // If it IS present, grab the value after it: x-show.transition.duration.500ms\n    const rawValue = modifiers[modifiers.indexOf(key) + 1]\n\n    if (! rawValue) return fallback\n\n    if (key === 'scale') {\n        // Check if the very next value is NOT a number and return the fallback.\n        // If x-show.transition.scale, we'll use the default scale value.\n        // That is how a user opts out of the opacity transition.\n        if (! isNumeric(rawValue)) return fallback\n    }\n\n    if (key === 'duration') {\n        // Support x-show.transition.duration.500ms && duration.500\n        let match = rawValue.match(/([0-9]+)ms/)\n        if (match) return match[1]\n    }\n\n    if (key === 'origin') {\n        // Support chaining origin directions: x-show.transition.top.right\n        if (['top', 'right', 'left', 'center', 'bottom'].includes(modifiers[modifiers.indexOf(key) + 2])) {\n            return [rawValue, modifiers[modifiers.indexOf(key) + 2]].join(' ')\n        }\n    }\n\n    return rawValue\n}\n\nexport function transitionHelper(el, modifiers, hook1, hook2, styleValues) {\n    // If the user set these style values, we'll put them back when we're done with them.\n    const opacityCache = el.style.opacity\n    const transformCache = el.style.transform\n    const transformOriginCache = el.style.transformOrigin\n\n    // If no modifiers are present: x-show.transition, we'll default to both opacity and scale.\n    const noModifiers = ! modifiers.includes('opacity') && ! modifiers.includes('scale')\n    const transitionOpacity = noModifiers || modifiers.includes('opacity')\n    const transitionScale = noModifiers || modifiers.includes('scale')\n\n    // These are the explicit stages of a transition (same stages for in and for out).\n    // This way you can get a birds eye view of the hooks, and the differences\n    // between them.\n    const stages = {\n        start() {\n            if (transitionOpacity) el.style.opacity = styleValues.first.opacity\n            if (transitionScale) el.style.transform = `scale(${styleValues.first.scale / 100})`\n        },\n        during() {\n            if (transitionScale) el.style.transformOrigin = styleValues.origin\n            el.style.transitionProperty = [(transitionOpacity ? `opacity` : ``), (transitionScale ? `transform` : ``)].join(' ').trim()\n            el.style.transitionDuration = `${styleValues.duration / 1000}s`\n            el.style.transitionTimingFunction = `cubic-bezier(0.4, 0.0, 0.2, 1)`\n        },\n        show() {\n            hook1()\n        },\n        end() {\n            if (transitionOpacity) el.style.opacity = styleValues.second.opacity\n            if (transitionScale) el.style.transform = `scale(${styleValues.second.scale / 100})`\n        },\n        hide() {\n            hook2()\n        },\n        cleanup() {\n            if (transitionOpacity) el.style.opacity = opacityCache\n            if (transitionScale) el.style.transform = transformCache\n            if (transitionScale) el.style.transformOrigin = transformOriginCache\n            el.style.transitionProperty = null\n            el.style.transitionDuration = null\n            el.style.transitionTimingFunction = null\n        },\n    }\n\n    transition(el, stages)\n}\n\nexport function transitionClassesIn(el, directives, showCallback) {\n    const enter = (directives.find(i => i.value === 'enter') || { expression: '' }).expression.split(' ').filter(i => i !== '')\n    const enterStart = (directives.find(i => i.value === 'enter-start') || { expression: '' }).expression.split(' ').filter(i => i !== '')\n    const enterEnd = (directives.find(i => i.value === 'enter-end') || { expression: '' }).expression.split(' ').filter(i => i !== '')\n\n    transitionClasses(el, enter, enterStart, enterEnd, showCallback, () => {})\n}\n\nexport function transitionClassesOut(el, directives, hideCallback) {\n    const leave = (directives.find(i => i.value === 'leave') || { expression: '' }).expression.split(' ').filter(i => i !== '')\n    const leaveStart = (directives.find(i => i.value === 'leave-start') || { expression: '' }).expression.split(' ').filter(i => i !== '')\n    const leaveEnd = (directives.find(i => i.value === 'leave-end') || { expression: '' }).expression.split(' ').filter(i => i !== '')\n\n    transitionClasses(el, leave, leaveStart, leaveEnd, () => {}, hideCallback)\n}\n\nexport function transitionClasses(el, classesDuring, classesStart, classesEnd, hook1, hook2) {\n    const originalClasses = el.__x_original_classes || []\n\n    const stages = {\n        start() {\n            el.classList.add(...classesStart)\n        },\n        during() {\n            el.classList.add(...classesDuring)\n        },\n        show() {\n            hook1()\n        },\n        end() {\n            // Don't remove classes that were in the original class attribute.\n            el.classList.remove(...classesStart.filter(i => !originalClasses.includes(i)))\n            el.classList.add(...classesEnd)\n        },\n        hide() {\n            hook2()\n        },\n        cleanup() {\n            el.classList.remove(...classesDuring.filter(i => !originalClasses.includes(i)))\n            el.classList.remove(...classesEnd.filter(i => !originalClasses.includes(i)))\n        },\n    }\n\n    transition(el, stages)\n}\n\nexport function transition(el, stages) {\n    stages.start()\n    stages.during()\n\n    requestAnimationFrame(() => {\n        // Note: Safari's transitionDuration property will list out comma separated transition durations\n        // for every single transition property. Let's grab the first one and call it a day.\n        let duration = Number(getComputedStyle(el).transitionDuration.replace(/,.*/, '').replace('s', '')) * 1000\n\n        stages.show()\n\n        requestAnimationFrame(() => {\n            stages.end()\n\n            setTimeout(() => {\n                stages.hide()\n\n                // Adding an \"isConnected\" check, in case the callback\n                // removed the element from the DOM.\n                if (el.isConnected) {\n                    stages.cleanup()\n                }\n            }, duration);\n        })\n    });\n}\n\nfunction isNumeric(subject){\n    return ! isNaN(subject)\n}\n","import { transitionIn, transitionOut, getXAttrs } from '../utils'\n\nexport function handleForDirective(component, el, expression, initialUpdate) {\n    if (el.tagName.toLowerCase() !== 'template') console.warn('Alpine: [x-for] directive should only be added to <template> tags.')\n\n    const { single, bunch, iterator1, iterator2 } = parseFor(expression)\n\n    var items\n    const ifAttr = getXAttrs(el, 'if')[0]\n    if (ifAttr && ! component.evaluateReturnExpression(el, ifAttr.expression))  {\n        // If there is an \"x-if\" attribute in conjunction with an x-for,\n        // AND x-if resolves to false, just pretend the x-for is\n        // empty, effectively hiding it.\n        items = []\n    } else {\n        items = component.evaluateReturnExpression(el, bunch)\n    }\n\n    // As we walk the array, we'll also walk the DOM (updating/creating as we go).\n    var previousEl = el\n    items.forEach((i, index, group) => {\n        const currentKey = getThisIterationsKeyFromTemplateTag(component, el, single, iterator1, iterator2, i, index, group)\n        let currentEl = previousEl.nextElementSibling\n\n        // Let's check and see if the x-for has already generated an element last time it ran.\n        if (currentEl && currentEl.__x_for_key !== undefined) {\n            // If the the key's don't match.\n            if (currentEl.__x_for_key !== currentKey) {\n                // We'll look ahead to see if we can find it further down.\n                var tmpCurrentEl = currentEl\n                while(tmpCurrentEl) {\n                    // If we found it later in the DOM.\n                    if (tmpCurrentEl.__x_for_key === currentKey) {\n                        // Move it to where it's supposed to be in the DOM.\n                        el.parentElement.insertBefore(tmpCurrentEl, currentEl)\n                        // And set it as the current element as if we just created it.\n                        currentEl = tmpCurrentEl\n                        break\n                    }\n\n                    tmpCurrentEl = (tmpCurrentEl.nextElementSibling && tmpCurrentEl.nextElementSibling.__x_for_key !== undefined) ? tmpCurrentEl.nextElementSibling : false\n                }\n            }\n\n            // Temporarily remove the key indicator to allow the normal \"updateElements\" to work\n            delete currentEl.__x_for_key\n\n            let xForVars = {}\n            xForVars[single] = i\n            if (iterator1) xForVars[iterator1] = index\n            if (iterator2) xForVars[iterator2] = group\n            currentEl.__x_for = xForVars\n            component.updateElements(currentEl, () => {\n                return currentEl.__x_for\n            })\n        } else {\n            // There are no more .__x_for_key elements, meaning the page is first loading, OR, there are\n            // extra items in the array that need to be added as new elements.\n\n            // Let's create a clone from the template.\n            const clone = document.importNode(el.content, true)\n\n            if (clone.childElementCount !== 1) console.warn('Alpine: <template> tag with [x-for] encountered with multiple element roots. Make sure <template> only has a single child node.')\n\n            // Insert it where we are in the DOM.\n            el.parentElement.insertBefore(clone, currentEl)\n\n            // Set it as the current element.\n            currentEl = previousEl.nextElementSibling\n\n            // And transition it in if it's not the first page load.\n            transitionIn(currentEl, () => {}, initialUpdate)\n\n            // Now, let's walk the new DOM node and initialize everything,\n            // including new nested components.\n            // Note we are resolving the \"extraData\" alias stuff from the dom element value so that it's\n            // always up to date for listener handlers that don't get re-registered.\n            let xForVars = {}\n            xForVars[single] = i\n            if (iterator1) xForVars[iterator1] = index\n            if (iterator2) xForVars[iterator2] = group\n            currentEl.__x_for = xForVars\n            component.initializeElements(currentEl, () => {\n                return currentEl.__x_for\n            })\n        }\n\n        currentEl.__x_for_key = currentKey\n\n        previousEl = currentEl\n    })\n\n    // Now that we've added/updated/moved all the elements for the current state of the loop.\n    // Anything left over, we can get rid of.\n    var nextElementFromOldLoop = (previousEl.nextElementSibling && previousEl.nextElementSibling.__x_for_key !== undefined) ? previousEl.nextElementSibling : false\n\n    while(nextElementFromOldLoop) {\n        const nextElementFromOldLoopImmutable = nextElementFromOldLoop\n        const nextSibling = nextElementFromOldLoop.nextElementSibling\n\n        transitionOut(nextElementFromOldLoop, () => {\n            nextElementFromOldLoopImmutable.remove()\n        })\n\n        nextElementFromOldLoop = (nextSibling && nextSibling.__x_for_key !== undefined) ? nextSibling : false\n    }\n}\n\n// This was taken from VueJS 2.* core. Thanks Vue!\nfunction parseFor (expression) {\n    const forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/\n    const stripParensRE = /^\\(|\\)$/g\n    const forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/\n\n    const inMatch = expression.match(forAliasRE)\n    if (! inMatch) return\n    const res = {}\n    res.bunch = inMatch[2].trim()\n    const single = inMatch[1].trim().replace(stripParensRE, '')\n    const iteratorMatch = single.match(forIteratorRE)\n    if (iteratorMatch) {\n        res.single = single.replace(forIteratorRE, '').trim()\n        res.iterator1 = iteratorMatch[1].trim()\n        if (iteratorMatch[2]) {\n            res.iterator2 = iteratorMatch[2].trim()\n        }\n    } else {\n        res.single = single\n    }\n    return res\n  }\n\nfunction getThisIterationsKeyFromTemplateTag(component, el, single, iterator1, iterator2, i, index, group) {\n    const keyAttr = getXAttrs(el, 'bind').filter(attr => attr.value === 'key')[0]\n\n    let keyAliases = { [single]: i }\n    if (iterator1) keyAliases[iterator1] = index\n    if (iterator2) keyAliases[iterator2] = group\n\n    return keyAttr\n        ? component.evaluateReturnExpression(el, keyAttr.expression, () => keyAliases)\n        : index\n}\n","import { arrayUnique } from '../utils'\n\nexport function handleAttributeBindingDirective(component, el, attrName, expression, extraVars) {\n    var value = component.evaluateReturnExpression(el, expression, extraVars)\n\n    if (attrName === 'value') {\n        // If nested model key is undefined, set the default value to empty string.\n        if (value === undefined && expression.match(/\\./).length) {\n            value = ''\n        }\n\n        if (el.type === 'radio') {\n            el.checked = el.value == value\n        } else if (el.type === 'checkbox') {\n            if (Array.isArray(value)) {\n                // I'm purposely not using Array.includes here because it's\n                // strict, and because of Numeric/String mis-casting, I\n                // want the \"includes\" to be \"fuzzy\".\n                let valueFound = false\n                value.forEach(val => {\n                    if (val == el.value) {\n                        valueFound = true\n                    }\n                })\n\n                el.checked = valueFound\n            } else {\n                el.checked = !! value\n            }\n        } else if (el.tagName === 'SELECT') {\n            updateSelect(el, value)\n        } else {\n            el.value = value\n        }\n    } else if (attrName === 'class') {\n        if (Array.isArray(value)) {\n            const originalClasses = el.__x_original_classes || []\n            el.setAttribute('class', arrayUnique(originalClasses.concat(value)).join(' '))\n        } else if (typeof value === 'object') {\n            Object.keys(value).forEach(classNames => {\n                if (value[classNames]) {\n                    classNames.split(' ').forEach(className => el.classList.add(className))\n                } else {\n                    classNames.split(' ').forEach(className => el.classList.remove(className))\n                }\n            })\n        } else {\n            const originalClasses = el.__x_original_classes || []\n            const newClasses = value.split(' ')\n            el.setAttribute('class', arrayUnique(originalClasses.concat(newClasses)).join(' '))\n        }\n    } else if (['disabled', 'readonly', 'required', 'checked', 'hidden', 'selected', 'open'].includes(attrName)) {\n        // Boolean attributes have to be explicitly added and removed, not just set.\n        if (!! value) {\n            el.setAttribute(attrName, '')\n        } else {\n            el.removeAttribute(attrName)\n        }\n    } else {\n        el.setAttribute(attrName, value)\n    }\n}\n\nfunction updateSelect(el, value) {\n    const arrayWrappedValue = [].concat(value).map(value => { return value + '' })\n\n    Array.from(el.options).forEach(option => {\n        option.selected = arrayWrappedValue.includes(option.value || option.text)\n    })\n}\n","import { kebabCase } from '../utils'\n\nexport function registerListener(component, el, event, modifiers, expression, extraVars = {}) {\n    if (modifiers.includes('away')) {\n        const handler = e => {\n            // Don't do anything if the click came form the element or within it.\n            if (el.contains(e.target)) return\n\n            // Don't do anything if this element isn't currently visible.\n            if (el.offsetWidth < 1 && el.offsetHeight < 1) return\n\n            // Now that we are sure the element is visible, AND the click\n            // is from outside it, let's run the expression.\n            runListenerHandler(component, expression, e, extraVars)\n\n            if (modifiers.includes('once')) {\n                document.removeEventListener(event, handler)\n            }\n        }\n\n        // Listen for this event at the root level.\n        document.addEventListener(event, handler)\n    } else {\n        const listenerTarget = modifiers.includes('window')\n            ? window : (modifiers.includes('document') ? document : el)\n\n        const handler = e => {\n            // Remove this global event handler if the element that declared it\n            // has been removed. It's now stale.\n            if (listenerTarget === window || listenerTarget === document) {\n                if (! document.body.contains(el)) {\n                    listenerTarget.removeEventListener(event, handler)\n                    return\n                }\n            }\n\n            if (isKeyEvent(event)) {\n                if (isListeningForASpecificKeyThatHasntBeenPressed(e, modifiers)) {\n                    return\n                }\n            }\n\n            if (modifiers.includes('prevent')) e.preventDefault()\n            if (modifiers.includes('stop')) e.stopPropagation()\n\n            const returnValue = runListenerHandler(component, expression, e, extraVars)\n\n            if (returnValue === false) {\n                e.preventDefault()\n            } else {\n                if (modifiers.includes('once')) {\n                    listenerTarget.removeEventListener(event, handler)\n                }\n            }\n        }\n\n        listenerTarget.addEventListener(event, handler)\n    }\n}\n\nfunction runListenerHandler(component, expression, e, extraVars) {\n    return component.evaluateCommandExpression(e.target, expression, () => {\n        return {...extraVars(), '$event': e}\n    })\n}\n\nfunction isKeyEvent(event) {\n    return ['keydown', 'keyup'].includes(event)\n}\n\nfunction isListeningForASpecificKeyThatHasntBeenPressed(e, modifiers) {\n    let keyModifiers = modifiers.filter(i => {\n        return ! ['window', 'document', 'prevent', 'stop'].includes(i)\n    })\n\n    // If no modifier is specified, we'll call it a press.\n    if (keyModifiers.length === 0) return false\n\n    // If one is passed, AND it matches the key pressed, we'll call it a press.\n    if (keyModifiers.length === 1 && keyModifiers[0] === keyToModifier(e.key)) return false\n\n    // The user is listening for key combinations.\n    const systemKeyModifiers = ['ctrl', 'shift', 'alt', 'meta', 'cmd', 'super']\n    const selectedSystemKeyModifiers = systemKeyModifiers.filter(modifier => keyModifiers.includes(modifier))\n\n    keyModifiers = keyModifiers.filter(i => ! selectedSystemKeyModifiers.includes(i))\n\n    if (selectedSystemKeyModifiers.length > 0) {\n        const activelyPressedKeyModifiers = selectedSystemKeyModifiers.filter(modifier => {\n            // Alias \"cmd\" and \"super\" to \"meta\"\n            if (modifier === 'cmd' || modifier === 'super') modifier = 'meta'\n\n            return e[`${modifier}Key`]\n        })\n\n        // If all the modifiers selected are pressed, ...\n        if (activelyPressedKeyModifiers.length === selectedSystemKeyModifiers.length) {\n            // AND the remaining key is pressed as well. It's a press.\n            if (keyModifiers[0] === keyToModifier(e.key)) return false\n        }\n    }\n\n    // We'll call it NOT a valid keypress.\n    return true\n}\n\nfunction keyToModifier(key) {\n    switch (key) {\n        case '/':\n            return 'slash'\n        case ' ':\n        case 'Spacebar':\n            return 'space'\n        default:\n            return kebabCase(key)\n    }\n}\n","import { registerListener } from './on'\n\nexport function registerModelListener(component, el, modifiers, expression, extraVars) {\n    // If the element we are binding to is a select, a radio, or checkbox\n    // we'll listen for the change event instead of the \"input\" event.\n    var event = (el.tagName.toLowerCase() === 'select')\n        || ['checkbox', 'radio'].includes(el.type)\n        || modifiers.includes('lazy')\n        ? 'change' : 'input'\n\n    const listenerExpression = `${expression} = rightSideOfExpression($event, ${expression})`\n\n    registerListener(component, el, event, modifiers, listenerExpression, () => {\n        return {\n            ...extraVars(),\n            rightSideOfExpression: generateModelAssignmentFunction(el, modifiers, expression),\n        }\n    })\n}\n\nfunction generateModelAssignmentFunction(el, modifiers, expression) {\n    if (el.type === 'radio') {\n        // Radio buttons only work properly when they share a name attribute.\n        // People might assume we take care of that for them, because\n        // they already set a shared \"x-model\" attribute.\n        if (! el.hasAttribute('name')) el.setAttribute('name', expression)\n    }\n\n    return (event, currentValue) => {\n        // Check for event.detail due to an issue where IE11 handles other events as a CustomEvent.\n        if (event instanceof CustomEvent && event.detail) {\n            return event.detail\n        } else if (el.type === 'checkbox') {\n            // If the data we are binding to is an array, toggle it's value inside the array.\n            if (Array.isArray(currentValue)) {\n                return event.target.checked ? currentValue.concat([event.target.value]) : currentValue.filter(i => i !== event.target.value)\n            } else {\n                return event.target.checked\n            }\n        } else if (el.tagName.toLowerCase() === 'select' && el.multiple) {\n            return modifiers.includes('number')\n                ? Array.from(event.target.selectedOptions).map(option => { return parseFloat(option.value || option.text) })\n                : Array.from(event.target.selectedOptions).map(option => { return option.value || option.text })\n        } else {\n            return modifiers.includes('number')\n                ? parseFloat(event.target.value)\n                : (modifiers.includes('trim') ? event.target.value.trim() : event.target.value)\n        }\n    }\n}\n","/**\n * Copyright (C) 2017 salesforce.com, inc.\n */\nconst { isArray } = Array;\nconst { getPrototypeOf, create: ObjectCreate, defineProperty: ObjectDefineProperty, defineProperties: ObjectDefineProperties, isExtensible, getOwnPropertyDescriptor, getOwnPropertyNames, getOwnPropertySymbols, preventExtensions, hasOwnProperty, } = Object;\nconst { push: ArrayPush, concat: ArrayConcat, map: ArrayMap, } = Array.prototype;\nconst OtS = {}.toString;\nfunction toString(obj) {\n    if (obj && obj.toString) {\n        return obj.toString();\n    }\n    else if (typeof obj === 'object') {\n        return OtS.call(obj);\n    }\n    else {\n        return obj + '';\n    }\n}\nfunction isUndefined(obj) {\n    return obj === undefined;\n}\nfunction isFunction(obj) {\n    return typeof obj === 'function';\n}\nfunction isObject(obj) {\n    return typeof obj === 'object';\n}\nconst proxyToValueMap = new WeakMap();\nfunction registerProxy(proxy, value) {\n    proxyToValueMap.set(proxy, value);\n}\nconst unwrap = (replicaOrAny) => proxyToValueMap.get(replicaOrAny) || replicaOrAny;\n\nfunction wrapValue(membrane, value) {\n    return membrane.valueIsObservable(value) ? membrane.getProxy(value) : value;\n}\n/**\n * Unwrap property descriptors will set value on original descriptor\n * We only need to unwrap if value is specified\n * @param descriptor external descrpitor provided to define new property on original value\n */\nfunction unwrapDescriptor(descriptor) {\n    if (hasOwnProperty.call(descriptor, 'value')) {\n        descriptor.value = unwrap(descriptor.value);\n    }\n    return descriptor;\n}\nfunction lockShadowTarget(membrane, shadowTarget, originalTarget) {\n    const targetKeys = ArrayConcat.call(getOwnPropertyNames(originalTarget), getOwnPropertySymbols(originalTarget));\n    targetKeys.forEach((key) => {\n        let descriptor = getOwnPropertyDescriptor(originalTarget, key);\n        // We do not need to wrap the descriptor if configurable\n        // Because we can deal with wrapping it when user goes through\n        // Get own property descriptor. There is also a chance that this descriptor\n        // could change sometime in the future, so we can defer wrapping\n        // until we need to\n        if (!descriptor.configurable) {\n            descriptor = wrapDescriptor(membrane, descriptor, wrapValue);\n        }\n        ObjectDefineProperty(shadowTarget, key, descriptor);\n    });\n    preventExtensions(shadowTarget);\n}\nclass ReactiveProxyHandler {\n    constructor(membrane, value) {\n        this.originalTarget = value;\n        this.membrane = membrane;\n    }\n    get(shadowTarget, key) {\n        const { originalTarget, membrane } = this;\n        const value = originalTarget[key];\n        const { valueObserved } = membrane;\n        valueObserved(originalTarget, key);\n        return membrane.getProxy(value);\n    }\n    set(shadowTarget, key, value) {\n        const { originalTarget, membrane: { valueMutated } } = this;\n        const oldValue = originalTarget[key];\n        if (oldValue !== value) {\n            originalTarget[key] = value;\n            valueMutated(originalTarget, key);\n        }\n        else if (key === 'length' && isArray(originalTarget)) {\n            // fix for issue #236: push will add the new index, and by the time length\n            // is updated, the internal length is already equal to the new length value\n            // therefore, the oldValue is equal to the value. This is the forking logic\n            // to support this use case.\n            valueMutated(originalTarget, key);\n        }\n        return true;\n    }\n    deleteProperty(shadowTarget, key) {\n        const { originalTarget, membrane: { valueMutated } } = this;\n        delete originalTarget[key];\n        valueMutated(originalTarget, key);\n        return true;\n    }\n    apply(shadowTarget, thisArg, argArray) {\n        /* No op */\n    }\n    construct(target, argArray, newTarget) {\n        /* No op */\n    }\n    has(shadowTarget, key) {\n        const { originalTarget, membrane: { valueObserved } } = this;\n        valueObserved(originalTarget, key);\n        return key in originalTarget;\n    }\n    ownKeys(shadowTarget) {\n        const { originalTarget } = this;\n        return ArrayConcat.call(getOwnPropertyNames(originalTarget), getOwnPropertySymbols(originalTarget));\n    }\n    isExtensible(shadowTarget) {\n        const shadowIsExtensible = isExtensible(shadowTarget);\n        if (!shadowIsExtensible) {\n            return shadowIsExtensible;\n        }\n        const { originalTarget, membrane } = this;\n        const targetIsExtensible = isExtensible(originalTarget);\n        if (!targetIsExtensible) {\n            lockShadowTarget(membrane, shadowTarget, originalTarget);\n        }\n        return targetIsExtensible;\n    }\n    setPrototypeOf(shadowTarget, prototype) {\n        if (process.env.NODE_ENV !== 'production') {\n            throw new Error(`Invalid setPrototypeOf invocation for reactive proxy ${toString(this.originalTarget)}. Prototype of reactive objects cannot be changed.`);\n        }\n    }\n    getPrototypeOf(shadowTarget) {\n        const { originalTarget } = this;\n        return getPrototypeOf(originalTarget);\n    }\n    getOwnPropertyDescriptor(shadowTarget, key) {\n        const { originalTarget, membrane } = this;\n        const { valueObserved } = this.membrane;\n        // keys looked up via hasOwnProperty need to be reactive\n        valueObserved(originalTarget, key);\n        let desc = getOwnPropertyDescriptor(originalTarget, key);\n        if (isUndefined(desc)) {\n            return desc;\n        }\n        const shadowDescriptor = getOwnPropertyDescriptor(shadowTarget, key);\n        if (!isUndefined(shadowDescriptor)) {\n            return shadowDescriptor;\n        }\n        // Note: by accessing the descriptor, the key is marked as observed\n        // but access to the value, setter or getter (if available) cannot observe\n        // mutations, just like regular methods, in which case we just do nothing.\n        desc = wrapDescriptor(membrane, desc, wrapValue);\n        if (!desc.configurable) {\n            // If descriptor from original target is not configurable,\n            // We must copy the wrapped descriptor over to the shadow target.\n            // Otherwise, proxy will throw an invariant error.\n            // This is our last chance to lock the value.\n            // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/getOwnPropertyDescriptor#Invariants\n            ObjectDefineProperty(shadowTarget, key, desc);\n        }\n        return desc;\n    }\n    preventExtensions(shadowTarget) {\n        const { originalTarget, membrane } = this;\n        lockShadowTarget(membrane, shadowTarget, originalTarget);\n        preventExtensions(originalTarget);\n        return true;\n    }\n    defineProperty(shadowTarget, key, descriptor) {\n        const { originalTarget, membrane } = this;\n        const { valueMutated } = membrane;\n        const { configurable } = descriptor;\n        // We have to check for value in descriptor\n        // because Object.freeze(proxy) calls this method\n        // with only { configurable: false, writeable: false }\n        // Additionally, method will only be called with writeable:false\n        // if the descriptor has a value, as opposed to getter/setter\n        // So we can just check if writable is present and then see if\n        // value is present. This eliminates getter and setter descriptors\n        if (hasOwnProperty.call(descriptor, 'writable') && !hasOwnProperty.call(descriptor, 'value')) {\n            const originalDescriptor = getOwnPropertyDescriptor(originalTarget, key);\n            descriptor.value = originalDescriptor.value;\n        }\n        ObjectDefineProperty(originalTarget, key, unwrapDescriptor(descriptor));\n        if (configurable === false) {\n            ObjectDefineProperty(shadowTarget, key, wrapDescriptor(membrane, descriptor, wrapValue));\n        }\n        valueMutated(originalTarget, key);\n        return true;\n    }\n}\n\nfunction wrapReadOnlyValue(membrane, value) {\n    return membrane.valueIsObservable(value) ? membrane.getReadOnlyProxy(value) : value;\n}\nclass ReadOnlyHandler {\n    constructor(membrane, value) {\n        this.originalTarget = value;\n        this.membrane = membrane;\n    }\n    get(shadowTarget, key) {\n        const { membrane, originalTarget } = this;\n        const value = originalTarget[key];\n        const { valueObserved } = membrane;\n        valueObserved(originalTarget, key);\n        return membrane.getReadOnlyProxy(value);\n    }\n    set(shadowTarget, key, value) {\n        if (process.env.NODE_ENV !== 'production') {\n            const { originalTarget } = this;\n            throw new Error(`Invalid mutation: Cannot set \"${key.toString()}\" on \"${originalTarget}\". \"${originalTarget}\" is read-only.`);\n        }\n        return false;\n    }\n    deleteProperty(shadowTarget, key) {\n        if (process.env.NODE_ENV !== 'production') {\n            const { originalTarget } = this;\n            throw new Error(`Invalid mutation: Cannot delete \"${key.toString()}\" on \"${originalTarget}\". \"${originalTarget}\" is read-only.`);\n        }\n        return false;\n    }\n    apply(shadowTarget, thisArg, argArray) {\n        /* No op */\n    }\n    construct(target, argArray, newTarget) {\n        /* No op */\n    }\n    has(shadowTarget, key) {\n        const { originalTarget, membrane: { valueObserved } } = this;\n        valueObserved(originalTarget, key);\n        return key in originalTarget;\n    }\n    ownKeys(shadowTarget) {\n        const { originalTarget } = this;\n        return ArrayConcat.call(getOwnPropertyNames(originalTarget), getOwnPropertySymbols(originalTarget));\n    }\n    setPrototypeOf(shadowTarget, prototype) {\n        if (process.env.NODE_ENV !== 'production') {\n            const { originalTarget } = this;\n            throw new Error(`Invalid prototype mutation: Cannot set prototype on \"${originalTarget}\". \"${originalTarget}\" prototype is read-only.`);\n        }\n    }\n    getOwnPropertyDescriptor(shadowTarget, key) {\n        const { originalTarget, membrane } = this;\n        const { valueObserved } = membrane;\n        // keys looked up via hasOwnProperty need to be reactive\n        valueObserved(originalTarget, key);\n        let desc = getOwnPropertyDescriptor(originalTarget, key);\n        if (isUndefined(desc)) {\n            return desc;\n        }\n        const shadowDescriptor = getOwnPropertyDescriptor(shadowTarget, key);\n        if (!isUndefined(shadowDescriptor)) {\n            return shadowDescriptor;\n        }\n        // Note: by accessing the descriptor, the key is marked as observed\n        // but access to the value or getter (if available) cannot be observed,\n        // just like regular methods, in which case we just do nothing.\n        desc = wrapDescriptor(membrane, desc, wrapReadOnlyValue);\n        if (hasOwnProperty.call(desc, 'set')) {\n            desc.set = undefined; // readOnly membrane does not allow setters\n        }\n        if (!desc.configurable) {\n            // If descriptor from original target is not configurable,\n            // We must copy the wrapped descriptor over to the shadow target.\n            // Otherwise, proxy will throw an invariant error.\n            // This is our last chance to lock the value.\n            // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/getOwnPropertyDescriptor#Invariants\n            ObjectDefineProperty(shadowTarget, key, desc);\n        }\n        return desc;\n    }\n    preventExtensions(shadowTarget) {\n        if (process.env.NODE_ENV !== 'production') {\n            const { originalTarget } = this;\n            throw new Error(`Invalid mutation: Cannot preventExtensions on ${originalTarget}\". \"${originalTarget} is read-only.`);\n        }\n        return false;\n    }\n    defineProperty(shadowTarget, key, descriptor) {\n        if (process.env.NODE_ENV !== 'production') {\n            const { originalTarget } = this;\n            throw new Error(`Invalid mutation: Cannot defineProperty \"${key.toString()}\" on \"${originalTarget}\". \"${originalTarget}\" is read-only.`);\n        }\n        return false;\n    }\n}\n\nfunction extract(objectOrArray) {\n    if (isArray(objectOrArray)) {\n        return objectOrArray.map((item) => {\n            const original = unwrap(item);\n            if (original !== item) {\n                return extract(original);\n            }\n            return item;\n        });\n    }\n    const obj = ObjectCreate(getPrototypeOf(objectOrArray));\n    const names = getOwnPropertyNames(objectOrArray);\n    return ArrayConcat.call(names, getOwnPropertySymbols(objectOrArray))\n        .reduce((seed, key) => {\n        const item = objectOrArray[key];\n        const original = unwrap(item);\n        if (original !== item) {\n            seed[key] = extract(original);\n        }\n        else {\n            seed[key] = item;\n        }\n        return seed;\n    }, obj);\n}\nconst formatter = {\n    header: (plainOrProxy) => {\n        const originalTarget = unwrap(plainOrProxy);\n        // if originalTarget is falsy or not unwrappable, exit\n        if (!originalTarget || originalTarget === plainOrProxy) {\n            return null;\n        }\n        const obj = extract(plainOrProxy);\n        return ['object', { object: obj }];\n    },\n    hasBody: () => {\n        return false;\n    },\n    body: () => {\n        return null;\n    }\n};\n// Inspired from paulmillr/es6-shim\n// https://github.com/paulmillr/es6-shim/blob/master/es6-shim.js#L176-L185\nfunction getGlobal() {\n    // the only reliable means to get the global object is `Function('return this')()`\n    // However, this causes CSP violations in Chrome apps.\n    if (typeof globalThis !== 'undefined') {\n        return globalThis;\n    }\n    if (typeof self !== 'undefined') {\n        return self;\n    }\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    // Gracefully degrade if not able to locate the global object\n    return {};\n}\nfunction init() {\n    if (process.env.NODE_ENV === 'production') {\n        // this method should never leak to prod\n        throw new ReferenceError();\n    }\n    const global = getGlobal();\n    // Custom Formatter for Dev Tools. To enable this, open Chrome Dev Tools\n    //  - Go to Settings,\n    //  - Under console, select \"Enable custom formatters\"\n    // For more information, https://docs.google.com/document/d/1FTascZXT9cxfetuPRT2eXPQKXui4nWFivUnS_335T3U/preview\n    const devtoolsFormatters = global.devtoolsFormatters || [];\n    ArrayPush.call(devtoolsFormatters, formatter);\n    global.devtoolsFormatters = devtoolsFormatters;\n}\n\nif (process.env.NODE_ENV !== 'production') {\n    init();\n}\nfunction createShadowTarget(value) {\n    let shadowTarget = undefined;\n    if (isArray(value)) {\n        shadowTarget = [];\n    }\n    else if (isObject(value)) {\n        shadowTarget = {};\n    }\n    return shadowTarget;\n}\nconst ObjectDotPrototype = Object.prototype;\nfunction defaultValueIsObservable(value) {\n    // intentionally checking for null\n    if (value === null) {\n        return false;\n    }\n    // treat all non-object types, including undefined, as non-observable values\n    if (typeof value !== 'object') {\n        return false;\n    }\n    if (isArray(value)) {\n        return true;\n    }\n    const proto = getPrototypeOf(value);\n    return (proto === ObjectDotPrototype || proto === null || getPrototypeOf(proto) === null);\n}\nconst defaultValueObserved = (obj, key) => {\n    /* do nothing */\n};\nconst defaultValueMutated = (obj, key) => {\n    /* do nothing */\n};\nconst defaultValueDistortion = (value) => value;\nfunction wrapDescriptor(membrane, descriptor, getValue) {\n    const { set, get } = descriptor;\n    if (hasOwnProperty.call(descriptor, 'value')) {\n        descriptor.value = getValue(membrane, descriptor.value);\n    }\n    else {\n        if (!isUndefined(get)) {\n            descriptor.get = function () {\n                // invoking the original getter with the original target\n                return getValue(membrane, get.call(unwrap(this)));\n            };\n        }\n        if (!isUndefined(set)) {\n            descriptor.set = function (value) {\n                // At this point we don't have a clear indication of whether\n                // or not a valid mutation will occur, we don't have the key,\n                // and we are not sure why and how they are invoking this setter.\n                // Nevertheless we preserve the original semantics by invoking the\n                // original setter with the original target and the unwrapped value\n                set.call(unwrap(this), membrane.unwrapProxy(value));\n            };\n        }\n    }\n    return descriptor;\n}\nclass ReactiveMembrane {\n    constructor(options) {\n        this.valueDistortion = defaultValueDistortion;\n        this.valueMutated = defaultValueMutated;\n        this.valueObserved = defaultValueObserved;\n        this.valueIsObservable = defaultValueIsObservable;\n        this.objectGraph = new WeakMap();\n        if (!isUndefined(options)) {\n            const { valueDistortion, valueMutated, valueObserved, valueIsObservable } = options;\n            this.valueDistortion = isFunction(valueDistortion) ? valueDistortion : defaultValueDistortion;\n            this.valueMutated = isFunction(valueMutated) ? valueMutated : defaultValueMutated;\n            this.valueObserved = isFunction(valueObserved) ? valueObserved : defaultValueObserved;\n            this.valueIsObservable = isFunction(valueIsObservable) ? valueIsObservable : defaultValueIsObservable;\n        }\n    }\n    getProxy(value) {\n        const unwrappedValue = unwrap(value);\n        const distorted = this.valueDistortion(unwrappedValue);\n        if (this.valueIsObservable(distorted)) {\n            const o = this.getReactiveState(unwrappedValue, distorted);\n            // when trying to extract the writable version of a readonly\n            // we return the readonly.\n            return o.readOnly === value ? value : o.reactive;\n        }\n        return distorted;\n    }\n    getReadOnlyProxy(value) {\n        value = unwrap(value);\n        const distorted = this.valueDistortion(value);\n        if (this.valueIsObservable(distorted)) {\n            return this.getReactiveState(value, distorted).readOnly;\n        }\n        return distorted;\n    }\n    unwrapProxy(p) {\n        return unwrap(p);\n    }\n    getReactiveState(value, distortedValue) {\n        const { objectGraph, } = this;\n        let reactiveState = objectGraph.get(distortedValue);\n        if (reactiveState) {\n            return reactiveState;\n        }\n        const membrane = this;\n        reactiveState = {\n            get reactive() {\n                const reactiveHandler = new ReactiveProxyHandler(membrane, distortedValue);\n                // caching the reactive proxy after the first time it is accessed\n                const proxy = new Proxy(createShadowTarget(distortedValue), reactiveHandler);\n                registerProxy(proxy, value);\n                ObjectDefineProperty(this, 'reactive', { value: proxy });\n                return proxy;\n            },\n            get readOnly() {\n                const readOnlyHandler = new ReadOnlyHandler(membrane, distortedValue);\n                // caching the readOnly proxy after the first time it is accessed\n                const proxy = new Proxy(createShadowTarget(distortedValue), readOnlyHandler);\n                registerProxy(proxy, value);\n                ObjectDefineProperty(this, 'readOnly', { value: proxy });\n                return proxy;\n            }\n        };\n        objectGraph.set(distortedValue, reactiveState);\n        return reactiveState;\n    }\n}\n\nexport default ReactiveMembrane;\n/** version: 0.26.0 */\n","import { walk, saferEval, saferEvalNoReturn, getXAttrs, debounce } from './utils'\nimport { handleForDirective } from './directives/for'\nimport { handleAttributeBindingDirective } from './directives/bind'\nimport { handleShowDirective } from './directives/show'\nimport { handleIfDirective } from './directives/if'\nimport { registerModelListener } from './directives/model'\nimport { registerListener } from './directives/on'\nimport ObservableMembrane from 'observable-membrane'\n\nexport default class Component {\n    constructor(el, seedDataForCloning = null) {\n        this.$el = el\n\n        const dataAttr = this.$el.getAttribute('x-data')\n        const dataExpression = dataAttr === '' ? '{}' : dataAttr\n        const initExpression = this.$el.getAttribute('x-init')\n\n        this.unobservedData = seedDataForCloning ? seedDataForCloning : saferEval(dataExpression, {})\n\n        /* IE11-ONLY:START */\n            // For IE11, add our magic properties to the original data for access.\n            // The Proxy polyfill does not allow properties to be added after creation.\n            this.unobservedData.$el = null\n            this.unobservedData.$refs = null\n            this.unobservedData.$nextTick = null\n        /* IE11-ONLY:END */\n\n        // Construct a Proxy-based observable. This will be used to handle reactivity.\n        let { membrane, data } = this.wrapDataInObservable(this.unobservedData)\n        this.$data = data\n        this.membrane = membrane\n\n        // After making user-supplied data methods reactive, we can now add\n        // our magic properties to the original data for access.\n        this.unobservedData.$el = this.$el\n        this.unobservedData.$refs = this.getRefsProxy()\n\n        this.nextTickStack = []\n        this.unobservedData.$nextTick = (callback) => {\n            this.nextTickStack.push(callback)\n        }\n\n        this.showDirectiveStack = []\n        this.showDirectiveLastElement\n\n        var initReturnedCallback\n        // If x-init is present AND we aren't cloning (skip x-init on clone)\n        if (initExpression && ! seedDataForCloning) {\n            // We want to allow data manipulation, but not trigger DOM updates just yet.\n            // We haven't even initialized the elements with their Alpine bindings. I mean c'mon.\n            this.pauseReactivity = true\n            initReturnedCallback = this.evaluateReturnExpression(this.$el, initExpression)\n            this.pauseReactivity = false\n        }\n\n        // Register all our listeners and set all our attribute bindings.\n        this.initializeElements(this.$el)\n\n        // Use mutation observer to detect new elements being added within this component at run-time.\n        // Alpine's just so darn flexible amirite?\n        this.listenForNewElementsToInitialize()\n\n        if (typeof initReturnedCallback === 'function') {\n            // Run the callback returned form the \"x-init\" hook to allow the user to do stuff after\n            // Alpine's got it's grubby little paws all over everything.\n            initReturnedCallback.call(this.$data)\n        }\n    }\n\n    getUnobservedData() {\n        let unwrappedData = this.membrane.unwrapProxy(this.$data)\n        let copy = {}\n\n        Object.keys(unwrappedData).forEach(key => {\n            if (['$el', '$refs', '$nextTick'].includes(key)) return\n\n            copy[key] = unwrappedData[key]\n        })\n\n        return copy\n    }\n\n    wrapDataInObservable(data) {\n        var self = this\n\n        let membrane = new ObservableMembrane({\n            valueMutated(target, key) {\n                // Don't react to data changes for cases like the `x-created` hook.\n                if (self.pauseReactivity) return\n\n                debounce(() => {\n                    self.updateElements(self.$el)\n\n                    // Walk through the $nextTick stack and clear it as we go.\n                    while (self.nextTickStack.length > 0) {\n                        self.nextTickStack.shift()()\n                    }\n                }, 0)()\n            },\n        })\n\n        return {\n            data: membrane.getProxy(data),\n            membrane,\n        }\n    }\n\n    walkAndSkipNestedComponents(el, callback, initializeComponentCallback = () => {}) {\n        walk(el, el => {\n            // We've hit a component.\n            if (el.hasAttribute('x-data')) {\n                // If it's not the current one.\n                if (! el.isSameNode(this.$el)) {\n                    // Initialize it if it's not.\n                    if (! el.__x) initializeComponentCallback(el)\n\n                    // Now we'll let that sub-component deal with itself.\n                    return false\n                }\n            }\n\n            return callback(el)\n        })\n    }\n\n    initializeElements(rootEl, extraVars = () => {}) {\n        this.walkAndSkipNestedComponents(rootEl, el => {\n            // Don't touch spawns from for loop\n            if (el.__x_for_key !== undefined) return false\n\n            this.initializeElement(el, extraVars)\n        }, el => {\n            el.__x = new Component(el)\n        })\n\n        this.executeAndClearRemainingShowDirectiveStack()\n\n        // Walk through the $nextTick stack and clear it as we go.\n        while (this.nextTickStack.length > 0) {\n            this.nextTickStack.shift()()\n        }\n    }\n\n    initializeElement(el, extraVars) {\n        // To support class attribute merging, we have to know what the element's\n        // original class attribute looked like for reference.\n        if (el.hasAttribute('class') && getXAttrs(el).length > 0) {\n            el.__x_original_classes = el.getAttribute('class').split(' ')\n        }\n\n        this.registerListeners(el, extraVars)\n        this.resolveBoundAttributes(el, true, extraVars)\n    }\n\n    updateElements(rootEl, extraVars = () => {}) {\n        this.walkAndSkipNestedComponents(rootEl, el => {\n            // Don't touch spawns from for loop (and check if the root is actually a for loop in a parent, don't skip it.)\n            if (el.__x_for_key !== undefined && ! el.isSameNode(this.$el)) return false\n\n            this.updateElement(el, extraVars)\n        }, el => {\n            el.__x = new Component(el)\n        })\n\n        this.executeAndClearRemainingShowDirectiveStack()\n\n        // Walk through the $nextTick stack and clear it as we go.\n        while (this.nextTickStack.length > 0) {\n            this.nextTickStack.shift()()\n        }\n    }\n\n    executeAndClearRemainingShowDirectiveStack() {\n        // The goal here is to start all the x-show transitions\n        // and build a nested promise chain so that elements\n        // only hide when the children are finished hiding.\n        this.showDirectiveStack.reverse().map(thing => {\n            return new Promise(resolve => {\n                thing(finish => {\n                    resolve(finish)\n                })\n            })\n        }).reduce((nestedPromise, promise) => {\n            return nestedPromise.then(() => {\n                return promise.then(finish => finish())\n            })\n        }, Promise.resolve(() => {}))\n\n        // We've processed the handler stack. let's clear it.\n        this.showDirectiveStack = []\n        this.showDirectiveLastElement = undefined\n    }\n\n    updateElement(el, extraVars) {\n        this.resolveBoundAttributes(el, false, extraVars)\n    }\n\n    registerListeners(el, extraVars) {\n        getXAttrs(el).forEach(({ type, value, modifiers, expression }) => {\n            switch (type) {\n                case 'on':\n                    registerListener(this, el, value, modifiers, expression, extraVars)\n                    break;\n\n                case 'model':\n                    registerModelListener(this, el, modifiers, expression, extraVars)\n                    break;\n                default:\n                    break;\n            }\n        })\n    }\n\n    resolveBoundAttributes(el, initialUpdate = false, extraVars) {\n        let attrs = getXAttrs(el)\n\n        attrs.forEach(({ type, value, modifiers, expression }) => {\n            switch (type) {\n                case 'model':\n                    handleAttributeBindingDirective(this, el, 'value', expression, extraVars)\n                    break;\n\n                case 'bind':\n                    // The :key binding on an x-for is special, ignore it.\n                    if (el.tagName.toLowerCase() === 'template' && value === 'key') return\n\n                    handleAttributeBindingDirective(this, el, value, expression, extraVars)\n                    break;\n\n                case 'text':\n                    var output = this.evaluateReturnExpression(el, expression, extraVars);\n\n                    // If nested model key is undefined, set the default value to empty string.\n                    if (output === undefined && expression.match(/\\./).length) {\n                        output = ''\n                    }\n\n                    el.innerText = output\n                    break;\n\n                case 'html':\n                    el.innerHTML = this.evaluateReturnExpression(el, expression, extraVars)\n                    break;\n\n                case 'show':\n                    var output = this.evaluateReturnExpression(el, expression, extraVars)\n\n                    handleShowDirective(this, el, output, modifiers, initialUpdate)\n                    break;\n\n                case 'if':\n                    // If this element also has x-for on it, don't process x-if.\n                    // We will let the \"x-for\" directive handle the \"if\"ing.\n                    if (attrs.filter(i => i.type === 'for').length > 0) return\n\n                    var output = this.evaluateReturnExpression(el, expression, extraVars)\n\n                    handleIfDirective(el, output, initialUpdate)\n                    break;\n\n                case 'for':\n                    handleForDirective(this, el, expression, initialUpdate)\n                    break;\n\n                case 'cloak':\n                    el.removeAttribute('x-cloak')\n                    break;\n\n                default:\n                    break;\n            }\n        })\n    }\n\n    evaluateReturnExpression(el, expression, extraVars = () => {}) {\n        return saferEval(expression, this.$data, {\n            ...extraVars(),\n            $dispatch: this.getDispatchFunction(el),\n        })\n    }\n\n    evaluateCommandExpression(el, expression, extraVars = () => {}) {\n        return saferEvalNoReturn(expression, this.$data, {\n            ...extraVars(),\n            $dispatch: this.getDispatchFunction(el),\n        })\n    }\n\n    getDispatchFunction (el) {\n        return (event, detail = {}) => {\n            el.dispatchEvent(new CustomEvent(event, {\n                detail,\n                bubbles: true,\n            }))\n        }\n    }\n\n    listenForNewElementsToInitialize() {\n        const targetNode = this.$el\n\n        const observerOptions = {\n            childList: true,\n            attributes: true,\n            subtree: true,\n        }\n\n        const observer = new MutationObserver((mutations) => {\n            for (let i=0; i < mutations.length; i++){\n                // Filter out mutations triggered from child components.\n                const closestParentComponent = mutations[i].target.closest('[x-data]')\n                if (! (closestParentComponent && closestParentComponent.isSameNode(this.$el))) return\n\n                if (mutations[i].type === 'attributes' && mutations[i].attributeName === 'x-data') {\n                    const rawData = saferEval(mutations[i].target.getAttribute('x-data'), {})\n\n                    Object.keys(rawData).forEach(key => {\n                        if (this.$data[key] !== rawData[key]) {\n                            this.$data[key] = rawData[key]\n                        }\n                    })\n                }\n\n                if (mutations[i].addedNodes.length > 0) {\n                    mutations[i].addedNodes.forEach(node => {\n                        if (node.nodeType !== 1) return\n\n                        if (node.matches('[x-data]')) {\n                            node.__x = new Component(node)\n                            return\n                        }\n\n                        this.initializeElements(node)\n                    })\n                }\n              }\n        })\n\n        observer.observe(targetNode, observerOptions);\n    }\n\n    getRefsProxy() {\n        var self = this\n\n        var refObj = {}\n\n        /* IE11-ONLY:START */\n            // Add any properties up-front that might be necessary for the Proxy polyfill.\n            refObj.$isRefsProxy = false;\n            refObj.$isAlpineProxy = false;\n\n            // If we are in IE, since the polyfill needs all properties to be defined before building the proxy,\n            // we just loop on the element, look for any x-ref and create a tmp property on a fake object.\n            this.walkAndSkipNestedComponents(self.$el, el => {\n                if (el.hasAttribute('x-ref')) {\n                    refObj[el.getAttribute('x-ref')] = true\n                }\n            })\n        /* IE11-ONLY:END */\n\n        // One of the goals of this is to not hold elements in memory, but rather re-evaluate\n        // the DOM when the system needs something from it. This way, the framework is flexible and\n        // friendly to outside DOM changes from libraries like Vue/Livewire.\n        // For this reason, I'm using an \"on-demand\" proxy to fake a \"$refs\" object.\n        return new Proxy(refObj, {\n            get(object, property) {\n                if (property === '$isAlpineProxy') return true\n\n                var ref\n\n                // We can't just query the DOM because it's hard to filter out refs in\n                // nested components.\n                self.walkAndSkipNestedComponents(self.$el, el => {\n                    if (el.hasAttribute('x-ref') && el.getAttribute('x-ref') === property) {\n                        ref = el\n                    }\n                })\n\n                return ref\n            }\n        })\n    }\n}\n","import { transitionIn, transitionOut } from '../utils'\n\nexport function handleShowDirective(component, el, value, modifiers, initialUpdate = false) {\n    const hide = () => {\n        el.style.display = 'none'\n    }\n\n    const show = () => {\n        if (el.style.length === 1 && el.style.display === 'none') {\n            el.removeAttribute('style')\n        } else {\n            el.style.removeProperty('display')\n        }\n    }\n\n    if (initialUpdate === true) {\n        if (value) {\n            show()\n        } else {\n            hide()\n        }\n        return\n    }\n\n    const handle = (resolve) => {\n        if (! value) {\n            if ( el.style.display !== 'none' ) {\n                transitionOut(el, () => {\n                    resolve(() => {\n                        hide()\n                    })\n                })\n            } else {\n                resolve(() => {})\n            }\n        } else {\n            if ( el.style.display !== '' ) {\n                transitionIn(el, () => {\n                    show()\n                })\n            }\n\n            // Resolve immediately, only hold up parent `x-show`s for hidin.\n            resolve(() => {})\n        }\n    }\n\n    // The working of x-show is a bit complex because we need to\n    // wait for any child transitions to finish before hiding\n    // some element. Also, this has to be done recursively.\n\n    // If x-show.immediate, foregoe the waiting.\n    if (modifiers.includes('immediate')) {\n        handle(finish => finish())\n        return\n    }\n\n    // x-show is encountered during a DOM tree walk. If an element\n    // we encounter is NOT a child of another x-show element we\n    // can execute the previous x-show stack (if one exists).\n    if (component.showDirectiveLastElement && ! component.showDirectiveLastElement.contains(el)) {\n        component.executeAndClearRemainingShowDirectiveStack()\n    }\n\n    // We'll push the handler onto a stack to be handled later.\n    component.showDirectiveStack.push(handle)\n\n    component.showDirectiveLastElement = el\n}\n","import { transitionIn, transitionOut } from '../utils'\n\nexport function handleIfDirective(el, expressionResult, initialUpdate) {\n    if (el.nodeName.toLowerCase() !== 'template') console.warn(`Alpine: [x-if] directive should only be added to <template> tags. See https://github.com/alpinejs/alpine#x-if`)\n\n    const elementHasAlreadyBeenAdded = el.nextElementSibling && el.nextElementSibling.__x_inserted_me === true\n\n    if (expressionResult && ! elementHasAlreadyBeenAdded) {\n        const clone = document.importNode(el.content, true);\n\n        el.parentElement.insertBefore(clone, el.nextElementSibling)\n\n        el.nextElementSibling.__x_inserted_me = true\n\n        transitionIn(el.nextElementSibling, () => {}, initialUpdate)\n    } else if (! expressionResult && elementHasAlreadyBeenAdded) {\n        transitionOut(el.nextElementSibling, () => {\n            el.nextElementSibling.remove()\n        }, initialUpdate)\n    }\n}\n","import Component from './component'\nimport { domReady, isTesting } from './utils'\n\nconst Alpine = {\n    start: async function () {\n        if (! isTesting()) {\n            await domReady()\n        }\n\n        this.discoverComponents(el => {\n            this.initializeComponent(el)\n        })\n\n        // It's easier and more performant to just support Turbolinks than listen\n        // to MutationObserver mutations at the document level.\n        document.addEventListener(\"turbolinks:load\", () => {\n            this.discoverUninitializedComponents(el => {\n                this.initializeComponent(el)\n            })\n        })\n\n        this.listenForNewUninitializedComponentsAtRunTime(el => {\n            this.initializeComponent(el)\n        })\n    },\n\n    discoverComponents: function (callback) {\n        const rootEls = document.querySelectorAll('[x-data]');\n\n        rootEls.forEach(rootEl => {\n            callback(rootEl)\n        })\n    },\n\n    discoverUninitializedComponents: function (callback, el = null) {\n        const rootEls = (el || document).querySelectorAll('[x-data]');\n\n        Array.from(rootEls)\n            .filter(el => el.__x === undefined)\n            .forEach(rootEl => {\n                callback(rootEl)\n            })\n    },\n\n    listenForNewUninitializedComponentsAtRunTime: function (callback) {\n        const targetNode = document.querySelector('body');\n\n        const observerOptions = {\n            childList: true,\n            attributes: true,\n            subtree: true,\n        }\n\n        const observer = new MutationObserver((mutations) => {\n            for (let i=0; i < mutations.length; i++){\n                if (mutations[i].addedNodes.length > 0) {\n                    mutations[i].addedNodes.forEach(node => {\n                        // Discard non-element nodes (like line-breaks)\n                        if (node.nodeType !== 1) return\n\n                        // Discard any changes happening within an existing component.\n                        // They will take care of themselves.\n                        if (node.parentElement && node.parentElement.closest('[x-data]')) return\n\n                        this.discoverUninitializedComponents((el) => {\n                            this.initializeComponent(el)\n                        }, node.parentElement)\n                    })\n                }\n              }\n        })\n\n        observer.observe(targetNode, observerOptions)\n    },\n\n    initializeComponent: function (el) {\n        if (! el.__x) {\n            el.__x = new Component(el)\n        }\n    },\n\n    clone: function (component, newEl) {\n        if (! newEl.__x) {\n            newEl.__x = new Component(newEl, component.getUnobservedData())\n        }\n    }\n}\n\nif (! isTesting()) {\n    window.Alpine = Alpine\n    window.Alpine.start()\n}\n\nexport default Alpine\n"],"names":["arrayUnique","array","a","concat","i","length","j","splice","isTesting","navigator","userAgent","includes","saferEval","expression","dataContext","additionalHelperVariables","Function","Object","keys","values","isXAttr","attr","name","replaceAtAndColonWithStandardSyntax","test","getXAttrs","el","type","Array","from","attributes","filter","map","typeMatch","match","valueMatch","modifiers","value","replace","startsWith","transitionIn","show","forceSkip","attrs","showAttr","settingBothSidesOfTransition","index","indexOf","showCallback","styleValues","duration","modifierValue","origin","first","opacity","scale","second","transitionHelper","transitionHelperIn","directives","enter","find","split","enterStart","enterEnd","transitionClasses","transitionClassesIn","transitionOut","hide","hideCallback","transitionHelperOut","leave","leaveStart","leaveEnd","transitionClassesOut","key","fallback","rawValue","isNaN","join","hook1","hook2","opacityCache","style","transformCache","transform","transformOriginCache","transformOrigin","noModifiers","transitionOpacity","transitionScale","stages","start","during","transitionProperty","trim","transitionDuration","transitionTimingFunction","end","cleanup","transition","classesDuring","classesStart","classesEnd","originalClasses","__x_original_classes","classList","add","remove","requestAnimationFrame","Number","getComputedStyle","setTimeout","isConnected","handleForDirective","component","initialUpdate","tagName","toLowerCase","console","warn","single","bunch","iterator1","iterator2","forIteratorRE","inMatch","res","iteratorMatch","parseFor","items","ifAttr","evaluateReturnExpression","previousEl","forEach","group","currentKey","keyAttr","keyAliases","getThisIterationsKeyFromTemplateTag","currentEl","nextElementSibling","undefined","__x_for_key","tmpCurrentEl","parentElement","insertBefore","xForVars","__x_for","updateElements","clone","document","importNode","content","childElementCount","initializeElements","nextElementFromOldLoop","nextElementFromOldLoopImmutable","nextSibling","handleAttributeBindingDirective","attrName","extraVars","checked","isArray","valueFound","val","arrayWrappedValue","options","option","selected","text","updateSelect","setAttribute","classNames","className","newClasses","removeAttribute","registerListener","event","handler","e","contains","target","offsetWidth","offsetHeight","runListenerHandler","removeEventListener","addEventListener","listenerTarget","window","body","isKeyEvent","keyModifiers","keyToModifier","selectedSystemKeyModifiers","modifier","isListeningForASpecificKeyThatHasntBeenPressed","preventDefault","stopPropagation","evaluateCommandExpression","generateModelAssignmentFunction","hasAttribute","currentValue","CustomEvent","detail","multiple","selectedOptions","parseFloat","getPrototypeOf","create","ObjectCreate","defineProperty","ObjectDefineProperty","defineProperties","ObjectDefineProperties","isExtensible","getOwnPropertyDescriptor","getOwnPropertyNames","getOwnPropertySymbols","preventExtensions","hasOwnProperty","push","ArrayPush","ArrayConcat","ArrayMap","prototype","isUndefined","obj","isFunction","proxyToValueMap","WeakMap","registerProxy","proxy","set","unwrap","replicaOrAny","get","wrapValue","membrane","valueIsObservable","getProxy","lockShadowTarget","shadowTarget","originalTarget","call","descriptor","configurable","wrapDescriptor","ReactiveProxyHandler","[object Object]","this","valueObserved","valueMutated","thisArg","argArray","newTarget","shadowIsExtensible","targetIsExtensible","desc","shadowDescriptor","originalDescriptor","unwrapDescriptor","wrapReadOnlyValue","getReadOnlyProxy","ReadOnlyHandler","createShadowTarget","ObjectDotPrototype","defaultValueIsObservable","proto","defaultValueObserved","defaultValueMutated","defaultValueDistortion","getValue","unwrapProxy","ReactiveMembrane","valueDistortion","objectGraph","unwrappedValue","distorted","o","getReactiveState","readOnly","reactive","p","distortedValue","reactiveState","reactiveHandler","Proxy","readOnlyHandler","Component","constructor","seedDataForCloning","$el","dataAttr","getAttribute","dataExpression","initExpression","unobservedData","$data","callback","unwrappedData","copy","func","wait","timeout","context","args","arguments","later","apply","clearTimeout","walk","node","firstElementChild","reverse","showDirectiveStack","rightSideOfExpression","display","removeProperty","handle","resolve","finish","showDirectiveLastElement","executeAndClearRemainingShowDirectiveStack","innerHTML","output","expressionResult","nodeName","elementHasAlreadyBeenAdded","__x_inserted_me","handleShowDirective","handleIfDirective","observer","mutations","refObj","Alpine","async","Promise","readyState","discoverComponents","initializeComponent","discoverUninitializedComponents","listenForNewUninitializedComponentsAtRunTime","querySelectorAll","rootEl","rootEls","__x","targetNode","querySelector","MutationObserver","addedNodes","nodeType","closest","observe","childList","subtree","newEl","getUnobservedData"],"mappings":"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"}