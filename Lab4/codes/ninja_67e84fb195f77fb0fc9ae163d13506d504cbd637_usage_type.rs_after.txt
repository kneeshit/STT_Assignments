use std::fmt::{Display, Formatter};

#[derive(Debug, Copy, Clone)]
#[allow(clippy::upper_case_acronyms)]
#[allow(non_camel_case_types)]
pub enum Usage {
    ChatGPT,
    API,
}

impl Usage {
    // could be generated by macro
    pub const VARIANTS: &'static [Usage] = &[Self::ChatGPT, Self::API];
}

impl Display for Usage {
    fn fmt(&self, f: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
        write!(f, "{self:?}")
    }
}
