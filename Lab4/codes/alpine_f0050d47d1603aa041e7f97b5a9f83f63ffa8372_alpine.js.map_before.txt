{"version":3,"file":"alpine.js","sources":["../src/utils.js","../src/component.js","../node_modules/regenerator-runtime/runtime.js","../src/index.js"],"sourcesContent":["\n// Thanks @stimulus:\n// https://github.com/stimulusjs/stimulus/blob/master/packages/%40stimulus/core/src/application.ts\nexport function domReady() {\n    return new Promise(resolve => {\n        if (document.readyState == \"loading\") {\n            document.addEventListener(\"DOMContentLoaded\", resolve)\n        } else {\n            resolve()\n        }\n    })\n}\n\nexport function isTesting() {\n    return navigator.userAgent, navigator.userAgent.includes(\"Node.js\")\n        || navigator.userAgent.includes(\"jsdom\")\n}\n\nexport function kebabCase(subject) {\n    return subject.replace(/([a-z])([A-Z])/g, '$1-$2').replace(/[_\\s]/, '-').toLowerCase()\n}\n\nexport function walkSkippingNestedComponents(el, callback, isRoot = true) {\n    if (el.hasAttribute('x-data') && ! isRoot) return\n\n    callback(el)\n\n    let node = el.firstElementChild\n\n    while (node) {\n        walkSkippingNestedComponents(node, callback, false)\n\n        node = node.nextElementSibling\n    }\n}\n\nexport function debounce(func, wait, immediate) {\n    var timeout;\n    return function () {\n        var context = this, args = arguments;\n        var later = function () {\n            timeout = null;\n            if (!immediate) func.apply(context, args);\n        };\n        var callNow = immediate && !timeout;\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n        if (callNow) func.apply(context, args);\n    };\n};\n\nexport function onlyUnique(value, index, self) {\n    return self.indexOf(value) === index;\n}\n\nexport function saferEval(expression, dataContext, additionalHelperVariables = {}) {\n    return (new Function(['$data', ...Object.keys(additionalHelperVariables)], `var result; with($data) { result = ${expression} }; return result`))(\n        dataContext, ...Object.values(additionalHelperVariables)\n    )\n}\n\nexport function saferEvalNoReturn(expression, dataContext, additionalHelperVariables = {}) {\n    return (new Function(['$data', ...Object.keys(additionalHelperVariables)], `with($data) { ${expression} }`))(\n        dataContext, ...Object.values(additionalHelperVariables)\n    )\n}\n\nexport function isXAttr(attr) {\n    const xAttrRE = /x-(on|bind|data|text|model|if|show|cloak|ref)/\n\n    return xAttrRE.test(attr.name)\n}\n\nexport function getXAttrs(el, type) {\n    return Array.from(el.attributes)\n        .filter(isXAttr)\n        .map(attr => {\n            const typeMatch = attr.name.match(/x-(on|bind|data|text|model|if|show|cloak|ref)/)\n            const valueMatch = attr.name.match(/:([a-zA-Z\\-]+)/)\n            const modifiers = attr.name.match(/\\.[^.\\]]+(?=[^\\]]*$)/g) || []\n\n            return {\n                type: typeMatch ? typeMatch[1] : null,\n                value: valueMatch ? valueMatch[1] : null,\n                modifiers: modifiers.map(i => i.replace('.', '')),\n                expression: attr.value,\n            }\n        })\n        .filter(i => {\n            // If no type is passed in for filtering, bypassfilter\n            if (! type) return true\n\n            return i.type === name\n        })\n}\n","import { walkSkippingNestedComponents, kebabCase, saferEval, saferEvalNoReturn, getXAttrs, debounce } from './utils'\n\nexport default class Component {\n    constructor(el) {\n        this.el = el\n\n        const rawData = saferEval(this.el.getAttribute('x-data'), {})\n\n        rawData.$refs =  this.getRefsProxy()\n\n        this.data = this.wrapDataInObservable(rawData)\n\n        this.initialize()\n\n        this.listenForNewElementsToInitialize()\n    }\n\n    wrapDataInObservable(data) {\n        this.concernedData = []\n\n        var self = this\n\n        const proxyHandler = keyPrefix => ({\n            set(obj, property, value) {\n                const propertyName = keyPrefix ? `${keyPrefix}.${property}` : property\n\n                const setWasSuccessful = Reflect.set(obj, property, value)\n\n                if (self.concernedData.indexOf(propertyName) === -1) {\n                    self.concernedData.push(propertyName)\n                }\n\n                self.refresh()\n\n                return setWasSuccessful\n            },\n            get(target, key) {\n                if (typeof target[key] === 'object' && target[key] !== null) {\n                    const propertyName = keyPrefix ? `${keyPrefix}.${key}` : key\n\n                    return new Proxy(target[key], proxyHandler(propertyName))\n                }\n\n                return target[key]\n            }\n        })\n\n        return new Proxy(data, proxyHandler())\n    }\n\n    initialize() {\n        walkSkippingNestedComponents(this.el, el => {\n            this.initializeElement(el)\n        })\n    }\n\n    initializeElement(el) {\n        getXAttrs(el).forEach(({ type, value, modifiers, expression }) => {\n            switch (type) {\n                case 'on':\n                    var event = value\n                    this.registerListener(el, event, modifiers, expression)\n                    break;\n\n                case 'model':\n                    // If the element we are binding to is a select, a radio, or checkbox\n                    // we'll listen for the change event instead of the \"input\" event.\n                    var event = (el.tagName.toLowerCase() === 'select')\n                        || ['checkbox', 'radio'].includes(el.type)\n                        || modifiers.includes('lazy')\n                        ? 'change' : 'input'\n\n                    const listenerExpression = this.generateExpressionForXModelListener(el, modifiers, expression)\n\n                    this.registerListener(el, event, modifiers, listenerExpression)\n\n                    var attrName = 'value'\n                    var { output } = this.evaluateReturnExpression(expression)\n                    this.updateAttributeValue(el, attrName, output)\n                    break;\n\n                case 'bind':\n                    var attrName = value\n                    var { output } = this.evaluateReturnExpression(expression)\n                    this.updateAttributeValue(el, attrName, output)\n                    break;\n\n                case 'text':\n                    var { output } = this.evaluateReturnExpression(expression)\n                    this.updateTextValue(el, output)\n                    break;\n\n                case 'show':\n                    var { output } = this.evaluateReturnExpression(expression)\n                    this.updateVisibility(el, output)\n                    break;\n\n                case 'if':\n                    var { output } = this.evaluateReturnExpression(expression)\n                    this.updatePresence(el, output)\n                    break;\n\n                case 'cloak':\n                    el.removeAttribute('x-cloak')\n                    break;\n\n                default:\n                    break;\n            }\n        })\n    }\n\n    listenForNewElementsToInitialize() {\n        const targetNode = this.el\n\n        const observerOptions = {\n            childList: true,\n            attributes: true,\n            subtree: true,\n        }\n\n        const observer = new MutationObserver((mutations) => {\n            for (let i=0; i < mutations.length; i++){\n                // Filter out mutations triggered from child components.\n                if (! mutations[i].target.closest('[x-data]').isSameNode(this.el)) return\n\n                if (mutations[i].type === 'attributes' && mutations[i].attributeName === 'x-data') {\n                    const rawData = saferEval(mutations[i].target.getAttribute('x-data'), {})\n\n                    Object.keys(rawData).forEach(key => {\n                        if (this.data[key] !== rawData[key]) {\n                            this.data[key] = rawData[key]\n                        }\n                    })\n                }\n\n                if (mutations[i].addedNodes.length > 0) {\n                    mutations[i].addedNodes.forEach(node => {\n                        if (node.nodeType !== 1) return\n\n                        if (node.matches('[x-data]')) return\n\n                        if (getXAttrs(node).length > 0) {\n                            this.initializeElement(node)\n                        }\n                    })\n                }\n              }\n        })\n\n        observer.observe(targetNode, observerOptions);\n    }\n\n    refresh() {\n        var self = this\n\n        const actionByDirectiveType = {\n            'model': ({el, output}) => { self.updateAttributeValue(el, 'value', output) },\n            'bind': ({el, attrName, output}) => { self.updateAttributeValue(el, attrName, output) },\n            'text': ({el, output}) => { self.updateTextValue(el, output) },\n            'show': ({el, output}) => { self.updateVisibility(el, output) },\n            'if': ({el, output}) => { self.updatePresence(el, output) },\n        }\n\n        const walkThenClearDependancyTracker = (rootEl, callback) => {\n            walkSkippingNestedComponents(rootEl, callback)\n\n            self.concernedData = []\n        }\n\n        debounce(walkThenClearDependancyTracker, 5)(this.el, function (el) {\n            getXAttrs(el).forEach(({ type, value, expression }) => {\n                if (! actionByDirectiveType[type]) return\n\n                var { output, deps } = self.evaluateReturnExpression(expression)\n\n                if (self.concernedData.filter(i => deps.includes(i)).length > 0) {\n                    (actionByDirectiveType[type])({ el, attrName: value, output })\n                }\n            })\n        })\n    }\n\n    generateExpressionForXModelListener(el, modifiers, dataKey) {\n        var rightSideOfExpression = ''\n        if (el.type === 'checkbox') {\n            // If the data we are binding to is an array, toggle it's value inside the array.\n            if (Array.isArray(this.data[dataKey])) {\n                rightSideOfExpression = `$event.target.checked ? ${dataKey}.concat([$event.target.value]) : ${dataKey}.filter(i => i !== $event.target.value)`\n            } else {\n                rightSideOfExpression = `$event.target.checked`\n            }\n        } else if (el.tagName.toLowerCase() === 'select' && el.multiple) {\n            rightSideOfExpression = modifiers.includes('number')\n                ? 'Array.from($event.target.selectedOptions).map(option => { return parseFloat(option.value || option.text) })'\n                : 'Array.from($event.target.selectedOptions).map(option => { return option.value || option.text })'\n        } else {\n            rightSideOfExpression = modifiers.includes('number')\n                ? 'parseFloat($event.target.value)'\n                : (modifiers.includes('trim') ? '$event.target.value.trim()' : '$event.target.value')\n        }\n\n        if (el.type === 'radio') {\n            // Radio buttons only work properly when they share a name attribute.\n            // People might assume we take care of that for them, because\n            // they already set a shared \"x-model\" attribute.\n            if (! el.hasAttribute('name')) el.setAttribute('name', dataKey)\n        }\n\n        return `${dataKey} = ${rightSideOfExpression}`\n    }\n\n    registerListener(el, event, modifiers, expression) {\n        if (modifiers.includes('away')) {\n            const handler = e => {\n                // Don't do anything if the click came form the element or within it.\n                if (el.contains(e.target)) return\n\n                // Don't do anything if this element isn't currently visible.\n                if (el.offsetWidth < 1 && el.offsetHeight < 1) return\n\n                // Now that we are sure the element is visible, AND the click\n                // is from outside it, let's run the expression.\n                this.runListenerHandler(expression, e)\n\n                if (modifiers.includes('once')) {\n                    document.removeEventListener(event, handler)\n                }\n            }\n\n            // Listen for this event at the root level.\n            document.addEventListener(event, handler)\n        } else {\n            const listenerTarget = modifiers.includes('window')\n                ? window : (modifiers.includes('document') ? document : el)\n\n            const handler = e => {\n                const modifiersWithoutWindowOrDocument = modifiers\n                    .filter(i => i !== 'window').filter(i => i !== 'document')\n\n                if (event === 'keydown' && modifiersWithoutWindow.length > 0 && ! modifiersWithoutWindow.includes(kebabCase(e.key))) return\n\n                if (modifiers.includes('prevent')) e.preventDefault()\n                if (modifiers.includes('stop')) e.stopPropagation()\n\n                this.runListenerHandler(expression, e)\n\n                if (modifiers.includes('once')) {\n                    listenerTarget.removeEventListener(event, handler)\n                }\n            }\n\n            listenerTarget.addEventListener(event, handler)\n        }\n    }\n\n    runListenerHandler(expression, e) {\n        this.evaluateCommandExpression(expression, {\n            '$event': e,\n        })\n    }\n\n    evaluateReturnExpression(expression) {\n        var affectedDataKeys = []\n\n        const proxyHandler = prefix => ({\n            get(object, prop) {\n                // Sometimes non-proxyable values are accessed. These are of type \"symbol\".\n                // We can ignore them.\n                if (typeof prop === 'symbol') return\n\n                const propertyName = prefix ? `${prefix}.${prop}` : prop\n\n                // If we are accessing an object prop, we'll make this proxy recursive to build\n                // a nested dependancy key.\n                if (typeof object[prop] === 'object' && object[prop] !== null && ! Array.isArray(object[prop])) {\n                    return new Proxy(object[prop], proxyHandler(propertyName))\n                }\n\n                affectedDataKeys.push(propertyName)\n\n                return object[prop]\n            }\n        })\n\n        const proxiedData = new Proxy(this.data, proxyHandler())\n\n        const result = saferEval(expression, proxiedData)\n\n        return {\n            output: result,\n            deps: affectedDataKeys\n        }\n    }\n\n    evaluateCommandExpression(expression, extraData) {\n        saferEvalNoReturn(expression, this.data, extraData)\n    }\n\n    updateTextValue(el, value) {\n        el.innerText = value\n    }\n\n    updateVisibility(el, value) {\n        if (! value) {\n            el.style.display = 'none'\n        } else {\n            if (el.style.length === 1 && el.style.display !== '') {\n                el.removeAttribute('style')\n            } else {\n                el.style.removeProperty('display')\n            }\n        }\n    }\n\n    updatePresence(el, expressionResult) {\n        if (el.nodeName.toLowerCase() !== 'template') console.warn(`Alpine: [x-if] directive should only be added to <template> tags.`)\n\n        const elementHasAlreadyBeenAdded = el.nextElementSibling && el.nextElementSibling.__x_inserted_me === true\n\n        if (expressionResult && ! elementHasAlreadyBeenAdded) {\n            const clone = document.importNode(el.content, true);\n\n            el.parentElement.insertBefore(clone, el.nextElementSibling)\n\n            el.nextElementSibling.__x_inserted_me = true\n        } else if (! expressionResult && elementHasAlreadyBeenAdded) {\n            el.nextElementSibling.remove()\n        }\n    }\n\n    updateAttributeValue(el, attrName, value) {\n        if (attrName === 'value') {\n            if (el.type === 'radio') {\n                el.checked = el.value == value\n            } else if (el.type === 'checkbox') {\n                if (Array.isArray(value)) {\n                    // I'm purposely not using Array.includes here because it's\n                    // strict, and because of Numeric/String mis-casting, I\n                    // want the \"includes\" to be \"fuzzy\".\n                    let valueFound = false\n                    value.forEach(val => {\n                        if (val == el.value) {\n                            valueFound = true\n                        }\n                    })\n\n                    el.checked = valueFound\n                } else {\n                    el.checked = !! value\n                }\n            } else if (el.tagName === 'SELECT') {\n                this.updateSelect(el, value)\n            } else {\n                el.value = value\n            }\n        } else if (attrName === 'class') {\n            if (Array.isArray(value)) {\n                el.setAttribute('class', value.join(' '))\n            } else {\n                // Use the class object syntax that vue uses to toggle them.\n                Object.keys(value).forEach(classNames => {\n                    if (value[classNames]) {\n                        classNames.split(' ').forEach(className => el.classList.add(className))\n                    } else {\n                        classNames.split(' ').forEach(className => el.classList.remove(className))\n                    }\n                })\n            }\n        } else if (['disabled', 'readonly', 'required', 'checked', 'hidden'].includes(attrName)) {\n            // Boolean attributes have to be explicitly added and removed, not just set.\n            if (!! value) {\n                el.setAttribute(attrName, '')\n            } else {\n                el.removeAttribute(attrName)\n            }\n        } else {\n            el.setAttribute(attrName, value)\n        }\n    }\n\n    updateSelect(el, value) {\n        const arrayWrappedValue = [].concat(value).map(value => { return value + '' })\n\n        Array.from(el.options).forEach(option => {\n            option.selected = arrayWrappedValue.includes(option.value || option.text)\n        })\n    }\n\n    getRefsProxy() {\n        var self = this\n\n        // One of the goals of this is to not hold elements in memory, but rather re-evaluate\n        // the DOM when the system needs something from it. This way, the framework is flexible and\n        // friendly to outside DOM changes from libraries like Vue/Livewire.\n        // For this reason, I'm using an \"on-demand\" proxy to fake a \"$refs\" object.\n        return new Proxy({}, {\n            get(object, property) {\n                var ref\n\n                // We can't just query the DOM because it's hard to filter out refs in\n                // nested components.\n                walkSkippingNestedComponents(self.el, el => {\n                    if (el.hasAttribute('x-ref') && el.getAttribute('x-ref') === property) {\n                        ref = el\n                    }\n                })\n\n                return ref\n            }\n        })\n    }\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","import Component from './component'\nimport { domReady, isTesting } from './utils'\nimport \"regenerator-runtime/runtime\"\n\nconst Alpine = {\n    start: async function () {\n        if (! isTesting()) {\n            await domReady()\n        }\n\n        this.discoverComponents(el => {\n            this.initializeComponent(el)\n        })\n\n        // It's easier and more performant to just support Turbolinks than listen\n        // to MutationOberserver mutations at the document level.\n        document.addEventListener(\"turbolinks:load\", () => {\n            this.discoverUninitializedComponents(el => {\n                this.initializeComponent(el)\n            })\n        })\n\n        this.listenForNewUninitializedComponentsAtRunTime(el => {\n            this.initializeComponent(el)\n        })\n    },\n\n    discoverComponents: function (callback) {\n        const rootEls = document.querySelectorAll('[x-data]');\n\n        rootEls.forEach(rootEl => {\n            callback(rootEl)\n        })\n    },\n\n    discoverUninitializedComponents: function (callback) {\n        const rootEls = document.querySelectorAll('[x-data]');\n\n        Array.from(rootEls)\n            .filter(el => el.__x === undefined)\n            .forEach(rootEl => {\n                callback(rootEl)\n            })\n    },\n\n    listenForNewUninitializedComponentsAtRunTime: function (callback) {\n        const targetNode = document.querySelector('body');\n\n        const observerOptions = {\n            childList: true,\n            attributes: true,\n            subtree: true,\n        }\n\n        const observer = new MutationObserver((mutations) => {\n            for (let i=0; i < mutations.length; i++){\n                if (mutations[i].addedNodes.length > 0) {\n                    mutations[i].addedNodes.forEach(node => {\n                        if (node.nodeType !== 1) return\n\n                        if (node.matches('[x-data]')) callback(node)\n                    })\n                }\n              }\n        })\n\n        observer.observe(targetNode, observerOptions)\n    },\n\n    initializeComponent: function (el) {\n        el.__x = new Component(el)\n    }\n}\n\nif (! isTesting()) {\n    window.Alpine = Alpine\n    window.Alpine.start()\n}\n\nexport default Alpine\n"],"names":["isTesting","navigator","userAgent","includes","walkSkippingNestedComponents","el","callback","isRoot","hasAttribute","node","firstElementChild","nextElementSibling","saferEval","expression","dataContext","additionalHelperVariables","Function","Object","keys","values","isXAttr","attr","test","name","getXAttrs","type","Array","from","attributes","filter","map","typeMatch","match","valueMatch","modifiers","value","i","replace","Component","constructor","rawData","this","getAttribute","$refs","getRefsProxy","data","wrapDataInObservable","initialize","listenForNewElementsToInitialize","concernedData","self","proxyHandler","keyPrefix","set","obj","property","propertyName","setWasSuccessful","Reflect","indexOf","push","refresh","get","target","key","Proxy","initializeElement","forEach","ref","registerListener","event","tagName","toLowerCase","listenerExpression","generateExpressionForXModelListener","attrName","evaluateReturnExpression","updateAttributeValue","updateTextValue","updateVisibility","updatePresence","removeAttribute","targetNode","MutationObserver","mutations","let","length","closest","isSameNode","attributeName","addedNodes","nodeType","matches","observe","func","timeout","actionByDirectiveType","rootEl","context","args","arguments","clearTimeout","setTimeout","apply","deps","output","dataKey","rightSideOfExpression","isArray","multiple","setAttribute","handler","e","contains","offsetWidth","offsetHeight","runListenerHandler","removeEventListener","addEventListener","listenerTarget","window","document","modifiersWithoutWindow","preventDefault","stopPropagation","evaluateCommandExpression","affectedDataKeys","prefix","object","prop","extraData","innerText","style","display","removeProperty","expressionResult","nodeName","console","warn","elementHasAlreadyBeenAdded","__x_inserted_me","clone","importNode","content","parentElement","insertBefore","remove","checked","valueFound","val","updateSelect","join","classNames","split","className","classList","add","arrayWrappedValue","concat","options","option","selected","text","runtime","exports","undefined","Op","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","wrap","innerFn","outerFn","tryLocsList","generator","create","Generator","Context","_invoke","state","GenStateSuspendedStart","method","arg","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","done","GenStateSuspendedYield","makeInvokeMethod","fn","call","err","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","defineIteratorMethods","AsyncIterator","previousPromise","callInvokeWithMethodAndArg","Promise","resolve","reject","invoke","result","__await","then","unwrapped","error","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Alpine","start","discoverComponents","initializeComponent","discoverUninitializedComponents","listenForNewUninitializedComponentsAtRunTime","readyState","querySelectorAll","rootEls","__x","querySelector","childList","subtree"],"mappings":"AAaA,SAAgBA,WACLC,UAA+BC,UAAUC,SAAS,YAClDF,UAAUC,UAAUC,SAAS,SAOxC,SAAgBC,EAA6BC,EAAIC,EAAUC,sBAAS,IAC5DF,EAAGG,aAAa,WAAeD,GAEnCD,EAASD,WAELI,EAAOJ,EAAGK,kBAEPD,GACHL,EAA6BK,EAAMH,GAAU,GAE7CG,EAAOA,EAAKE,oBAiBnB,SAMeC,EAAUC,EAAYC,EAAaC,yBAA4B,IACnE,IAAIC,SAAS,CAAC,gBAAYC,OAAOC,KAAKH,0CAAmEF,qCAC7GC,UAAgBG,OAAOE,OAAOJ,KAU/B,SAASK,EAAQC,SACJ,gDAEDC,KAAKD,EAAKE,MAGtB,SAASC,EAAUnB,EAAIoB,UACnBC,MAAMC,KAAKtB,EAAGuB,YAChBC,OAAOT,GACPU,aAAIT,OACKU,EAAYV,EAAKE,KAAKS,MAAM,iDAC5BC,EAAaZ,EAAKE,KAAKS,MAAM,kBAC7BE,EAAYb,EAAKE,KAAKS,MAAM,0BAA4B,SAEvD,CACHP,KAAMM,EAAYA,EAAU,GAAK,KACjCI,MAAOF,EAAaA,EAAW,GAAK,KACpCC,UAAWA,EAAUJ,aAAIM,UAAKA,EAAEC,QAAQ,IAAK,MAC7CxB,WAAYQ,EAAKc,SAGxBN,gBAAOO,UAEEX,GAECW,EAAEX,OAASF,OC1Ff,IAAMe,EACjBC,SAAYlC,QACHA,GAAKA,MAEJmC,EAAU5B,EAAU6B,KAAKpC,GAAGqC,aAAa,UAAW,MAElDC,MAASF,KAAKG,oBAEjBC,KAAOJ,KAAKK,qBAAqBN,QAEjCO,kBAEAC,oCAGTF,YAAAA,8BAAqBD,QACZI,cAAgB,OAEjBC,EAAOT,KAELU,WAAeC,UACjBC,aAAIC,EAAKC,EAAUpB,OACTqB,EAAeJ,EAAeA,MAAaG,EAAaA,EAExDE,EAAmBC,QAAQL,IAAIC,EAAKC,EAAUpB,UAEF,IAA9Ce,EAAKD,cAAcU,QAAQH,MACtBP,cAAcW,KAAKJ,GAG5BN,EAAKW,UAEEJ,GAEXK,aAAIC,EAAQC,SACmB,iBAAhBD,EAAOC,IAAqC,OAAhBD,EAAOC,GAGnC,IAAIC,MAAMF,EAAOC,GAAMb,EAFTC,EAAeA,MAAaY,EAAQA,IAKtDD,EAAOC,aAIf,IAAIC,MAAMpB,EAAMM,MAG3BJ,YAAAA,mCACiCN,KAAKpC,YAAIA,KAC7B6D,kBAAkB7D,MAI/B6D,YAAAA,2BAAkB7D,gBACJA,GAAI8D,iBAASC,iEAEV,OAEIC,iBAAiBhE,EADlBiE,EAAQnC,EACqBD,EAAWrB,aAG3C,YAGGyD,EAAsC,WAA7BjE,EAAGkE,QAAQC,eACjB,CAAC,WAAY,SAASrE,SAASE,EAAGoB,OAClCS,EAAU/B,SAAS,QACpB,SAAW,QAEXsE,EAAqBhC,EAAKiC,oCAAoCrE,EAAI6B,EAAWrB,KAE9EwD,iBAAiBhE,EAAIiE,EAAOpC,EAAWuC,OAExCE,EAAW,UACElC,EAAKmC,yBAAyB/D,KAC1CgE,qBAAqBxE,EAAIsE,sBAG7B,OACGA,EAAWxC,QACEM,EAAKmC,yBAAyB/D,KAC1CgE,qBAAqBxE,EAAIsE,sBAG7B,aACgBlC,EAAKmC,yBAAyB/D,KAC1CiE,gBAAgBzE,sBAGpB,aACgBoC,EAAKmC,yBAAyB/D,KAC1CkE,iBAAiB1E,sBAGrB,WACgBoC,EAAKmC,yBAAyB/D,KAC1CmE,eAAe3E,sBAGnB,QACDA,EAAG4E,gBAAgB,eASnCjC,YAAAA,uDACUkC,EAAazC,KAAKpC,GAQP,IAAI8E,0BAAkBC,OAC9BC,IAAIjD,EAAE,EAAGA,EAAIgD,EAAUE,OAAQlD,IAAI,KAE9BgD,EAAUhD,GAAG2B,OAAOwB,QAAQ,YAAYC,WAAW/C,EAAKpC,IAAK,UAEzC,eAAtB+E,EAAUhD,GAAGX,MAAwD,WAA/B2D,EAAUhD,GAAGqD,cAA4B,KACzEjD,EAAU5B,EAAUwE,EAAUhD,GAAG2B,OAAOrB,aAAa,UAAW,WAE/DxB,KAAKsB,GAAS2B,iBAAQH,GACrBvB,EAAKI,KAAKmB,KAASxB,EAAQwB,OACtBnB,KAAKmB,GAAOxB,EAAQwB,MAKjCoB,EAAUhD,GAAGsD,WAAWJ,OAAS,KACvBlD,GAAGsD,WAAWvB,iBAAQ1D,GACN,IAAlBA,EAAKkF,WAELlF,EAAKmF,QAAQ,aAEbpE,EAAUf,GAAM6E,OAAS,KACpBpB,kBAAkBzD,SAOlCoF,QAAQX,EAnCO,YACT,cACC,WACH,KAmCjBrB,YAAAA,uBDrHqBiC,EACjBC,ECqHI7C,EAAOT,KAELuD,EAAwB,gBAChB5B,KAAwBS,0BAAyB,iCAClDT,KAAkCS,8DAClCT,KAAwBU,8CACxBV,KAAwBW,6CAC1BX,KAAwBY,iCD7HlBc,WCgIuBG,EAAQ3F,GAC5CF,EAA6B6F,EAAQ3F,GAErC4C,EAAKD,cAAgB,IDjItB,eACCiD,EAAUzD,KAAM0D,EAAOC,UAM3BC,aAAaN,GACbA,EAAUO,WANE,WACRP,EAAU,KACMD,EAAKS,MAAML,EAASC,ICgIC,KAAG1D,KAAKpC,GAAI,SAAUA,KACjDA,GAAI8D,iBAASC,6BACb4B,EAAsBvE,UAELyB,EAAK0B,2DAExB1B,EAAKD,cAAcpB,gBAAOO,UAAKoE,EAAKrG,SAASiC,KAAIkD,OAAS,GACzDU,EAAsBvE,GAAO,IAAEpB,WAAc8B,SAAOsE,UAMrE/B,YAAAA,6CAAoCrE,EAAI6B,EAAWwE,OAC3CC,SAIIA,EAHQ,aAAZtG,EAAGoB,KAECC,MAAMkF,QAAQnE,KAAKI,KAAK6D,IACC,2BAA0BA,sCAA2CA,4CAErE,wBAEO,WAA7BrG,EAAGkE,QAAQC,eAA8BnE,EAAGwG,SAC3B3E,EAAU/B,SAAS,UACrC,8GACA,kGAEkB+B,EAAU/B,SAAS,UACrC,kCACC+B,EAAU/B,SAAS,QAAU,6BAA+B,sBAGvD,UAAZE,EAAGoB,OAIGpB,EAAGG,aAAa,SAASH,EAAGyG,aAAa,OAAQJ,IAGjDA,QAAaC,GAG3BtC,YAAAA,0BAAiBhE,EAAIiE,EAAOpC,EAAWrB,iBAC/BqB,EAAU/B,SAAS,QAAS,KACtB4G,WAAUC,GAER3G,EAAG4G,SAASD,EAAEjD,SAGd1D,EAAG6G,YAAc,GAAK7G,EAAG8G,aAAe,MAIvCC,mBAAmBvG,EAAYmG,GAEhC9E,EAAU/B,SAAS,kBACVkH,oBAAoB/C,EAAOyC,cAKnCO,iBAAiBhD,EAAOyC,OAC9B,KACGQ,EAAiBrF,EAAU/B,SAAS,UACpCqH,OAAUtF,EAAU/B,SAAS,YAAcsH,SAAWpH,EAEtD0G,WAAUC,GAC6B9E,EACpCL,gBAAOO,SAAW,WAANA,IAAgBP,gBAAOO,SAAW,aAANA,IAE/B,YAAVkC,GAAuBoD,uBAAuBpC,OAAS,IAAOoC,uBAAuBvH,SAAmB6G,EAAEhD,ID7N3G3B,QAAQ,kBAAmB,SAASA,QAAQ,QAAS,KAAKmC,iBC+NzDtC,EAAU/B,SAAS,YAAY6G,EAAEW,iBACjCzF,EAAU/B,SAAS,SAAS6G,EAAEY,oBAE7BR,mBAAmBvG,EAAYmG,GAEhC9E,EAAU/B,SAAS,WACJkH,oBAAoB/C,EAAOyC,OAInCO,iBAAiBhD,EAAOyC,KAI/CK,YAAAA,4BAAmBvG,EAAYmG,QACtBa,0BAA0BhH,EAAY,QAC7BmG,KAIlBpC,YAAAA,kCAAyB/D,OACjBiH,EAAmB,GAEjB3E,WAAe4E,UACjBjE,aAAIkE,EAAQC,MAGY,iBAATA,OAELzE,EAAeuE,EAAYA,MAAUE,EAASA,QAIxB,iBAAjBD,EAAOC,IAAuC,OAAjBD,EAAOC,IAAoBvG,MAAMkF,QAAQoB,EAAOC,KAIxFH,EAAiBlE,KAAKJ,GAEfwE,EAAOC,IALH,IAAIhE,MAAM+D,EAAOC,GAAO9E,EAAaK,cAajD,QAFQ5C,EAAUC,EAFL,IAAIoD,MAAMxB,KAAKI,KAAMM,WAM/B2E,IAIdD,YAAAA,mCAA0BhH,EAAYqH,ID1O1C,SAAkCrH,EAAYC,EAAaC,kBAA4B,IAC3E,IAAIC,SAAS,CAAC,gBAAYC,OAAOC,KAAKH,qBAA8CF,sBACxFC,UAAgBG,OAAOE,OAAOJ,MCyOZF,EAAY4B,KAAKI,KAAMqF,IAG7CpD,YAAAA,yBAAgBzE,EAAI8B,GAChB9B,EAAG8H,UAAYhG,GAGnB4C,YAAAA,0BAAiB1E,EAAI8B,GACXA,EAGsB,IAApB9B,EAAG+H,MAAM9C,QAAqC,KAArBjF,EAAG+H,MAAMC,QAClChI,EAAG4E,gBAAgB,WAEhBmD,MAAME,eAAe,WAL5BjI,EAAG+H,MAAMC,QAAU,QAU3BrD,YAAAA,wBAAe3E,EAAIkI,GACmB,aAA9BlI,EAAGmI,SAAShE,eAA8BiE,QAAQC,KAAM,yEAEtDC,EAA6BtI,EAAGM,qBAAgE,IAA1CN,EAAGM,mBAAmBiI,mBAE9EL,IAAsBI,EAA4B,KAC5CE,EAAQpB,SAASqB,WAAWzI,EAAG0I,SAAS,GAE9C1I,EAAG2I,cAAcC,aAAaJ,EAAOxI,EAAGM,oBAExCN,EAAGM,mBAAmBiI,iBAAkB,OAC/BL,GAAoBI,GAC7BtI,EAAGM,mBAAmBuI,UAI9BrE,YAAAA,8BAAqBxE,EAAIsE,EAAUxC,MACd,UAAbwC,KACgB,UAAZtE,EAAGoB,OACA0H,QAAU9I,EAAG8B,OAASA,OACtB,GAAgB,aAAZ9B,EAAGoB,QACNC,MAAMkF,QAAQzE,GAAQ,KAIlBiH,GAAa,EACjBjH,EAAMgC,iBAAQkF,GACNA,GAAOhJ,EAAG8B,WACG,KAIrB9B,EAAG8I,QAAUC,OAEb/I,EAAG8I,UAAahH,MAEE,WAAf9B,EAAGkE,aACL+E,aAAajJ,EAAI8B,GAEtB9B,EAAG8B,MAAQA,MAEK,UAAbwC,EACHjD,MAAMkF,QAAQzE,GACd9B,EAAGyG,aAAa,QAAS3E,EAAMoH,KAAK,aAG7BrI,KAAKiB,GAAOgC,iBAAQqF,GACnBrH,EAAMqH,KACKC,MAAM,KAAKtF,iBAAQuF,UAAarJ,EAAGsJ,UAAUC,IAAIF,OAEjDD,MAAM,KAAKtF,iBAAQuF,UAAarJ,EAAGsJ,UAAUT,OAAOQ,OAIpE,CAAC,WAAY,WAAY,WAAY,UAAW,UAAUvJ,SAASwE,GAEnExC,IACA2E,aAAanC,EAAU,IAE1BtE,EAAG4E,gBAAgBN,KAGpBmC,aAAanC,EAAUxC,IAIlCmH,YAAAA,sBAAajJ,EAAI8B,OACP0H,EAAoB,GAAGC,OAAO3H,GAAOL,aAAIK,UAAkBA,EAAQ,KAEzET,MAAMC,KAAKtB,EAAG0J,SAAS5F,iBAAQ6F,GAC3BA,EAAOC,SAAWJ,EAAkB1J,SAAS6J,EAAO7H,OAAS6H,EAAOE,SAI5EtH,YAAAA,4BACQM,EAAOT,YAMJ,IAAIwB,MAAM,GAAI,CACjBH,aAAIkE,EAAQzE,OACJa,WAIyBlB,EAAK7C,YAAIA,GAC9BA,EAAGG,aAAa,UAAYH,EAAGqC,aAAa,WAAaa,MACnDlD,KAIP+D,kBCjZvB,IAAI+F,EAAW,SAAUC,GAGvB,IAEIC,EAFAC,EAAKrJ,OAAOsJ,UACZC,EAASF,EAAGG,eAEZC,EAA4B,mBAAXC,OAAwBA,OAAS,GAClDC,EAAiBF,EAAQG,UAAY,aACrCC,EAAsBJ,EAAQK,eAAiB,kBAC/CC,EAAoBN,EAAQO,aAAe,gBAE/C,SAASC,EAAKC,EAASC,EAASlI,EAAMmI,GAEpC,IACIC,EAAYrK,OAAOsK,QADFH,GAAWA,EAAQb,qBAAqBiB,EAAYJ,EAAUI,GACtCjB,WACzCrE,EAAU,IAAIuF,EAAQJ,GAAe,IAMzC,OAFAC,EAAUI,QAkMZ,SAA0BP,EAASjI,EAAMgD,GACvC,IAAIyF,EAAQC,EAEZ,OAAO,SAAgBC,EAAQC,GAC7B,GAAIH,IAAUI,EACZ,MAAM,IAAIC,MAAM,gCAGlB,GAAIL,IAAUM,EAAmB,CAC/B,GAAe,UAAXJ,EACF,MAAMC,EAKR,OAAOI,IAMT,IAHAhG,EAAQ2F,OAASA,EACjB3F,EAAQ4F,IAAMA,IAED,CACX,IAAIK,EAAWjG,EAAQiG,SACvB,GAAIA,EAAU,CACZ,IAAIC,EAAiBC,EAAoBF,EAAUjG,GACnD,GAAIkG,EAAgB,CAClB,GAAIA,IAAmBE,EAAkB,SACzC,OAAOF,GAIX,GAAuB,SAAnBlG,EAAQ2F,OAGV3F,EAAQqG,KAAOrG,EAAQsG,MAAQtG,EAAQ4F,SAElC,GAAuB,UAAnB5F,EAAQ2F,OAAoB,CACrC,GAAIF,IAAUC,EAEZ,MADAD,EAAQM,EACF/F,EAAQ4F,IAGhB5F,EAAQuG,kBAAkBvG,EAAQ4F,SAEN,WAAnB5F,EAAQ2F,QACjB3F,EAAQwG,OAAO,SAAUxG,EAAQ4F,KAGnCH,EAAQI,EAER,IAAIY,EAASC,EAASzB,EAASjI,EAAMgD,GACrC,GAAoB,WAAhByG,EAAOlL,KAAmB,CAO5B,GAJAkK,EAAQzF,EAAQ2G,KACZZ,EACAa,EAEAH,EAAOb,MAAQQ,EACjB,SAGF,MAAO,CACLnK,MAAOwK,EAAOb,IACde,KAAM3G,EAAQ2G,MAGS,UAAhBF,EAAOlL,OAChBkK,EAAQM,EAGR/F,EAAQ2F,OAAS,QACjB3F,EAAQ4F,IAAMa,EAAOb,OA1QPiB,CAAiB5B,EAASjI,EAAMgD,GAE7CoF,EAcT,SAASsB,EAASI,EAAI1J,EAAKwI,GACzB,IACE,MAAO,CAAErK,KAAM,SAAUqK,IAAKkB,EAAGC,KAAK3J,EAAKwI,IAC3C,MAAOoB,GACP,MAAO,CAAEzL,KAAM,QAASqK,IAAKoB,IAhBjC9C,EAAQc,KAAOA,EAoBf,IAAIU,EAAyB,iBACzBkB,EAAyB,iBACzBf,EAAoB,YACpBE,EAAoB,YAIpBK,EAAmB,GAMvB,SAASd,KACT,SAAS2B,KACT,SAASC,KAIT,IAAIC,EAAoB,GACxBA,EAAkBzC,GAAkB,WAClC,OAAOnI,MAGT,IAAI6K,EAAWrM,OAAOsM,eAClBC,EAA0BF,GAAYA,EAASA,EAASnM,EAAO,MAC/DqM,GACAA,IAA4BlD,GAC5BE,EAAOyC,KAAKO,EAAyB5C,KAGvCyC,EAAoBG,GAGtB,IAAIC,EAAKL,EAA2B7C,UAClCiB,EAAUjB,UAAYtJ,OAAOsK,OAAO8B,GAQtC,SAASK,EAAsBnD,GAC7B,CAAC,OAAQ,QAAS,UAAUpG,QAAQ,SAAS0H,GAC3CtB,EAAUsB,GAAU,SAASC,GAC3B,OAAOrJ,KAAKiJ,QAAQG,EAAQC,MAoClC,SAAS6B,EAAcrC,GAgCrB,IAAIsC,EAgCJnL,KAAKiJ,QA9BL,SAAiBG,EAAQC,GACvB,SAAS+B,IACP,OAAO,IAAIC,QAAQ,SAASC,EAASC,IAnCzC,SAASC,EAAOpC,EAAQC,EAAKiC,EAASC,GACpC,IAAIrB,EAASC,EAAStB,EAAUO,GAASP,EAAWQ,GACpD,GAAoB,UAAhBa,EAAOlL,KAEJ,CACL,IAAIyM,EAASvB,EAAOb,IAChB3J,EAAQ+L,EAAO/L,MACnB,OAAIA,GACiB,iBAAVA,GACPqI,EAAOyC,KAAK9K,EAAO,WACd2L,QAAQC,QAAQ5L,EAAMgM,SAASC,KAAK,SAASjM,GAClD8L,EAAO,OAAQ9L,EAAO4L,EAASC,IAC9B,SAASd,GACVe,EAAO,QAASf,EAAKa,EAASC,KAI3BF,QAAQC,QAAQ5L,GAAOiM,KAAK,SAASC,GAI1CH,EAAO/L,MAAQkM,EACfN,EAAQG,IACP,SAASI,GAGV,OAAOL,EAAO,QAASK,EAAOP,EAASC,KAvBzCA,EAAOrB,EAAOb,KAiCZmC,CAAOpC,EAAQC,EAAKiC,EAASC,KAIjC,OAAOJ,EAaLA,EAAkBA,EAAgBQ,KAChCP,EAGAA,GACEA,KA+GV,SAASxB,EAAoBF,EAAUjG,GACrC,IAAI2F,EAASM,EAAStB,SAAS3E,EAAQ2F,QACvC,GAAIA,IAAWxB,EAAW,CAKxB,GAFAnE,EAAQiG,SAAW,KAEI,UAAnBjG,EAAQ2F,OAAoB,CAE9B,GAAIM,EAAStB,SAAiB,SAG5B3E,EAAQ2F,OAAS,SACjB3F,EAAQ4F,IAAMzB,EACdgC,EAAoBF,EAAUjG,GAEP,UAAnBA,EAAQ2F,QAGV,OAAOS,EAIXpG,EAAQ2F,OAAS,QACjB3F,EAAQ4F,IAAM,IAAIyC,UAChB,kDAGJ,OAAOjC,EAGT,IAAIK,EAASC,EAASf,EAAQM,EAAStB,SAAU3E,EAAQ4F,KAEzD,GAAoB,UAAhBa,EAAOlL,KAIT,OAHAyE,EAAQ2F,OAAS,QACjB3F,EAAQ4F,IAAMa,EAAOb,IACrB5F,EAAQiG,SAAW,KACZG,EAGT,IAAIkC,EAAO7B,EAAOb,IAElB,OAAM0C,EAOFA,EAAK3B,MAGP3G,EAAQiG,EAASsC,YAAcD,EAAKrM,MAGpC+D,EAAQwI,KAAOvC,EAASwC,QAQD,WAAnBzI,EAAQ2F,SACV3F,EAAQ2F,OAAS,OACjB3F,EAAQ4F,IAAMzB,GAUlBnE,EAAQiG,SAAW,KACZG,GANEkC,GA3BPtI,EAAQ2F,OAAS,QACjB3F,EAAQ4F,IAAM,IAAIyC,UAAU,oCAC5BrI,EAAQiG,SAAW,KACZG,GAoDX,SAASsC,EAAaC,GACpB,IAAIC,EAAQ,CAAEC,OAAQF,EAAK,IAEvB,KAAKA,IACPC,EAAME,SAAWH,EAAK,IAGpB,KAAKA,IACPC,EAAMG,WAAaJ,EAAK,GACxBC,EAAMI,SAAWL,EAAK,IAGxBpM,KAAK0M,WAAWvL,KAAKkL,GAGvB,SAASM,EAAcN,GACrB,IAAInC,EAASmC,EAAMO,YAAc,GACjC1C,EAAOlL,KAAO,gBACPkL,EAAOb,IACdgD,EAAMO,WAAa1C,EAGrB,SAASlB,EAAQJ,GAIf5I,KAAK0M,WAAa,CAAC,CAAEJ,OAAQ,SAC7B1D,EAAYlH,QAAQyK,EAAcnM,MAClCA,KAAK6M,OAAM,GA8Bb,SAASnO,EAAOoO,GACd,GAAIA,EAAU,CACZ,IAAIC,EAAiBD,EAAS3E,GAC9B,GAAI4E,EACF,OAAOA,EAAevC,KAAKsC,GAG7B,GAA6B,mBAAlBA,EAASb,KAClB,OAAOa,EAGT,IAAKE,MAAMF,EAASjK,QAAS,CAC3B,IAAIlD,GAAK,EAAGsM,EAAO,SAASA,IAC1B,OAAStM,EAAImN,EAASjK,QACpB,GAAIkF,EAAOyC,KAAKsC,EAAUnN,GAGxB,OAFAsM,EAAKvM,MAAQoN,EAASnN,GACtBsM,EAAK7B,MAAO,EACL6B,EAOX,OAHAA,EAAKvM,MAAQkI,EACbqE,EAAK7B,MAAO,EAEL6B,GAGT,OAAOA,EAAKA,KAAOA,GAKvB,MAAO,CAAEA,KAAMxC,GAIjB,SAASA,IACP,MAAO,CAAE/J,MAAOkI,EAAWwC,MAAM,GA+MnC,OAxmBAM,EAAkB5C,UAAYkD,EAAGlL,YAAc6K,EAC/CA,EAA2B7K,YAAc4K,EACzCC,EAA2BpC,GACzBmC,EAAkBuC,YAAc,oBAYlCtF,EAAQuF,oBAAsB,SAASC,GACrC,IAAIC,EAAyB,mBAAXD,GAAyBA,EAAOrN,YAClD,QAAOsN,IACHA,IAAS1C,GAG2B,uBAAnC0C,EAAKH,aAAeG,EAAKtO,QAIhC6I,EAAQ0F,KAAO,SAASF,GAUtB,OATI3O,OAAO8O,eACT9O,OAAO8O,eAAeH,EAAQxC,IAE9BwC,EAAOI,UAAY5C,EACbpC,KAAqB4E,IACzBA,EAAO5E,GAAqB,sBAGhC4E,EAAOrF,UAAYtJ,OAAOsK,OAAOkC,GAC1BmC,GAOTxF,EAAQ6F,MAAQ,SAASnE,GACvB,MAAO,CAAEqC,QAASrC,IAsEpB4B,EAAsBC,EAAcpD,WACpCoD,EAAcpD,UAAUO,GAAuB,WAC7C,OAAOrI,MAET2H,EAAQuD,cAAgBA,EAKxBvD,EAAQ8F,MAAQ,SAAS/E,EAASC,EAASlI,EAAMmI,GAC/C,IAAI8E,EAAO,IAAIxC,EACbzC,EAAKC,EAASC,EAASlI,EAAMmI,IAG/B,OAAOjB,EAAQuF,oBAAoBvE,GAC/B+E,EACAA,EAAKzB,OAAON,KAAK,SAASF,GACxB,OAAOA,EAAOrB,KAAOqB,EAAO/L,MAAQgO,EAAKzB,UAuKjDhB,EAAsBD,GAEtBA,EAAGzC,GAAqB,YAOxByC,EAAG7C,GAAkB,WACnB,OAAOnI,MAGTgL,EAAG2C,SAAW,WACZ,MAAO,sBAkCThG,EAAQlJ,KAAO,SAAS8G,GACtB,IAAI9G,EAAO,GACX,IAAK,IAAI8C,KAAOgE,EACd9G,EAAK0C,KAAKI,GAMZ,OAJA9C,EAAKmP,UAIE,SAAS3B,IACd,KAAOxN,EAAKoE,QAAQ,CAClB,IAAItB,EAAM9C,EAAKoP,MACf,GAAItM,KAAOgE,EAGT,OAFA0G,EAAKvM,MAAQ6B,EACb0K,EAAK7B,MAAO,EACL6B,EAQX,OADAA,EAAK7B,MAAO,EACL6B,IAsCXtE,EAAQjJ,OAASA,EAMjBsK,EAAQlB,UAAY,CAClBhI,YAAakJ,EAEb6D,MAAO,SAASiB,GAcd,GAbA9N,KAAK+N,KAAO,EACZ/N,KAAKiM,KAAO,EAGZjM,KAAK8J,KAAO9J,KAAK+J,MAAQnC,EACzB5H,KAAKoK,MAAO,EACZpK,KAAK0J,SAAW,KAEhB1J,KAAKoJ,OAAS,OACdpJ,KAAKqJ,IAAMzB,EAEX5H,KAAK0M,WAAWhL,QAAQiL,IAEnBmB,EACH,IAAK,IAAIhP,KAAQkB,KAEQ,MAAnBlB,EAAKkP,OAAO,IACZjG,EAAOyC,KAAKxK,KAAMlB,KACjBkO,OAAOlO,EAAKmP,MAAM,MACrBjO,KAAKlB,GAAQ8I,IAMrBsG,KAAM,WACJlO,KAAKoK,MAAO,EAEZ,IACI+D,EADYnO,KAAK0M,WAAW,GACLE,WAC3B,GAAwB,UAApBuB,EAAWnP,KACb,MAAMmP,EAAW9E,IAGnB,OAAOrJ,KAAKoO,MAGdpE,kBAAmB,SAASqE,GAC1B,GAAIrO,KAAKoK,KACP,MAAMiE,EAGR,IAAI5K,EAAUzD,KACd,SAASsO,EAAOC,EAAKC,GAYnB,OAXAtE,EAAOlL,KAAO,QACdkL,EAAOb,IAAMgF,EACb5K,EAAQwI,KAAOsC,EAEXC,IAGF/K,EAAQ2F,OAAS,OACjB3F,EAAQ4F,IAAMzB,KAGN4G,EAGZ,IAAK,IAAI7O,EAAIK,KAAK0M,WAAW7J,OAAS,EAAGlD,GAAK,IAAKA,EAAG,CACpD,IAAI0M,EAAQrM,KAAK0M,WAAW/M,GACxBuK,EAASmC,EAAMO,WAEnB,GAAqB,SAAjBP,EAAMC,OAIR,OAAOgC,EAAO,OAGhB,GAAIjC,EAAMC,QAAUtM,KAAK+N,KAAM,CAC7B,IAAIU,EAAW1G,EAAOyC,KAAK6B,EAAO,YAC9BqC,EAAa3G,EAAOyC,KAAK6B,EAAO,cAEpC,GAAIoC,GAAYC,EAAY,CAC1B,GAAI1O,KAAK+N,KAAO1B,EAAME,SACpB,OAAO+B,EAAOjC,EAAME,UAAU,GACzB,GAAIvM,KAAK+N,KAAO1B,EAAMG,WAC3B,OAAO8B,EAAOjC,EAAMG,iBAGjB,GAAIiC,GACT,GAAIzO,KAAK+N,KAAO1B,EAAME,SACpB,OAAO+B,EAAOjC,EAAME,UAAU,OAG3B,CAAA,IAAImC,EAMT,MAAM,IAAInF,MAAM,0CALhB,GAAIvJ,KAAK+N,KAAO1B,EAAMG,WACpB,OAAO8B,EAAOjC,EAAMG,gBAU9BvC,OAAQ,SAASjL,EAAMqK,GACrB,IAAK,IAAI1J,EAAIK,KAAK0M,WAAW7J,OAAS,EAAGlD,GAAK,IAAKA,EAAG,CACpD,IAAI0M,EAAQrM,KAAK0M,WAAW/M,GAC5B,GAAI0M,EAAMC,QAAUtM,KAAK+N,MACrBhG,EAAOyC,KAAK6B,EAAO,eACnBrM,KAAK+N,KAAO1B,EAAMG,WAAY,CAChC,IAAImC,EAAetC,EACnB,OAIAsC,IACU,UAAT3P,GACS,aAATA,IACD2P,EAAarC,QAAUjD,GACvBA,GAAOsF,EAAanC,aAGtBmC,EAAe,MAGjB,IAAIzE,EAASyE,EAAeA,EAAa/B,WAAa,GAItD,OAHA1C,EAAOlL,KAAOA,EACdkL,EAAOb,IAAMA,EAETsF,GACF3O,KAAKoJ,OAAS,OACdpJ,KAAKiM,KAAO0C,EAAanC,WAClB3C,GAGF7J,KAAK4O,SAAS1E,IAGvB0E,SAAU,SAAS1E,EAAQuC,GACzB,GAAoB,UAAhBvC,EAAOlL,KACT,MAAMkL,EAAOb,IAcf,MAXoB,UAAhBa,EAAOlL,MACS,aAAhBkL,EAAOlL,KACTgB,KAAKiM,KAAO/B,EAAOb,IACM,WAAhBa,EAAOlL,MAChBgB,KAAKoO,KAAOpO,KAAKqJ,IAAMa,EAAOb,IAC9BrJ,KAAKoJ,OAAS,SACdpJ,KAAKiM,KAAO,OACa,WAAhB/B,EAAOlL,MAAqByN,IACrCzM,KAAKiM,KAAOQ,GAGP5C,GAGTgF,OAAQ,SAASrC,GACf,IAAK,IAAI7M,EAAIK,KAAK0M,WAAW7J,OAAS,EAAGlD,GAAK,IAAKA,EAAG,CACpD,IAAI0M,EAAQrM,KAAK0M,WAAW/M,GAC5B,GAAI0M,EAAMG,aAAeA,EAGvB,OAFAxM,KAAK4O,SAASvC,EAAMO,WAAYP,EAAMI,UACtCE,EAAcN,GACPxC,IAKbiF,MAAS,SAASxC,GAChB,IAAK,IAAI3M,EAAIK,KAAK0M,WAAW7J,OAAS,EAAGlD,GAAK,IAAKA,EAAG,CACpD,IAAI0M,EAAQrM,KAAK0M,WAAW/M,GAC5B,GAAI0M,EAAMC,SAAWA,EAAQ,CAC3B,IAAIpC,EAASmC,EAAMO,WACnB,GAAoB,UAAhB1C,EAAOlL,KAAkB,CAC3B,IAAI+P,EAAS7E,EAAOb,IACpBsD,EAAcN,GAEhB,OAAO0C,GAMX,MAAM,IAAIxF,MAAM,0BAGlByF,cAAe,SAASlC,EAAUd,EAAYE,GAa5C,OAZAlM,KAAK0J,SAAW,CACdtB,SAAU1J,EAAOoO,GACjBd,WAAYA,EACZE,QAASA,GAGS,SAAhBlM,KAAKoJ,SAGPpJ,KAAKqJ,IAAMzB,GAGNiC,IAQJlC,OAUT,IACEsH,mBAAqBvH,EACrB,MAAOwH,GAUP3Q,SAAS,IAAK,yBAAdA,CAAwCmJ,WChtBpCyH,EAAS,CACXC,2BAKIpP,oBAAKqP,4BAAmBzR,KACf0R,oBAAoB1R,KAK7BoH,SAASH,iBAAiB,+BACjB0K,yCAAgC3R,KAC5B0R,oBAAoB1R,SAI5B4R,sDAA6C5R,KACzC0R,oBAAoB1R,0BAjBvBL,2BHFH,IAAI8N,iBAAQC,GACY,WAAvBtG,SAASyK,WACTzK,SAASH,iBAAiB,mBAAoByG,GAE9CA,iHGmBR+D,mBAAoB,SAAUxR,GACVmH,SAAS0K,iBAAiB,YAElChO,iBAAQ8B,GACZ3F,EAAS2F,MAIjB+L,gCAAiC,SAAU1R,OACjC8R,EAAU3K,SAAS0K,iBAAiB,YAE1CzQ,MAAMC,KAAKyQ,GACNvQ,gBAAOxB,eAAiBgK,IAAXhK,EAAGgS,MAChBlO,iBAAQ8B,GACL3F,EAAS2F,MAIrBgM,6CAA8C,SAAU3R,OAC9C4E,EAAauC,SAAS6K,cAAc,QAQzB,IAAInN,0BAAkBC,OAC9BC,IAAIjD,EAAE,EAAGA,EAAIgD,EAAUE,OAAQlD,IAC5BgD,EAAUhD,GAAGsD,WAAWJ,OAAS,GACjCF,EAAUhD,GAAGsD,WAAWvB,iBAAQ1D,GACN,IAAlBA,EAAKkF,UAELlF,EAAKmF,QAAQ,aAAatF,EAASG,OAM9CoF,QAAQX,EAlBO,CACpBqN,WAAW,EACX3Q,YAAY,EACZ4Q,SAAS,KAkBjBT,oBAAqB,SAAU1R,GAC3BA,EAAGgS,IAAM,IAAI/P,EAAUjC,KAIzBL,MACFwH,OAAOoK,OAASA,EAChBpK,OAAOoK,OAAOC"}