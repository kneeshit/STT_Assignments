{"version":3,"file":"alpine-ie11.js","sources":["../node_modules/regenerator-runtime/runtime.js","../src/utils.js","../src/directives/for.js","../src/directives/bind.js","../src/directives/show.js","../src/directives/if.js","../src/directives/on.js","../src/directives/model.js","../src/component.js","../src/index.js"],"sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","\r\n// Thanks @stimulus:\r\n// https://github.com/stimulusjs/stimulus/blob/master/packages/%40stimulus/core/src/application.ts\r\nexport function domReady() {\r\n    return new Promise(resolve => {\r\n        if (document.readyState == \"loading\") {\r\n            document.addEventListener(\"DOMContentLoaded\", resolve)\r\n        } else {\r\n            resolve()\r\n        }\r\n    })\r\n}\r\n\r\nexport function arrayUnique(array) {\r\n    var a = array.concat();\r\n    for(var i=0; i<a.length; ++i) {\r\n        for(var j=i+1; j<a.length; ++j) {\r\n            if(a[i] === a[j])\r\n                a.splice(j--, 1);\r\n        }\r\n    }\r\n\r\n    return a;\r\n}\r\n\r\nexport function isTesting() {\r\n    return navigator.userAgent, navigator.userAgent.includes(\"Node.js\")\r\n        || navigator.userAgent.includes(\"jsdom\")\r\n}\r\n\r\nexport function kebabCase(subject) {\r\n    return subject.replace(/([a-z])([A-Z])/g, '$1-$2').replace(/[_\\s]/, '-').toLowerCase()\r\n}\r\n\r\nexport function walk(el, callback) {\r\n    if (callback(el) === false) return\r\n\r\n    let node = el.firstElementChild\r\n\r\n    while (node) {\r\n        walk(node, callback)\r\n\r\n        node = node.nextElementSibling\r\n    }\r\n}\r\n\r\nexport function debounce(func, wait) {\r\n    var timeout\r\n    return function () {\r\n        var context = this, args = arguments\r\n        var later = function () {\r\n            timeout = null\r\n            func.apply(context, args)\r\n        }\r\n        clearTimeout(timeout)\r\n        timeout = setTimeout(later, wait)\r\n    }\r\n}\r\n\r\nexport function saferEval(expression, dataContext, additionalHelperVariables = {}) {\r\n    return (new Function(['$data', ...Object.keys(additionalHelperVariables)], `var result; with($data) { result = ${expression} }; return result`))(\r\n        dataContext, ...Object.values(additionalHelperVariables)\r\n    )\r\n}\r\n\r\nexport function saferEvalNoReturn(expression, dataContext, additionalHelperVariables = {}) {\r\n    return (new Function(['dataContext', ...Object.keys(additionalHelperVariables)], `with(dataContext) { ${expression} }`))(\r\n        dataContext, ...Object.values(additionalHelperVariables)\r\n    )\r\n}\r\n\r\nexport function isXAttr(attr) {\r\n    const name = replaceAtAndColonWithStandardSyntax(attr.name)\r\n\r\n    const xAttrRE = /x-(on|bind|data|text|html|model|if|for|show|cloak|transition|ref)/\r\n\r\n    return xAttrRE.test(name)\r\n}\r\n\r\nexport function getXAttrs(el, type) {\r\n    return Array.from(el.attributes)\r\n        .filter(isXAttr)\r\n        .map(attr => {\r\n            const name = replaceAtAndColonWithStandardSyntax(attr.name)\r\n\r\n            const typeMatch = name.match(/x-(on|bind|data|text|html|model|if|for|show|cloak|transition|ref)/)\r\n            const valueMatch = name.match(/:([a-zA-Z\\-:]+)/)\r\n            const modifiers = name.match(/\\.[^.\\]]+(?=[^\\]]*$)/g) || []\r\n\r\n            return {\r\n                type: typeMatch ? typeMatch[1] : null,\r\n                value: valueMatch ? valueMatch[1] : null,\r\n                modifiers: modifiers.map(i => i.replace('.', '')),\r\n                expression: attr.value,\r\n            }\r\n        })\r\n        .filter(i => {\r\n            // If no type is passed in for filtering, bypassfilter\r\n            if (! type) return true\r\n\r\n            return i.type === type\r\n        })\r\n}\r\n\r\nexport function replaceAtAndColonWithStandardSyntax(name) {\r\n    if (name.startsWith('@')) {\r\n        return name.replace('@', 'x-on:')\r\n    } else if (name.startsWith(':')) {\r\n        return name.replace(':', 'x-bind:')\r\n    }\r\n\r\n    return name\r\n}\r\n\r\nexport function transitionIn(el, callback, forceSkip = false) {\r\n    if (forceSkip) return callback()\r\n\r\n    const attrs = getXAttrs(el, 'transition')\r\n\r\n    if (attrs.length < 1) return callback()\r\n\r\n    const enter = (attrs.find(i => i.value === 'enter') || { expression: '' }).expression.split(' ').filter(i => i !== '')\r\n    const enterStart = (attrs.find(i => i.value === 'enter-start') || { expression: '' }).expression.split(' ').filter(i => i !== '')\r\n    const enterEnd = (attrs.find(i => i.value === 'enter-end') || { expression: '' }).expression.split(' ').filter(i => i !== '')\r\n\r\n    transition(el, enter, enterStart, enterEnd, callback, () => {})\r\n}\r\n\r\nexport function transitionOut(el, callback, forceSkip = false) {\r\n    if (forceSkip) return callback()\r\n\r\n    const attrs = getXAttrs(el, 'transition')\r\n\r\n    if (attrs.length < 1) return callback()\r\n\r\n    const leave = (attrs.find(i => i.value === 'leave') || { expression: '' }).expression.split(' ').filter(i => i !== '')\r\n    const leaveStart = (attrs.find(i => i.value === 'leave-start') || { expression: '' }).expression.split(' ').filter(i => i !== '')\r\n    const leaveEnd = (attrs.find(i => i.value === 'leave-end') || { expression: '' }).expression.split(' ').filter(i => i !== '')\r\n\r\n    transition(el, leave, leaveStart, leaveEnd, () => {}, callback)\r\n}\r\n\r\nexport function transition(el, classesDuring, classesStart, classesEnd, hook1, hook2) {\r\n    const originalClasses = el.__x_original_classes || []\r\n    el.classList.add(...classesStart)\r\n    el.classList.add(...classesDuring)\r\n\r\n    requestAnimationFrame(() => {\r\n        const duration = Number(getComputedStyle(el).transitionDuration.replace('s', '')) * 1000\r\n\r\n        hook1()\r\n\r\n        requestAnimationFrame(() => {\r\n            // Don't remove classes that were in the original class attribute.\r\n            el.classList.remove(...classesStart.filter(i => !originalClasses.includes(i)))\r\n            el.classList.add(...classesEnd)\r\n\r\n            setTimeout(() => {\r\n                hook2()\r\n\r\n                // Adding an \"isConnected\" check, in case the callback\r\n                // removed the element from the DOM.\r\n                if (el.isConnected) {\r\n                    el.classList.remove(...classesDuring.filter(i => !originalClasses.includes(i)))\r\n                    el.classList.remove(...classesEnd.filter(i => !originalClasses.includes(i)))\r\n                }\r\n            }, duration);\r\n        })\r\n    });\r\n}\r\n","import { transitionIn, transitionOut, getXAttrs } from '../utils'\r\n\r\nexport function handleForDirective(component, el, expression, initialUpdate) {\r\n    const { single, bunch, iterator1, iterator2 } = parseFor(expression)\r\n\r\n    var items = component.evaluateReturnExpression(bunch)\r\n\r\n    // As we walk the array, we'll also walk the DOM (updating/creating as we go).\r\n    var previousEl = el\r\n    items.forEach((i, index, group) => {\r\n        const currentKey = getThisIterationsKeyFromTemplateTag(component, el, single, iterator1, iterator2, i, index, group)\r\n        let currentEl = previousEl.nextElementSibling\r\n\r\n        // Let's check and see if the x-for has already generated an element last time it ran.\r\n        if (currentEl && currentEl.__x_for_key !== undefined) {\r\n            // If the the key's don't match.\r\n            if (currentEl.__x_for_key !== currentKey) {\r\n                // We'll look ahead to see if we can find it further down.\r\n                var tmpCurrentEl = currentEl\r\n                while(tmpCurrentEl) {\r\n                    // If we found it later in the DOM.\r\n                    if (tmpCurrentEl.__x_for_key === currentKey) {\r\n                        // Move it to where it's supposed to be in the DOM.\r\n                        el.parentElement.insertBefore(tmpCurrentEl, currentEl)\r\n                        // And set it as the current element as if we just created it.\r\n                        currentEl = tmpCurrentEl\r\n                        break\r\n                    }\r\n\r\n                    tmpCurrentEl = (tmpCurrentEl.nextElementSibling && tmpCurrentEl.nextElementSibling.__x_for_key !== undefined) ? tmpCurrentEl.nextElementSibling : false\r\n                }\r\n            }\r\n\r\n            // Temporarily remove the key indicator to allow the normal \"updateElements\" to work\r\n            delete currentEl.__x_for_key\r\n\r\n            currentEl.__x_for_alias = single\r\n            currentEl.__x_for_value = i\r\n            component.updateElements(currentEl, () => {\r\n                return {[currentEl.__x_for_alias]: currentEl.__x_for_value}\r\n            })\r\n        } else {\r\n            // There are no more .__x_for_key elements, meaning the page is first loading, OR, there are\r\n            // extra items in the array that need to be added as new elements.\r\n\r\n            // Let's create a clone from the template.\r\n            const clone = document.importNode(el.content, true);\r\n            // Insert it where we are in the DOM.\r\n            el.parentElement.insertBefore(clone, currentEl)\r\n\r\n            // Set it as the current element.\r\n            currentEl = previousEl.nextElementSibling\r\n\r\n            // And transition it in if it's not the first page load.\r\n            transitionIn(currentEl, () => {}, initialUpdate)\r\n\r\n            // Now, let's walk the new DOM node and initialize everything,\r\n            // including new nested components.\r\n            // Note we are resolving the \"extraData\" alias stuff from the dom element value so that it's\r\n            // always up to date for listener handlers that don't get re-registered.\r\n            currentEl.__x_for_alias = single\r\n            currentEl.__x_for_value = i\r\n            component.initializeElements(currentEl, () => {\r\n                return {[currentEl.__x_for_alias]: currentEl.__x_for_value}\r\n            })\r\n        }\r\n\r\n        currentEl.__x_for_key = currentKey\r\n\r\n        previousEl = currentEl\r\n    })\r\n\r\n    // Now that we've added/updated/moved all the elements for the current state of the loop.\r\n    // Anything left over, we can get rid of.\r\n    var nextElementFromOldLoop = (previousEl.nextElementSibling && previousEl.nextElementSibling.__x_for_key !== undefined) ? previousEl.nextElementSibling : false\r\n\r\n    while(nextElementFromOldLoop) {\r\n        const nextElementFromOldLoopImmutable = nextElementFromOldLoop\r\n\r\n        transitionOut(nextElementFromOldLoop, () => {\r\n            nextElementFromOldLoopImmutable.remove()\r\n        })\r\n\r\n        nextElementFromOldLoop = (nextElementFromOldLoop.nextElementSibling && nextElementFromOldLoop.nextElementSibling.__x_for_key !== undefined) ? nextElementFromOldLoop.nextElementSibling : false\r\n    }\r\n}\r\n\r\n// This was taken from VueJS 2.* core. Thanks Vue!\r\nfunction parseFor (expression) {\r\n    const forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/\r\n    const stripParensRE = /^\\(|\\)$/g\r\n    const forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/\r\n\r\n    const inMatch = expression.match(forAliasRE)\r\n    if (! inMatch) return\r\n    const res = {}\r\n    res.bunch = inMatch[2].trim()\r\n    const single = inMatch[1].trim().replace(stripParensRE, '')\r\n    const iteratorMatch = single.match(forIteratorRE)\r\n    if (iteratorMatch) {\r\n        res.single = single.replace(forIteratorRE, '').trim()\r\n        res.iterator1 = iteratorMatch[1].trim()\r\n        if (iteratorMatch[2]) {\r\n            res.iterator2 = iteratorMatch[2].trim()\r\n        }\r\n    } else {\r\n        res.single = single\r\n    }\r\n    return res\r\n  }\r\n\r\nfunction getThisIterationsKeyFromTemplateTag(component, el, single, iterator1, iterator2, i, index, group) {\r\n    const keyAttr = getXAttrs(el, 'bind').filter(attr => attr.value === 'key')[0]\r\n\r\n    let keyAliases = { [single]: i }\r\n    if (iterator1) keyAliases[iterator1] = index\r\n    if (iterator2) keyAliases[iterator2] = group\r\n\r\n    return keyAttr\r\n        ? component.evaluateReturnExpression(keyAttr.expression, () => keyAliases)\r\n        : index\r\n}\r\n","import { arrayUnique } from '../utils'\r\n\r\nexport function handleAttributeBindingDirective(component, el, attrName, expression, extraVars) {\r\n    var value = component.evaluateReturnExpression(expression, extraVars)\r\n\r\n    if (attrName === 'value') {\r\n        if (el.type === 'radio') {\r\n            el.checked = el.value == value\r\n        } else if (el.type === 'checkbox') {\r\n            if (Array.isArray(value)) {\r\n                // I'm purposely not using Array.includes here because it's\r\n                // strict, and because of Numeric/String mis-casting, I\r\n                // want the \"includes\" to be \"fuzzy\".\r\n                let valueFound = false\r\n                value.forEach(val => {\r\n                    if (val == el.value) {\r\n                        valueFound = true\r\n                    }\r\n                })\r\n\r\n                el.checked = valueFound\r\n            } else {\r\n                el.checked = !! value\r\n            }\r\n        } else if (el.tagName === 'SELECT') {\r\n            updateSelect(el, value)\r\n        } else {\r\n            el.value = value\r\n        }\r\n    } else if (attrName === 'class') {\r\n        if (Array.isArray(value)) {\r\n            const originalClasses = el.__x_original_classes || []\r\n            el.setAttribute('class', arrayUnique(originalClasses.concat(value)).join(' '))\r\n        } else if (typeof value === 'object') {\r\n            Object.keys(value).forEach(classNames => {\r\n                if (value[classNames]) {\r\n                    classNames.split(' ').forEach(className => el.classList.add(className))\r\n                } else {\r\n                    classNames.split(' ').forEach(className => el.classList.remove(className))\r\n                }\r\n            })\r\n        } else {\r\n            const originalClasses = el.__x_original_classes || []\r\n            const newClasses = value.split(' ')\r\n            el.setAttribute('class', arrayUnique(originalClasses.concat(newClasses)).join(' '))\r\n        }\r\n    } else if (['disabled', 'readonly', 'required', 'checked', 'hidden'].includes(attrName)) {\r\n        // Boolean attributes have to be explicitly added and removed, not just set.\r\n        if (!! value) {\r\n            el.setAttribute(attrName, '')\r\n        } else {\r\n            el.removeAttribute(attrName)\r\n        }\r\n    } else {\r\n        el.setAttribute(attrName, value)\r\n    }\r\n}\r\n\r\nfunction updateSelect(el, value) {\r\n    const arrayWrappedValue = [].concat(value).map(value => { return value + '' })\r\n\r\n    Array.from(el.options).forEach(option => {\r\n        option.selected = arrayWrappedValue.includes(option.value || option.text)\r\n    })\r\n}\r\n","import { transitionIn, transitionOut } from '../utils'\r\n\r\nexport function handleShowDirective(el, value, initialUpdate = false) {\r\n    if (! value) {\r\n        transitionOut(el, () => {\r\n            el.style.display = 'none'\r\n        }, initialUpdate)\r\n    } else {\r\n        transitionIn(el, () => {\r\n            if (el.style.length === 1 && el.style.display !== '') {\r\n                el.removeAttribute('style')\r\n            } else {\r\n                el.style.removeProperty('display')\r\n            }\r\n        }, initialUpdate)\r\n    }\r\n}\r\n","import { transitionIn, transitionOut } from '../utils'\r\n\r\nexport function handleIfDirective(el, expressionResult, initialUpdate) {\r\n    if (el.nodeName.toLowerCase() !== 'template') console.warn(`Alpine: [x-if] directive should only be added to <template> tags.`)\r\n\r\n    const elementHasAlreadyBeenAdded = el.nextElementSibling && el.nextElementSibling.__x_inserted_me === true\r\n\r\n    if (expressionResult && ! elementHasAlreadyBeenAdded) {\r\n        const clone = document.importNode(el.content, true);\r\n\r\n        el.parentElement.insertBefore(clone, el.nextElementSibling)\r\n\r\n        el.nextElementSibling.__x_inserted_me = true\r\n\r\n        transitionIn(el.nextElementSibling, () => {}, initialUpdate)\r\n    } else if (! expressionResult && elementHasAlreadyBeenAdded) {\r\n        transitionOut(el.nextElementSibling, () => {\r\n            el.nextElementSibling.remove()\r\n        }, initialUpdate)\r\n    }\r\n}\r\n","import { kebabCase } from '../utils'\r\n\r\nexport function registerListener(component, el, event, modifiers, expression, extraVars = {}) {\r\n    if (modifiers.includes('away')) {\r\n        const handler = e => {\r\n            // Don't do anything if the click came form the element or within it.\r\n            if (el.contains(e.target)) return\r\n\r\n            // Don't do anything if this element isn't currently visible.\r\n            if (el.offsetWidth < 1 && el.offsetHeight < 1) return\r\n\r\n            // Now that we are sure the element is visible, AND the click\r\n            // is from outside it, let's run the expression.\r\n            runListenerHandler(component, expression, e, extraVars)\r\n\r\n            if (modifiers.includes('once')) {\r\n                document.removeEventListener(event, handler)\r\n            }\r\n        }\r\n\r\n        // Listen for this event at the root level.\r\n        document.addEventListener(event, handler)\r\n    } else {\r\n        const listenerTarget = modifiers.includes('window')\r\n            ? window : (modifiers.includes('document') ? document : el)\r\n\r\n        const handler = e => {\r\n            if (isKeyEvent(event)) {\r\n                if (isListeningForASpecificKeyThatHasntBeenPressed(e, modifiers)) {\r\n                    return\r\n                }\r\n            }\r\n\r\n            if (modifiers.includes('prevent')) e.preventDefault()\r\n            if (modifiers.includes('stop')) e.stopPropagation()\r\n\r\n            runListenerHandler(component, expression, e, extraVars)\r\n\r\n            if (modifiers.includes('once')) {\r\n                listenerTarget.removeEventListener(event, handler)\r\n            }\r\n        }\r\n\r\n        listenerTarget.addEventListener(event, handler)\r\n    }\r\n}\r\n\r\nfunction runListenerHandler(component, expression, e, extraVars) {\r\n    component.evaluateCommandExpression(expression, () => {\r\n        return {...extraVars(), '$event': e}\r\n    })\r\n}\r\n\r\nfunction isKeyEvent(event) {\r\n    return ['keydown', 'keyup'].includes(event)\r\n}\r\n\r\nfunction isListeningForASpecificKeyThatHasntBeenPressed(e, modifiers) {\r\n    let keyModifiers = modifiers.filter(i => {\r\n        return ! ['window', 'document', 'prevent', 'stop'].includes(i)\r\n    })\r\n\r\n    // If no modifier is specified, we'll call it a press.\r\n    if (keyModifiers.length === 0) return false\r\n\r\n    // If one is passed, AND it matches the key pressed, we'll call it a press.\r\n    if (keyModifiers.length === 1 && keyModifiers[0] === keyToModifier(e.key)) return false\r\n\r\n    // The user is listening for key combinations.\r\n    const systemKeyModifiers = ['ctrl', 'shift', 'alt', 'meta', 'cmd', 'super']\r\n    const selectedSystemKeyModifiers = systemKeyModifiers.filter(modifier => keyModifiers.includes(modifier))\r\n\r\n    keyModifiers = keyModifiers.filter(i => ! selectedSystemKeyModifiers.includes(i))\r\n\r\n    if (selectedSystemKeyModifiers.length > 0) {\r\n        const activelyPressedKeyModifiers = selectedSystemKeyModifiers.filter(modifier => {\r\n            // Alias \"cmd\" and \"super\" to \"meta\"\r\n            if (modifier === 'cmd' || modifier === 'super') modifier = 'meta'\r\n\r\n            return e[`${modifier}Key`]\r\n        })\r\n\r\n        // If all the modifiers selected are pressed, ...\r\n        if (activelyPressedKeyModifiers.length === selectedSystemKeyModifiers.length) {\r\n            // AND the remaining key is pressed as well. It's a press.\r\n            if (keyModifiers[0] === keyToModifier(e.key)) return false\r\n        }\r\n    }\r\n\r\n    // We'll call it NOT a valid keypress.\r\n    return true\r\n}\r\n\r\nfunction keyToModifier(key) {\r\n    switch (key) {\r\n        case '/':\r\n            return 'slash'\r\n        case ' ':\r\n        case 'Spacebar':\r\n            return 'space'\r\n        default:\r\n            return kebabCase(key)\r\n    }\r\n}\r\n","import { registerListener } from './on'\r\n\r\nexport function registerModelListener(component, el, modifiers, expression, extraVars = {}) {\r\n    // If the element we are binding to is a select, a radio, or checkbox\r\n    // we'll listen for the change event instead of the \"input\" event.\r\n    var event = (el.tagName.toLowerCase() === 'select')\r\n        || ['checkbox', 'radio'].includes(el.type)\r\n        || modifiers.includes('lazy')\r\n        ? 'change' : 'input'\r\n\r\n    const listenerExpression = modelListenerExpression(component, el, modifiers, expression)\r\n\r\n    registerListener(component, el, event, modifiers, listenerExpression, extraVars)\r\n}\r\n\r\nfunction modelListenerExpression(component, el, modifiers, dataKey) {\r\n    var rightSideOfExpression = ''\r\n    if (el.type === 'checkbox') {\r\n        // If the data we are binding to is an array, toggle it's value inside the array.\r\n        if (Array.isArray(component.$data[dataKey])) {\r\n            rightSideOfExpression = `$event.target.checked ? ${dataKey}.concat([$event.target.value]) : ${dataKey}.filter(i => i !== $event.target.value)`\r\n        } else {\r\n            rightSideOfExpression = `$event.target.checked`\r\n        }\r\n    } else if (el.tagName.toLowerCase() === 'select' && el.multiple) {\r\n        rightSideOfExpression = modifiers.includes('number')\r\n            ? 'Array.from($event.target.selectedOptions).map(option => { return parseFloat(option.value || option.text) })'\r\n            : 'Array.from($event.target.selectedOptions).map(option => { return option.value || option.text })'\r\n    } else {\r\n        rightSideOfExpression = modifiers.includes('number')\r\n            ? 'parseFloat($event.target.value)'\r\n            : (modifiers.includes('trim') ? '$event.target.value.trim()' : '$event.target.value')\r\n    }\r\n\r\n    if (el.type === 'radio') {\r\n        // Radio buttons only work properly when they share a name attribute.\r\n        // People might assume we take care of that for them, because\r\n        // they already set a shared \"x-model\" attribute.\r\n        if (! el.hasAttribute('name')) el.setAttribute('name', dataKey)\r\n    }\r\n\r\n    return `${dataKey} = ${rightSideOfExpression}`\r\n}\r\n","import { walk, saferEval, saferEvalNoReturn, getXAttrs, debounce } from './utils'\r\nimport { handleForDirective } from './directives/for'\r\nimport { handleAttributeBindingDirective } from './directives/bind'\r\nimport { handleShowDirective } from './directives/show'\r\nimport { handleIfDirective } from './directives/if'\r\nimport { registerModelListener } from './directives/model'\r\nimport { registerListener } from './directives/on'\r\n\r\nexport default class Component {\r\n    constructor(el) {\r\n        this.$el = el\r\n\r\n        const dataAttr = this.$el.getAttribute('x-data')\r\n        const dataExpression = dataAttr === '' ? '{}' : dataAttr\r\n        const initExpression = this.$el.getAttribute('x-init')\r\n        const createdExpression = this.$el.getAttribute('x-created')\r\n        const mountedExpression = this.$el.getAttribute('x-mounted')\r\n\r\n        const unobservedData = saferEval(dataExpression, {})\r\n\r\n        // Add our magic properties to the original data for access.\r\n        unobservedData.$el = this.$el\r\n        unobservedData.$refs = this.getRefsProxy()\r\n\r\n        this.nextTickStack = []\r\n        unobservedData.$nextTick = (callback) => {\r\n            this.nextTickStack.push(callback)\r\n        }\r\n\r\n        // Construct a Proxy-based observable. This will be used to handle reactivity.\r\n        this.$data = this.wrapDataInObservable(unobservedData)\r\n\r\n        var initReturnedCallback\r\n        if (initExpression) {\r\n            // We want to allow data manipulation, but not trigger DOM updates just yet.\r\n            // We haven't even initialized the elements with their Alpine bindings. I mean c'mon.\r\n            this.pauseReactivity = true\r\n            initReturnedCallback = saferEval(this.$el.getAttribute('x-init'), this.$data)\r\n            this.pauseReactivity = false\r\n        }\r\n\r\n        if (createdExpression) {\r\n            console.warn('AlpineJS Warning: \"x-created\" is deprecated and will be removed in the next major version. Use \"x-init\" instead.')\r\n            this.pauseReactivity = true\r\n            saferEvalNoReturn(this.$el.getAttribute('x-created'), this.$data)\r\n            this.pauseReactivity = false\r\n        }\r\n\r\n        // Register all our listeners and set all our attribute bindings.\r\n        this.initializeElements(this.$el)\r\n\r\n        // Use mutation observer to detect new elements being added within this component at run-time.\r\n        // Alpine's just so darn flexible amirite?\r\n        this.listenForNewElementsToInitialize()\r\n\r\n        if (typeof initReturnedCallback === 'function') {\r\n            // Run the callback returned form the \"x-init\" hook to allow the user to do stuff after\r\n            // Alpine's got it's grubby little paws all over everything.\r\n            initReturnedCallback.call(this.$data)\r\n        }\r\n\r\n        if (mountedExpression) {\r\n            console.warn('AlpineJS Warning: \"x-mounted\" is deprecated and will be removed in the next major version. Use \"x-init\" (with a callback return) for the same behavior.')\r\n            // Run an \"x-mounted\" hook to allow the user to do stuff after\r\n            // Alpine's got it's grubby little paws all over everything.\r\n            saferEvalNoReturn(mountedExpression, this.$data)\r\n        }\r\n    }\r\n\r\n    wrapDataInObservable(data) {\r\n        var self = this\r\n\r\n        const proxyHandler = {\r\n            set(obj, property, value) {\r\n                const setWasSuccessful = Reflect.set(obj, property, value)\r\n\r\n                // Don't react to data changes for cases like the `x-created` hook.\r\n                if (self.pauseReactivity) return\r\n\r\n                debounce(() => {\r\n                    self.updateElements(self.$el)\r\n\r\n                    // Walk through the $nextTick stack and clear it as we go.\r\n                    while (self.nextTickStack.length > 0) {\r\n                        self.nextTickStack.shift()()\r\n                    }\r\n                }, 0)()\r\n\r\n                return setWasSuccessful\r\n            },\r\n            get(target, key) {\r\n                // If the property we are trying to get is a proxy, just return it.\r\n                // Like in the case of $refs\r\n                if (target[key] && target[key].isRefsProxy) return target[key]\r\n\r\n                // If property is a DOM node, just return it. (like in the case of this.$el)\r\n                if (target[key] && target[key] instanceof Node) return target[key]\r\n\r\n                // If accessing a nested property, retur this proxy recursively.\r\n                // This enables reactivity on setting nested data.\r\n                if (typeof target[key] === 'object' && target[key] !== null) {\r\n                    return new Proxy(target[key], proxyHandler)\r\n                }\r\n\r\n                // If none of the above, just return the flippin' value. Gawsh.\r\n                return target[key]\r\n            }\r\n        }\r\n\r\n        return new Proxy(data, proxyHandler)\r\n    }\r\n\r\n    walkAndSkipNestedComponents(el, callback, initializeComponentCallback = () => {}) {\r\n        walk(el, el => {\r\n            // We've hit a component.\r\n            if (el.hasAttribute('x-data')) {\r\n                // If it's not the current one.\r\n                if (! el.isSameNode(this.$el)) {\r\n                    // Initialize it if it's not.\r\n                    if (! el.__x) initializeComponentCallback(el)\r\n\r\n                    // Now we'll let that sub-component deal with itself.\r\n                    return false\r\n                }\r\n            }\r\n\r\n            return callback(el)\r\n        })\r\n    }\r\n\r\n    initializeElements(rootEl, extraVars = () => {}) {\r\n        this.walkAndSkipNestedComponents(rootEl, el => {\r\n            // Don't touch spawns from for loop\r\n            if (el.__x_for_key !== undefined) return false\r\n\r\n            this.initializeElement(el, extraVars)\r\n        }, el => {\r\n            el.__x = new Component(el)\r\n        })\r\n\r\n        // Walk through the $nextTick stack and clear it as we go.\r\n        while (this.nextTickStack.length > 0) {\r\n            this.nextTickStack.shift()()\r\n        }\r\n    }\r\n\r\n    initializeElement(el, extraVars) {\r\n        // To support class attribute merging, we have to know what the element's\r\n        // original class attribute looked like for reference.\r\n        if (el.hasAttribute('class') && getXAttrs(el).length > 0) {\r\n            el.__x_original_classes = el.getAttribute('class').split(' ')\r\n        }\r\n\r\n        this.registerListeners(el, extraVars)\r\n        this.resolveBoundAttributes(el, true, extraVars)\r\n    }\r\n\r\n    updateElements(rootEl, extraVars = () => {}) {\r\n        this.walkAndSkipNestedComponents(rootEl, el => {\r\n            // Don't touch spawns from for loop (and check if the root is actually a for loop in a parent, don't skip it.)\r\n            if (el.__x_for_key !== undefined && ! el.isSameNode(this.$el)) return false\r\n\r\n            this.updateElement(el, extraVars)\r\n        }, el => {\r\n            el.__x = new Component(el)\r\n        })\r\n    }\r\n\r\n    updateElement(el, extraVars) {\r\n        this.resolveBoundAttributes(el, false, extraVars)\r\n    }\r\n\r\n    registerListeners(el, extraVars) {\r\n        getXAttrs(el).forEach(({ type, value, modifiers, expression }) => {\r\n            switch (type) {\r\n                case 'on':\r\n                    registerListener(this, el, value, modifiers, expression, extraVars)\r\n                    break;\r\n\r\n                case 'model':\r\n                    registerModelListener(this, el, modifiers, expression, extraVars)\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        })\r\n    }\r\n\r\n    resolveBoundAttributes(el, initialUpdate = false, extraVars) {\r\n        getXAttrs(el).forEach(({ type, value, modifiers, expression }) => {\r\n            switch (type) {\r\n                case 'model':\r\n                    handleAttributeBindingDirective(this, el, 'value', expression, extraVars)\r\n                    break;\r\n\r\n                case 'bind':\r\n                    // The :key binding on an x-for is special, ignore it.\r\n                    if (el.tagName.toLowerCase() === 'template' && value === 'key') return\r\n\r\n                    handleAttributeBindingDirective(this, el, value, expression, extraVars)\r\n                    break;\r\n\r\n                case 'text':\r\n                    el.innerText = this.evaluateReturnExpression(expression, extraVars)\r\n                    break;\r\n\r\n                case 'html':\r\n                    el.innerHTML = this.evaluateReturnExpression(expression, extraVars)\r\n                    break;\r\n\r\n                case 'show':\r\n                    var output = this.evaluateReturnExpression(expression, extraVars)\r\n\r\n                    handleShowDirective(el, output, initialUpdate)\r\n                    break;\r\n\r\n                case 'if':\r\n                    var output = this.evaluateReturnExpression(expression, extraVars)\r\n\r\n                    handleIfDirective(el, output, initialUpdate)\r\n                    break;\r\n\r\n                case 'for':\r\n                    handleForDirective(this, el, expression, initialUpdate)\r\n                    break;\r\n\r\n                case 'cloak':\r\n                    el.removeAttribute('x-cloak')\r\n                    break;\r\n\r\n                default:\r\n                    break;\r\n            }\r\n        })\r\n    }\r\n\r\n    evaluateReturnExpression(expression, extraVars = () => {}) {\r\n        return saferEval(expression, this.$data, extraVars())\r\n    }\r\n\r\n    evaluateCommandExpression(expression, extraVars = () => {}) {\r\n        saferEvalNoReturn(expression, this.$data, extraVars())\r\n    }\r\n\r\n    listenForNewElementsToInitialize() {\r\n        const targetNode = this.$el\r\n\r\n        const observerOptions = {\r\n            childList: true,\r\n            attributes: true,\r\n            subtree: true,\r\n        }\r\n\r\n        const observer = new MutationObserver((mutations) => {\r\n            for (let i=0; i < mutations.length; i++){\r\n                // Filter out mutations triggered from child components.\r\n                if (! mutations[i].target.closest('[x-data]').isSameNode(this.$el)) return\r\n\r\n                if (mutations[i].type === 'attributes' && mutations[i].attributeName === 'x-data') {\r\n                    const rawData = saferEval(mutations[i].target.getAttribute('x-data'), {})\r\n\r\n                    Object.keys(rawData).forEach(key => {\r\n                        if (this.$data[key] !== rawData[key]) {\r\n                            this.$data[key] = rawData[key]\r\n                        }\r\n                    })\r\n                }\r\n\r\n                if (mutations[i].addedNodes.length > 0) {\r\n                    mutations[i].addedNodes.forEach(node => {\r\n                        if (node.nodeType !== 1) return\r\n\r\n                        if (node.matches('[x-data]')) {\r\n                            node.__x = new Component(node)\r\n                            return\r\n                        }\r\n\r\n                        this.initializeElements(node)\r\n                    })\r\n                }\r\n              }\r\n        })\r\n\r\n        observer.observe(targetNode, observerOptions);\r\n    }\r\n\r\n    getRefsProxy() {\r\n        var self = this\r\n\r\n        var refObj = {}\r\n\r\n        // If we are in IE, since the polyfill needs all properties to be defined before building the proxy,\r\n        // we just loop on the element, look for any x-ref and create a the property on a fake object.\r\n        // We don't need to put a real value since it will be resolved by the proxy class\r\n        if (window.document.documentMode) {\r\n            this.walkAndSkipNestedComponents(self.$el, el => {\r\n                if (el.hasAttribute('x-ref')) {\r\n                    refObj.el = true\r\n                }\r\n            })\r\n        }\r\n\r\n        // One of the goals of this is to not hold elements in memory, but rather re-evaluate\r\n        // the DOM when the system needs something from it. This way, the framework is flexible and\r\n        // friendly to outside DOM changes from libraries like Vue/Livewire.\r\n        // For this reason, I'm using an \"on-demand\" proxy to fake a \"$refs\" object.\r\n        return new Proxy(refObj, {\r\n            get(object, property) {\r\n                if (property === 'isRefsProxy') return true\r\n\r\n                var ref\r\n\r\n                // We can't just query the DOM because it's hard to filter out refs in\r\n                // nested components.\r\n                self.walkAndSkipNestedComponents(self.$el, el => {\r\n                    if (el.hasAttribute('x-ref') && el.getAttribute('x-ref') === property) {\r\n                        ref = el\r\n                    }\r\n                })\r\n\r\n                return ref\r\n            }\r\n        })\r\n    }\r\n}\r\n","import Component from './component'\r\nimport { domReady, isTesting } from './utils'\r\n\r\nconst Alpine = {\r\n    start: async function () {\r\n        if (! isTesting()) {\r\n            await domReady()\r\n        }\r\n\r\n        this.discoverComponents(el => {\r\n            this.initializeComponent(el)\r\n        })\r\n\r\n        // It's easier and more performant to just support Turbolinks than listen\r\n        // to MutationOberserver mutations at the document level.\r\n        document.addEventListener(\"turbolinks:load\", () => {\r\n            this.discoverUninitializedComponents(el => {\r\n                this.initializeComponent(el)\r\n            })\r\n        })\r\n\r\n        this.listenForNewUninitializedComponentsAtRunTime(el => {\r\n            this.initializeComponent(el)\r\n        })\r\n    },\r\n\r\n    discoverComponents: function (callback) {\r\n        const rootEls = document.querySelectorAll('[x-data]');\r\n\r\n        rootEls.forEach(rootEl => {\r\n            callback(rootEl)\r\n        })\r\n    },\r\n\r\n    discoverUninitializedComponents: function (callback, el = null) {\r\n        const rootEls = (el || document).querySelectorAll('[x-data]');\r\n\r\n        Array.from(rootEls)\r\n            .filter(el => el.__x === undefined)\r\n            .forEach(rootEl => {\r\n                callback(rootEl)\r\n            })\r\n    },\r\n\r\n    listenForNewUninitializedComponentsAtRunTime: function (callback) {\r\n        const targetNode = document.querySelector('body');\r\n\r\n        const observerOptions = {\r\n            childList: true,\r\n            attributes: true,\r\n            subtree: true,\r\n        }\r\n\r\n        const observer = new MutationObserver((mutations) => {\r\n            for (let i=0; i < mutations.length; i++){\r\n                if (mutations[i].addedNodes.length > 0) {\r\n                    mutations[i].addedNodes.forEach(node => {\r\n                        // Discard non-element nodes (like line-breaks)\r\n                        if (node.nodeType !== 1) return\r\n\r\n                        // Discard any changes happening within an existing component.\r\n                        // They will take care of themselves.\r\n                        if (node.parentElement.closest('[x-data]')) return\r\n\r\n                        this.discoverUninitializedComponents((el) => {\r\n                            this.initializeComponent(el)\r\n                        }, node.parentElement)\r\n                    })\r\n                }\r\n              }\r\n        })\r\n\r\n        observer.observe(targetNode, observerOptions)\r\n    },\r\n\r\n    initializeComponent: function (el) {\r\n        el.__x = new Component(el)\r\n    }\r\n}\r\n\r\nif (! isTesting()) {\r\n    window.Alpine = Alpine\r\n    window.Alpine.start()\r\n}\r\n\r\nexport default Alpine\r\n"],"names":["runtime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","method","arg","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","value","makeInvokeMethod","fn","obj","call","err","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","previousPromise","callInvokeWithMethodAndArg","Promise","resolve","reject","invoke","result","__await","then","unwrapped","error","undefined","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","keys","object","key","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function","domReady","document","readyState","addEventListener","arrayUnique","array","a","concat","j","splice","isTesting","navigator","userAgent","includes","walk","el","callback","node","firstElementChild","nextElementSibling","saferEval","expression","dataContext","additionalHelperVariables","saferEvalNoReturn","isXAttr","attr","replaceAtAndColonWithStandardSyntax","test","getXAttrs","Array","from","attributes","filter","map","typeMatch","match","valueMatch","modifiers","replace","startsWith","transitionIn","forceSkip","attrs","enter","find","split","enterStart","enterEnd","transition","transitionOut","leave","leaveStart","leaveEnd","classesDuring","classesStart","classesEnd","hook1","hook2","originalClasses","__x_original_classes","classList","add","requestAnimationFrame","duration","Number","getComputedStyle","transitionDuration","remove","setTimeout","isConnected","handleForDirective","component","initialUpdate","forIteratorRE","inMatch","res","bunch","trim","single","iteratorMatch","iterator1","iterator2","parseFor","items","evaluateReturnExpression","previousEl","index","group","currentKey","keyAttr","keyAliases","getThisIterationsKeyFromTemplateTag","currentEl","__x_for_key","tmpCurrentEl","parentElement","insertBefore","__x_for_alias","__x_for_value","updateElements","clone","importNode","content","initializeElements","nextElementFromOldLoop","nextElementFromOldLoopImmutable","handleAttributeBindingDirective","attrName","extraVars","checked","isArray","valueFound","val","tagName","arrayWrappedValue","options","option","selected","text","updateSelect","setAttribute","join","_typeof","classNames","className","newClasses","removeAttribute","handleShowDirective","style","display","removeProperty","handleIfDirective","expressionResult","nodeName","toLowerCase","console","warn","elementHasAlreadyBeenAdded","__x_inserted_me","registerListener","event","handler","e","contains","target","offsetWidth","offsetHeight","runListenerHandler","removeEventListener","listenerTarget","window","isKeyEvent","isListeningForASpecificKeyThatHasntBeenPressed","preventDefault","stopPropagation","evaluateCommandExpression","keyModifiers","keyToModifier","selectedSystemKeyModifiers","modifier","modelListenerExpression","dataKey","rightSideOfExpression","$data","multiple","hasAttribute","Component","$el","initReturnedCallback","dataAttr","getAttribute","dataExpression","initExpression","createdExpression","mountedExpression","unobservedData","$refs","getRefsProxy","nextTickStack","$nextTick","wrapDataInObservable","pauseReactivity","listenForNewElementsToInitialize","data","proxyHandler","set","property","func","wait","timeout","setWasSuccessful","Reflect","shift","args","arguments","later","apply","clearTimeout","get","isRefsProxy","Node","Proxy","initializeComponentCallback","isSameNode","__x","rootEl","walkAndSkipNestedComponents","initializeElement","registerListeners","resolveBoundAttributes","updateElement","listenerExpression","registerModelListener","innerText","innerHTML","output","targetNode","MutationObserver","mutations","closest","attributeName","rawData","_this11","addedNodes","nodeType","matches","observe","childList","subtree","refObj","documentMode","ref","Alpine","start","discoverComponents","initializeComponent","discoverUninitializedComponents","listenForNewUninitializedComponentsAtRunTime","querySelectorAll","rootEls","querySelector"],"mappings":"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"}