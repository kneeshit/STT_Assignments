{"version":3,"file":"alpine.js","sources":["../src/utils.js","../src/component.js","../src/index.js"],"sourcesContent":["\n// Thanks @stimulus:\n// https://github.com/stimulusjs/stimulus/blob/master/packages/%40stimulus/core/src/application.ts\nexport function domReady() {\n    return new Promise(resolve => {\n        if (document.readyState == \"loading\") {\n            document.addEventListener(\"DOMContentLoaded\", resolve)\n        } else {\n            resolve()\n        }\n    })\n}\n\nexport function isTesting() {\n    return navigator.userAgent, navigator.userAgent.includes(\"Node.js\")\n        || navigator.userAgent.includes(\"jsdom\")\n}\n\nexport function kebabCase(subject) {\n    return subject.replace(/([a-z])([A-Z])/g, '$1-$2').replace(/[_\\s]/, '-').toLowerCase()\n}\n\nexport function walkSkippingNestedComponents(el, callback, isRoot = true) {\n    if (el.hasAttribute('x-data') && ! isRoot) return\n\n    callback(el)\n\n    let node = el.firstElementChild\n\n    while (node) {\n        walkSkippingNestedComponents(node, callback, false)\n\n        node = node.nextElementSibling\n    }\n}\n\nexport function debounce(func, wait, immediate) {\n    var timeout;\n    return function () {\n        var context = this, args = arguments;\n        var later = function () {\n            timeout = null;\n            if (!immediate) func.apply(context, args);\n        };\n        var callNow = immediate && !timeout;\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n        if (callNow) func.apply(context, args);\n    };\n};\n\nexport function onlyUnique(value, index, self) {\n    return self.indexOf(value) === index;\n}\n\nexport function saferEval(expression, dataContext, additionalHelperVariables = {}) {\n    return (new Function(['$data', ...Object.keys(additionalHelperVariables)], `var result; with($data) { result = ${expression} }; return result`))(\n        dataContext, ...Object.values(additionalHelperVariables)\n    )\n}\n\nexport function saferEvalNoReturn(expression, dataContext, additionalHelperVariables = {}) {\n    return (new Function(['dataContext', ...Object.keys(additionalHelperVariables)], `with(dataContext) { ${expression} }`))(\n        dataContext, ...Object.values(additionalHelperVariables)\n    )\n}\n\nexport function isXAttr(attr) {\n    const name = replaceAtAndColonWithStandardSyntax(attr.name)\n\n    const xAttrRE = /x-(on|bind|data|text|html|model|if|show|cloak|transition|ref)/\n\n    return xAttrRE.test(name)\n}\n\nexport function getXAttrs(el, type) {\n    return Array.from(el.attributes)\n        .filter(isXAttr)\n        .map(attr => {\n            const name = replaceAtAndColonWithStandardSyntax(attr.name)\n\n            const typeMatch = name.match(/x-(on|bind|data|text|html|model|if|show|cloak|transition|ref)/)\n            const valueMatch = name.match(/:([a-zA-Z\\-]+)/)\n            const modifiers = name.match(/\\.[^.\\]]+(?=[^\\]]*$)/g) || []\n\n            return {\n                type: typeMatch ? typeMatch[1] : null,\n                value: valueMatch ? valueMatch[1] : null,\n                modifiers: modifiers.map(i => i.replace('.', '')),\n                expression: attr.value,\n            }\n        })\n        .filter(i => {\n            // If no type is passed in for filtering, bypassfilter\n            if (! type) return true\n\n            return i.type === type\n        })\n}\n\nexport function replaceAtAndColonWithStandardSyntax(name) {\n    if (name.startsWith('@')) {\n        return name.replace('@', 'x-on:')\n    } else if (name.startsWith(':')) {\n        return name.replace(':', 'x-bind:')\n    }\n\n    return name\n}\n\nexport function transitionIn(el, callback, forceSkip = false) {\n    if (forceSkip) callback()\n\n    const attrs = getXAttrs(el, 'transition')\n\n    if (attrs.length < 1) callback()\n\n    const enter = (attrs.find(i => i.value === 'enter') || { expression: '' }).expression.split(' ').filter(i => i !== '')\n    const enterStart = (attrs.find(i => i.value === 'enter-start') || { expression: '' }).expression.split(' ').filter(i => i !== '')\n    const enterEnd = (attrs.find(i => i.value === 'enter-end') || { expression: '' }).expression.split(' ').filter(i => i !== '')\n\n    transition(el, enter, enterStart, enterEnd, callback, () => {})\n}\n\nexport function transitionOut(el, callback, forceSkip = false) {\n    if (forceSkip) callback()\n\n    const attrs = getXAttrs(el, 'transition')\n\n    if (attrs.length < 1) callback()\n\n    const leave = (attrs.find(i => i.value === 'leave') || { expression: '' }).expression.split(' ').filter(i => i !== '')\n    const leaveStart = (attrs.find(i => i.value === 'leave-start') || { expression: '' }).expression.split(' ').filter(i => i !== '')\n    const leaveEnd = (attrs.find(i => i.value === 'leave-end') || { expression: '' }).expression.split(' ').filter(i => i !== '')\n\n    transition(el, leave, leaveStart, leaveEnd, () => {}, callback)\n}\n\nexport function transition(el, classesDuring, classesStart, classesEnd, hook1, hook2) {\n    el.classList.add(...classesStart)\n    el.classList.add(...classesDuring)\n\n    requestAnimationFrame(() => {\n        const duration = Number(getComputedStyle(el).transitionDuration.replace('s', '')) * 1000\n\n        hook1()\n\n        requestAnimationFrame(() => {\n            el.classList.remove(...classesStart)\n            el.classList.add(...classesEnd)\n\n            setTimeout(() => {\n                hook2()\n\n                // Adding an \"isConnected\" check, in case the callback\n                // removed the element from the DOM.\n                if (el.isConnected) {\n                    el.classList.remove(...classesDuring)\n                    el.classList.remove(...classesEnd)\n                }\n            }, duration);\n        })\n    });\n}\n","import { walkSkippingNestedComponents, kebabCase, saferEval, saferEvalNoReturn, getXAttrs, debounce, transitionIn, transitionOut } from './utils'\n\nexport default class Component {\n    constructor(el) {\n        this.$el = el\n\n        const dataAttr = this.$el.getAttribute('x-data')\n        const dataExpression = dataAttr === '' ? '{}' : dataAttr\n        const initExpression = this.$el.getAttribute('x-init')\n        const createdExpression = this.$el.getAttribute('x-created')\n        const mountedExpression = this.$el.getAttribute('x-mounted')\n\n        const unobservedData = saferEval(dataExpression, {})\n\n        // Construct a Proxy-based observable. This will be used to handle reactivity.\n        this.$data = this.wrapDataInObservable(unobservedData)\n\n        // Walk through the raw data and set the \"this\" context of any functions\n        // to the observable, so data manipulations are reactive.\n        Object.keys(unobservedData).forEach(key => {\n            if (typeof unobservedData[key] === 'function') {\n                unobservedData[key] = unobservedData[key].bind(this.$data)\n            }\n        })\n\n        // After making user-supplied data methods reactive, we can now add\n        // our magic properties to the original data for access.\n        unobservedData.$el = this.$el\n        unobservedData.$refs = this.getRefsProxy()\n        unobservedData.$nextTick = (callback) => {\n            this.delayRunByATick(callback)\n        }\n\n        // For $nextTick().\n        this.tickStack = []\n        this.collectingTickCallbacks = false\n\n        var initReturnedCallback\n        if (initExpression) {\n            // We want to allow data manipulation, but not trigger DOM updates just yet.\n            // We haven't even initialized the elements with their Alpine bindings. I mean c'mon.\n            this.pauseReactivity = true\n            initReturnedCallback = saferEval(this.$el.getAttribute('x-init'), this.$data)\n            this.pauseReactivity = false\n        }\n\n        if (createdExpression) {\n            console.warn('AlpineJS Warning: \"x-created\" is deprecated and will be removed in the next major version. Use \"x-init\" instead.')\n            this.pauseReactivity = true\n            saferEvalNoReturn(this.$el.getAttribute('x-created'), this.$data)\n            this.pauseReactivity = false\n        }\n\n        // Register all our listeners and set all our attribute bindings.\n        this.initializeElements()\n\n        // Use mutation observer to detect new elements being added within this component at run-time.\n        // Alpine's just so darn flexible amirite?\n        this.listenForNewElementsToInitialize()\n\n        if (typeof initReturnedCallback === 'function') {\n            // Run the callback returned form the \"x-init\" hook to allow the user to do stuff after\n            // Alpine's got it's grubby little paws all over everything.\n            initReturnedCallback.call(this.$data)\n        }\n\n        if (mountedExpression) {\n            console.warn('AlpineJS Warning: \"x-mounted\" is deprecated and will be removed in the next major version. Use \"x-init\" (with a callback return) for the same behavior.')\n            // Run an \"x-mounted\" hook to allow the user to do stuff after\n            // Alpine's got it's grubby little paws all over everything.\n            saferEvalNoReturn(mountedExpression, this.$data)\n        }\n    }\n\n    wrapDataInObservable(data) {\n        this.concernedData = []\n\n        var self = this\n\n        const proxyHandler = keyPrefix => ({\n            set(obj, property, value) {\n                const propertyName = keyPrefix ? `${keyPrefix}.${property}` : property\n\n                const setWasSuccessful = Reflect.set(obj, property, value)\n\n                // Don't react to data changes for cases like the `x-created` hook.\n                if (self.pauseReactivity) return\n\n                if (self.concernedData.indexOf(propertyName) === -1) {\n                    self.concernedData.push(propertyName)\n                }\n\n                self.refresh()\n\n                return setWasSuccessful\n            },\n            get(target, key) {\n                // This is because there is no way to do something like `typeof foo === 'Proxy'`.\n                if (key === 'isProxy') return true\n\n                // If the property we are trying to get is a proxy, just return it.\n                // Like in the case of $refs\n                if (target[key] && target[key].isProxy) return target[key]\n\n                // If property is a DOM node, just return it. (like in the case of this.$el)\n                if (target[key] && target[key] instanceof Node) return target[key]\n\n                // If accessing a nested property, retur this proxy recursively.\n                if (typeof target[key] === 'object' && target[key] !== null) {\n                    const propertyName = keyPrefix ? `${keyPrefix}.${key}` : key\n\n                    return new Proxy(target[key], proxyHandler(propertyName))\n                }\n\n                // If none of the above, just return the flippin' value. Gawsh.\n                return target[key]\n            }\n        })\n\n        return new Proxy(data, proxyHandler())\n    }\n\n    delayRunByATick(callback) {\n        if (this.collectingTickCallbacks) {\n            this.tickStack.push(callback)\n        } else {\n            callback()\n        }\n    }\n\n    startTick() {\n        this.collectingTickCallbacks = true\n    }\n\n    clearAndEndTick() {\n        this.tickStack.forEach(callable => callable())\n        this.tickStack = []\n\n        this.collectingTickCallbacks = false\n    }\n\n    initializeElements() {\n        walkSkippingNestedComponents(this.$el, el => {\n            this.initializeElement(el)\n        })\n    }\n\n    initializeElement(el) {\n        getXAttrs(el).forEach(({ type, value, modifiers, expression }) => {\n            switch (type) {\n                case 'on':\n                    var event = value\n                    this.registerListener(el, event, modifiers, expression)\n                    break;\n\n                case 'model':\n                    // If the element we are binding to is a select, a radio, or checkbox\n                    // we'll listen for the change event instead of the \"input\" event.\n                    var event = (el.tagName.toLowerCase() === 'select')\n                        || ['checkbox', 'radio'].includes(el.type)\n                        || modifiers.includes('lazy')\n                        ? 'change' : 'input'\n\n                    const listenerExpression = this.generateExpressionForXModelListener(el, modifiers, expression)\n\n                    this.registerListener(el, event, modifiers, listenerExpression)\n\n                    var attrName = 'value'\n                    var { output } = this.evaluateReturnExpression(expression)\n                    this.updateAttributeValue(el, attrName, output)\n                    break;\n\n                case 'bind':\n                    var attrName = value\n                    var { output } = this.evaluateReturnExpression(expression)\n                    this.updateAttributeValue(el, attrName, output)\n                    break;\n\n                case 'text':\n                    var { output } = this.evaluateReturnExpression(expression)\n                    this.updateTextValue(el, output)\n                    break;\n\n                case 'html':\n                    var { output } = this.evaluateReturnExpression(expression)\n                    this.updateHtmlValue(el, output)\n                    break;\n\n                case 'show':\n                    var { output } = this.evaluateReturnExpression(expression)\n                    this.updateVisibility(el, output, true)\n                    break;\n\n                case 'if':\n                    var { output } = this.evaluateReturnExpression(expression)\n                    this.updatePresence(el, output)\n                    break;\n\n                case 'cloak':\n                    el.removeAttribute('x-cloak')\n                    break;\n\n                default:\n                    break;\n            }\n        })\n    }\n\n    listenForNewElementsToInitialize() {\n        const targetNode = this.$el\n\n        const observerOptions = {\n            childList: true,\n            attributes: true,\n            subtree: true,\n        }\n\n        const observer = new MutationObserver((mutations) => {\n            for (let i=0; i < mutations.length; i++){\n                // Filter out mutations triggered from child components.\n                if (! mutations[i].target.closest('[x-data]').isSameNode(this.$el)) return\n\n                if (mutations[i].type === 'attributes' && mutations[i].attributeName === 'x-data') {\n                    const rawData = saferEval(mutations[i].target.getAttribute('x-data'), {})\n\n                    Object.keys(rawData).forEach(key => {\n                        if (this.$data[key] !== rawData[key]) {\n                            this.$data[key] = rawData[key]\n                        }\n                    })\n                }\n\n                if (mutations[i].addedNodes.length > 0) {\n                    mutations[i].addedNodes.forEach(node => {\n                        if (node.nodeType !== 1) return\n\n                        if (node.matches('[x-data]')) return\n\n                        if (getXAttrs(node).length > 0) {\n                            this.initializeElement(node)\n                        }\n                    })\n                }\n              }\n        })\n\n        observer.observe(targetNode, observerOptions);\n    }\n\n    refresh() {\n        var self = this\n\n        const actionByDirectiveType = {\n            'model': ({el, output}) => { self.updateAttributeValue(el, 'value', output) },\n            'bind': ({el, attrName, output}) => { self.updateAttributeValue(el, attrName, output) },\n            'text': ({el, output}) => { self.updateTextValue(el, output) },\n            'html': ({el, output}) => { self.updateHtmlValue(el, output) },\n            'show': ({el, output}) => { self.updateVisibility(el, output) },\n            'if': ({el, output}) => { self.updatePresence(el, output) },\n        }\n\n        const walkThenClearDependancyTracker = (rootEl, callback) => {\n            walkSkippingNestedComponents(rootEl, callback)\n\n            self.concernedData = []\n            self.clearAndEndTick()\n        }\n\n        this.startTick()\n\n        debounce(walkThenClearDependancyTracker, 5)(this.$el, function (el) {\n            getXAttrs(el).forEach(({ type, value, expression }) => {\n                if (! actionByDirectiveType[type]) return\n\n                var { output, deps } = self.evaluateReturnExpression(expression)\n\n                if (self.concernedData.filter(i => deps.includes(i)).length > 0) {\n                    (actionByDirectiveType[type])({ el, attrName: value, output })\n                }\n            })\n        })\n    }\n\n    generateExpressionForXModelListener(el, modifiers, dataKey) {\n        var rightSideOfExpression = ''\n        if (el.type === 'checkbox') {\n            // If the data we are binding to is an array, toggle it's value inside the array.\n            if (Array.isArray(this.$data[dataKey])) {\n                rightSideOfExpression = `$event.target.checked ? ${dataKey}.concat([$event.target.value]) : ${dataKey}.filter(i => i !== $event.target.value)`\n            } else {\n                rightSideOfExpression = `$event.target.checked`\n            }\n        } else if (el.tagName.toLowerCase() === 'select' && el.multiple) {\n            rightSideOfExpression = modifiers.includes('number')\n                ? 'Array.from($event.target.selectedOptions).map(option => { return parseFloat(option.value || option.text) })'\n                : 'Array.from($event.target.selectedOptions).map(option => { return option.value || option.text })'\n        } else {\n            rightSideOfExpression = modifiers.includes('number')\n                ? 'parseFloat($event.target.value)'\n                : (modifiers.includes('trim') ? '$event.target.value.trim()' : '$event.target.value')\n        }\n\n        if (el.type === 'radio') {\n            // Radio buttons only work properly when they share a name attribute.\n            // People might assume we take care of that for them, because\n            // they already set a shared \"x-model\" attribute.\n            if (! el.hasAttribute('name')) el.setAttribute('name', dataKey)\n        }\n\n        return `${dataKey} = ${rightSideOfExpression}`\n    }\n\n    registerListener(el, event, modifiers, expression) {\n        if (modifiers.includes('away')) {\n            const handler = e => {\n                // Don't do anything if the click came form the element or within it.\n                if (el.contains(e.target)) return\n\n                // Don't do anything if this element isn't currently visible.\n                if (el.offsetWidth < 1 && el.offsetHeight < 1) return\n\n                // Now that we are sure the element is visible, AND the click\n                // is from outside it, let's run the expression.\n                this.runListenerHandler(expression, e)\n\n                if (modifiers.includes('once')) {\n                    document.removeEventListener(event, handler)\n                }\n            }\n\n            // Listen for this event at the root level.\n            document.addEventListener(event, handler)\n        } else {\n            const listenerTarget = modifiers.includes('window')\n                ? window : (modifiers.includes('document') ? document : el)\n\n            const handler = e => {\n                const modifiersWithoutWindowOrDocument = modifiers\n                    .filter(i => i !== 'window').filter(i => i !== 'document')\n\n                if (event === 'keydown' && modifiersWithoutWindowOrDocument.length > 0 && ! modifiersWithoutWindowOrDocument.includes(kebabCase(e.key))) return\n\n                if (modifiers.includes('prevent')) e.preventDefault()\n                if (modifiers.includes('stop')) e.stopPropagation()\n\n                this.runListenerHandler(expression, e)\n\n                if (modifiers.includes('once')) {\n                    listenerTarget.removeEventListener(event, handler)\n                }\n            }\n\n            listenerTarget.addEventListener(event, handler)\n        }\n    }\n\n    runListenerHandler(expression, e) {\n        this.evaluateCommandExpression(expression, {\n            '$event': e,\n        })\n    }\n\n    evaluateReturnExpression(expression) {\n        var affectedDataKeys = []\n\n        const proxyHandler = prefix => ({\n            get(object, prop) {\n                // Sometimes non-proxyable values are accessed. These are of type \"symbol\".\n                // We can ignore them.\n                if (typeof prop === 'symbol') return\n\n                const propertyName = prefix ? `${prefix}.${prop}` : prop\n\n                // If we are accessing an object prop, we'll make this proxy recursive to build\n                // a nested dependancy key.\n                if (typeof object[prop] === 'object' && object[prop] !== null && ! Array.isArray(object[prop])) {\n                    return new Proxy(object[prop], proxyHandler(propertyName))\n                }\n\n                affectedDataKeys.push(propertyName)\n\n                return object[prop]\n            }\n        })\n\n        const proxiedData = new Proxy(this.$data, proxyHandler())\n\n        const result = saferEval(expression, proxiedData)\n\n        return {\n            output: result,\n            deps: affectedDataKeys\n        }\n    }\n\n    evaluateCommandExpression(expression, extraData) {\n        saferEvalNoReturn(expression, this.$data, extraData)\n    }\n\n    updateTextValue(el, value) {\n        el.innerText = value\n    }\n\n    updateHtmlValue(el, value) {\n        el.innerHTML = value\n    }\n\n    updateVisibility(el, value, initialUpdate = false) {\n        if (! value) {\n            transitionOut(el, () => {\n                el.style.display = 'none'\n            }, initialUpdate)\n        } else {\n            transitionIn(el, () => {\n                if (el.style.length === 1 && el.style.display !== '') {\n                    el.removeAttribute('style')\n                } else {\n                    el.style.removeProperty('display')\n                }\n            }, initialUpdate)\n        }\n    }\n\n    updatePresence(el, expressionResult) {\n        if (el.nodeName.toLowerCase() !== 'template') console.warn(`Alpine: [x-if] directive should only be added to <template> tags.`)\n\n        const elementHasAlreadyBeenAdded = el.nextElementSibling && el.nextElementSibling.__x_inserted_me === true\n\n        if (expressionResult && ! elementHasAlreadyBeenAdded) {\n            const clone = document.importNode(el.content, true);\n\n            el.parentElement.insertBefore(clone, el.nextElementSibling)\n\n            el.nextElementSibling.__x_inserted_me = true\n\n            transitionIn(el.nextElementSibling, () => {})\n        } else if (! expressionResult && elementHasAlreadyBeenAdded) {\n            transitionOut(el.nextElementSibling, () => {\n                el.nextElementSibling.remove()\n            })\n        }\n    }\n\n    updateAttributeValue(el, attrName, value) {\n        if (attrName === 'value') {\n            if (el.type === 'radio') {\n                el.checked = el.value == value\n            } else if (el.type === 'checkbox') {\n                if (Array.isArray(value)) {\n                    // I'm purposely not using Array.includes here because it's\n                    // strict, and because of Numeric/String mis-casting, I\n                    // want the \"includes\" to be \"fuzzy\".\n                    let valueFound = false\n                    value.forEach(val => {\n                        if (val == el.value) {\n                            valueFound = true\n                        }\n                    })\n\n                    el.checked = valueFound\n                } else {\n                    el.checked = !! value\n                }\n            } else if (el.tagName === 'SELECT') {\n                this.updateSelect(el, value)\n            } else {\n                el.value = value\n            }\n        } else if (attrName === 'class') {\n            if (typeof value === 'string') {\n                el.setAttribute('class', value)\n            } else if (Array.isArray(value)) {\n                el.setAttribute('class', value.join(' '))\n            } else {\n                // Use the class object syntax that vue uses to toggle them.\n                Object.keys(value).forEach(classNames => {\n                    if (value[classNames]) {\n                        classNames.split(' ').forEach(className => el.classList.add(className))\n                    } else {\n                        classNames.split(' ').forEach(className => el.classList.remove(className))\n                    }\n                })\n            }\n        } else if (['disabled', 'readonly', 'required', 'checked', 'hidden'].includes(attrName)) {\n            // Boolean attributes have to be explicitly added and removed, not just set.\n            if (!! value) {\n                el.setAttribute(attrName, '')\n            } else {\n                el.removeAttribute(attrName)\n            }\n        } else {\n            el.setAttribute(attrName, value)\n        }\n    }\n\n    updateSelect(el, value) {\n        const arrayWrappedValue = [].concat(value).map(value => { return value + '' })\n\n        Array.from(el.options).forEach(option => {\n            option.selected = arrayWrappedValue.includes(option.value || option.text)\n        })\n    }\n\n    getRefsProxy() {\n        var self = this\n\n        // One of the goals of this is to not hold elements in memory, but rather re-evaluate\n        // the DOM when the system needs something from it. This way, the framework is flexible and\n        // friendly to outside DOM changes from libraries like Vue/Livewire.\n        // For this reason, I'm using an \"on-demand\" proxy to fake a \"$refs\" object.\n        return new Proxy({}, {\n            get(object, property) {\n                if (property === 'isProxy') return true\n\n                var ref\n\n                // We can't just query the DOM because it's hard to filter out refs in\n                // nested components.\n                walkSkippingNestedComponents(self.$el, el => {\n                    if (el.hasAttribute('x-ref') && el.getAttribute('x-ref') === property) {\n                        ref = el\n                    }\n                })\n\n                return ref\n            }\n        })\n    }\n}\n","import Component from './component'\nimport { domReady, isTesting } from './utils'\n\nconst Alpine = {\n    start: async function () {\n        if (! isTesting()) {\n            await domReady()\n        }\n\n        this.discoverComponents(el => {\n            this.initializeComponent(el)\n        })\n\n        // It's easier and more performant to just support Turbolinks than listen\n        // to MutationOberserver mutations at the document level.\n        document.addEventListener(\"turbolinks:load\", () => {\n            this.discoverUninitializedComponents(el => {\n                this.initializeComponent(el)\n            })\n        })\n\n        this.listenForNewUninitializedComponentsAtRunTime(el => {\n            this.initializeComponent(el)\n        })\n    },\n\n    discoverComponents: function (callback) {\n        const rootEls = document.querySelectorAll('[x-data]');\n\n        rootEls.forEach(rootEl => {\n            callback(rootEl)\n        })\n    },\n\n    discoverUninitializedComponents: function (callback) {\n        const rootEls = document.querySelectorAll('[x-data]');\n\n        Array.from(rootEls)\n            .filter(el => el.__x === undefined)\n            .forEach(rootEl => {\n                callback(rootEl)\n            })\n    },\n\n    listenForNewUninitializedComponentsAtRunTime: function (callback) {\n        const targetNode = document.querySelector('body');\n\n        const observerOptions = {\n            childList: true,\n            attributes: true,\n            subtree: true,\n        }\n\n        const observer = new MutationObserver((mutations) => {\n            for (let i=0; i < mutations.length; i++){\n                if (mutations[i].addedNodes.length > 0) {\n                    mutations[i].addedNodes.forEach(node => {\n                        if (node.nodeType !== 1) return\n\n                        if (node.matches('[x-data]')) callback(node)\n                    })\n                }\n              }\n        })\n\n        observer.observe(targetNode, observerOptions)\n    },\n\n    initializeComponent: function (el) {\n        el.__x = new Component(el)\n    }\n}\n\nif (! isTesting()) {\n    window.Alpine = Alpine\n    window.Alpine.start()\n}\n\nexport default Alpine\n"],"names":["isTesting","navigator","userAgent","includes","walkSkippingNestedComponents","el","callback","isRoot","hasAttribute","node","firstElementChild","nextElementSibling","saferEval","expression","dataContext","additionalHelperVariables","Function","Object","keys","values","saferEvalNoReturn","isXAttr","attr","name","replaceAtAndColonWithStandardSyntax","test","getXAttrs","type","Array","from","attributes","filter","map","typeMatch","match","valueMatch","modifiers","value","i","replace","startsWith","transitionIn","forceSkip","attrs","length","transition","find","split","transitionOut","classesDuring","classesStart","classesEnd","hook1","hook2","classList","add","requestAnimationFrame","duration","Number","getComputedStyle","transitionDuration","remove","setTimeout","isConnected","Component","constructor","$el","dataAttr","this","getAttribute","dataExpression","initExpression","createdExpression","mountedExpression","unobservedData","initReturnedCallback","$data","wrapDataInObservable","forEach","key","bind","$refs","getRefsProxy","$nextTick","delayRunByATick","tickStack","collectingTickCallbacks","pauseReactivity","console","warn","initializeElements","listenForNewElementsToInitialize","call","data","concernedData","self","proxyHandler","keyPrefix","set","obj","property","propertyName","setWasSuccessful","Reflect","indexOf","push","refresh","get","target","isProxy","Node","Proxy","startTick","clearAndEndTick","callable","initializeElement","event","registerListener","tagName","toLowerCase","listenerExpression","generateExpressionForXModelListener","attrName","output","evaluateReturnExpression","updateAttributeValue","updateTextValue","updateHtmlValue","updateVisibility","updatePresence","removeAttribute","targetNode","MutationObserver","mutations","closest","isSameNode","attributeName","rawData","addedNodes","nodeType","matches","observe","childList","subtree","actionByDirectiveType","func","wait","immediate","timeout","rootEl","context","args","arguments","later","apply","callNow","clearTimeout","deps","dataKey","rightSideOfExpression","isArray","multiple","setAttribute","handler","e","contains","offsetWidth","offsetHeight","runListenerHandler","document","removeEventListener","addEventListener","listenerTarget","window","modifiersWithoutWindowOrDocument","preventDefault","stopPropagation","evaluateCommandExpression","affectedDataKeys","prefix","object","prop","extraData","innerText","innerHTML","initialUpdate","style","display","removeProperty","expressionResult","nodeName","elementHasAlreadyBeenAdded","__x_inserted_me","clone","importNode","content","parentElement","insertBefore","checked","valueFound","val","updateSelect","join","classNames","className","arrayWrappedValue","concat","options","option","selected","text","ref","Alpine","start","async","Promise","resolve","readyState","discoverComponents","initializeComponent","discoverUninitializedComponents","listenForNewUninitializedComponentsAtRunTime","querySelectorAll","rootEls","undefined","__x","querySelector"],"mappings":"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"}