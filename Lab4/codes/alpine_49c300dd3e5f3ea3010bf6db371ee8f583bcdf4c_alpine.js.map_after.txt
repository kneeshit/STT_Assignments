{"version":3,"file":"alpine.js","sources":["../src/utils.js","../src/component.js","../src/index.js"],"sourcesContent":["\n// Thanks @stimulus:\n// https://github.com/stimulusjs/stimulus/blob/master/packages/%40stimulus/core/src/application.ts\nexport function domReady() {\n    return new Promise(resolve => {\n        if (document.readyState == \"loading\") {\n            document.addEventListener(\"DOMContentLoaded\", resolve)\n        } else {\n            resolve()\n        }\n    })\n}\n\nexport function arrayUnique(array) {\n    var a = array.concat();\n    for(var i=0; i<a.length; ++i) {\n        for(var j=i+1; j<a.length; ++j) {\n            if(a[i] === a[j])\n                a.splice(j--, 1);\n        }\n    }\n\n    return a;\n}\n\nexport function isTesting() {\n    return navigator.userAgent, navigator.userAgent.includes(\"Node.js\")\n        || navigator.userAgent.includes(\"jsdom\")\n}\n\nexport function kebabCase(subject) {\n    return subject.replace(/([a-z])([A-Z])/g, '$1-$2').replace(/[_\\s]/, '-').toLowerCase()\n}\n\nexport function keyToModifier(key) {\n    switch (key) {\n        case '/':\n            return 'slash'\n        case ' ':\n        case 'Spacebar':\n            return 'space'\n        default:\n            return kebabCase(key)\n    }\n}\n\nexport function walk(el, callback) {\n    if (callback(el) === false) return\n\n    let node = el.firstElementChild\n\n    while (node) {\n        walk(node, callback)\n\n        node = node.nextElementSibling\n    }\n}\n\nexport function debounce(func, wait) {\n    var timeout\n    return function () {\n        var context = this, args = arguments\n        var later = function () {\n            timeout = null\n            func.apply(context, args)\n        }\n        clearTimeout(timeout)\n        timeout = setTimeout(later, wait)\n    }\n}\n\nexport function saferEval(expression, dataContext, additionalHelperVariables = {}) {\n    return (new Function(['$data', ...Object.keys(additionalHelperVariables)], `var result; with($data) { result = ${expression} }; return result`))(\n        dataContext, ...Object.values(additionalHelperVariables)\n    )\n}\n\nexport function saferEvalNoReturn(expression, dataContext, additionalHelperVariables = {}) {\n    return (new Function(['dataContext', ...Object.keys(additionalHelperVariables)], `with(dataContext) { ${expression} }`))(\n        dataContext, ...Object.values(additionalHelperVariables)\n    )\n}\n\nexport function isXAttr(attr) {\n    const name = replaceAtAndColonWithStandardSyntax(attr.name)\n\n    const xAttrRE = /x-(on|bind|data|text|html|model|if|show|cloak|transition|ref)/\n\n    return xAttrRE.test(name)\n}\n\nexport function getXAttrs(el, type) {\n    return Array.from(el.attributes)\n        .filter(isXAttr)\n        .map(attr => {\n            const name = replaceAtAndColonWithStandardSyntax(attr.name)\n\n            const typeMatch = name.match(/x-(on|bind|data|text|html|model|if|show|cloak|transition|ref)/)\n            const valueMatch = name.match(/:([a-zA-Z\\-:]+)/)\n            const modifiers = name.match(/\\.[^.\\]]+(?=[^\\]]*$)/g) || []\n\n            return {\n                type: typeMatch ? typeMatch[1] : null,\n                value: valueMatch ? valueMatch[1] : null,\n                modifiers: modifiers.map(i => i.replace('.', '')),\n                expression: attr.value,\n            }\n        })\n        .filter(i => {\n            // If no type is passed in for filtering, bypassfilter\n            if (! type) return true\n\n            return i.type === type\n        })\n}\n\nexport function replaceAtAndColonWithStandardSyntax(name) {\n    if (name.startsWith('@')) {\n        return name.replace('@', 'x-on:')\n    } else if (name.startsWith(':')) {\n        return name.replace(':', 'x-bind:')\n    }\n\n    return name\n}\n\nexport function transitionIn(el, callback, forceSkip = false) {\n    if (forceSkip) return callback()\n\n    const attrs = getXAttrs(el, 'transition')\n\n    if (attrs.length < 1) return callback()\n\n    const enter = (attrs.find(i => i.value === 'enter') || { expression: '' }).expression.split(' ').filter(i => i !== '')\n    const enterStart = (attrs.find(i => i.value === 'enter-start') || { expression: '' }).expression.split(' ').filter(i => i !== '')\n    const enterEnd = (attrs.find(i => i.value === 'enter-end') || { expression: '' }).expression.split(' ').filter(i => i !== '')\n\n    transition(el, enter, enterStart, enterEnd, callback, () => {})\n}\n\nexport function transitionOut(el, callback, forceSkip = false) {\n    if (forceSkip) return callback()\n\n    const attrs = getXAttrs(el, 'transition')\n\n    if (attrs.length < 1) return callback()\n\n    const leave = (attrs.find(i => i.value === 'leave') || { expression: '' }).expression.split(' ').filter(i => i !== '')\n    const leaveStart = (attrs.find(i => i.value === 'leave-start') || { expression: '' }).expression.split(' ').filter(i => i !== '')\n    const leaveEnd = (attrs.find(i => i.value === 'leave-end') || { expression: '' }).expression.split(' ').filter(i => i !== '')\n\n    transition(el, leave, leaveStart, leaveEnd, () => {}, callback)\n}\n\nexport function transition(el, classesDuring, classesStart, classesEnd, hook1, hook2) {\n    el.classList.add(...classesStart)\n    el.classList.add(...classesDuring)\n\n    requestAnimationFrame(() => {\n        const duration = Number(getComputedStyle(el).transitionDuration.replace('s', '')) * 1000\n\n        hook1()\n\n        requestAnimationFrame(() => {\n            el.classList.remove(...classesStart)\n            el.classList.add(...classesEnd)\n\n            setTimeout(() => {\n                hook2()\n\n                // Adding an \"isConnected\" check, in case the callback\n                // removed the element from the DOM.\n                if (el.isConnected) {\n                    el.classList.remove(...classesDuring)\n                    el.classList.remove(...classesEnd)\n                }\n            }, duration);\n        })\n    });\n}\n","import { arrayUnique, walk, keyToModifier, saferEval, saferEvalNoReturn, getXAttrs, debounce, transitionIn, transitionOut } from './utils'\n\nexport default class Component {\n    constructor(el) {\n        this.$el = el\n\n        const dataAttr = this.$el.getAttribute('x-data')\n        const dataExpression = dataAttr === '' ? '{}' : dataAttr\n        const initExpression = this.$el.getAttribute('x-init')\n        const createdExpression = this.$el.getAttribute('x-created')\n        const mountedExpression = this.$el.getAttribute('x-mounted')\n\n        const unobservedData = saferEval(dataExpression, {})\n\n        // Construct a Proxy-based observable. This will be used to handle reactivity.\n        this.$data = this.wrapDataInObservable(unobservedData)\n\n        // After making user-supplied data methods reactive, we can now add\n        // our magic properties to the original data for access.\n        unobservedData.$el = this.$el\n        unobservedData.$refs = this.getRefsProxy()\n\n        this.nextTickStack = []\n        unobservedData.$nextTick = (callback) => {\n            this.nextTickStack.push(callback)\n        }\n\n        var initReturnedCallback\n        if (initExpression) {\n            // We want to allow data manipulation, but not trigger DOM updates just yet.\n            // We haven't even initialized the elements with their Alpine bindings. I mean c'mon.\n            this.pauseReactivity = true\n            initReturnedCallback = saferEval(this.$el.getAttribute('x-init'), this.$data)\n            this.pauseReactivity = false\n        }\n\n        if (createdExpression) {\n            console.warn('AlpineJS Warning: \"x-created\" is deprecated and will be removed in the next major version. Use \"x-init\" instead.')\n            this.pauseReactivity = true\n            saferEvalNoReturn(this.$el.getAttribute('x-created'), this.$data)\n            this.pauseReactivity = false\n        }\n\n        // Register all our listeners and set all our attribute bindings.\n        this.initializeElements(this.$el)\n\n        // Use mutation observer to detect new elements being added within this component at run-time.\n        // Alpine's just so darn flexible amirite?\n        this.listenForNewElementsToInitialize()\n\n        if (typeof initReturnedCallback === 'function') {\n            // Run the callback returned form the \"x-init\" hook to allow the user to do stuff after\n            // Alpine's got it's grubby little paws all over everything.\n            initReturnedCallback.call(this.$data)\n        }\n\n        if (mountedExpression) {\n            console.warn('AlpineJS Warning: \"x-mounted\" is deprecated and will be removed in the next major version. Use \"x-init\" (with a callback return) for the same behavior.')\n            // Run an \"x-mounted\" hook to allow the user to do stuff after\n            // Alpine's got it's grubby little paws all over everything.\n            saferEvalNoReturn(mountedExpression, this.$data)\n        }\n    }\n\n    wrapDataInObservable(data) {\n        var self = this\n\n        const proxyHandler = {\n            set(obj, property, value) {\n                const setWasSuccessful = Reflect.set(obj, property, value)\n\n                // Don't react to data changes for cases like the `x-created` hook.\n                if (self.pauseReactivity) return\n\n                debounce(() => {\n                    self.updateElements(self.$el)\n\n                    // Walk through the $nextTick stack and clear it as we go.\n                    while (self.nextTickStack.length > 0) {\n                        self.nextTickStack.shift()()\n                    }\n                }, 0)()\n\n                return setWasSuccessful\n            },\n            get(target, key) {\n                // If the property we are trying to get is a proxy, just return it.\n                // Like in the case of $refs\n                if (target[key] && target[key].isRefsProxy) return target[key]\n\n                // If property is a DOM node, just return it. (like in the case of this.$el)\n                if (target[key] && target[key] instanceof Node) return target[key]\n\n                // If accessing a nested property, retur this proxy recursively.\n                // This enables reactivity on setting nested data.\n                if (typeof target[key] === 'object' && target[key] !== null) {\n                    return new Proxy(target[key], proxyHandler)\n                }\n\n                // If none of the above, just return the flippin' value. Gawsh.\n                return target[key]\n            }\n        }\n\n        return new Proxy(data, proxyHandler)\n    }\n\n    walkAndSkipNestedComponents(el, callback, initializeComponentCallback = () => {}) {\n        walk(el, el => {\n            // We've hit a component.\n            if (el.hasAttribute('x-data')) {\n                // If it's not the current one.\n                if (! el.isSameNode(this.$el)) {\n                    // Initialize it if it's not.\n                    if (! el.__x) initializeComponentCallback(el)\n\n                    // Now we'll let that sub-component deal with itself.\n                    return false\n                }\n            }\n\n            callback(el)\n        })\n    }\n\n    initializeElements(rootEl) {\n        this.walkAndSkipNestedComponents(rootEl, el => {\n            this.initializeElement(el)\n        }, el => {\n            el.__x = new Component(el)\n        })\n    }\n\n    initializeElement(el) {\n        // To support class attribute merging, we have to know what the element's\n        // original class attribute looked like for reference.\n        if (el.hasAttribute('class') && getXAttrs(el).length > 0) {\n            el.__originalClasses = el.getAttribute('class').split(' ')\n        }\n\n        this.registerListeners(el)\n        this.resolveBoundAttributes(el, true)\n    }\n\n    updateElements(rootEl) {\n        this.walkAndSkipNestedComponents(rootEl, el => {\n            this.updateElement(el)\n        }, el => {\n            el.__x = new Component(el)\n        })\n    }\n\n    updateElement(el) {\n        this.resolveBoundAttributes(el)\n    }\n\n    registerListeners(el) {\n        getXAttrs(el).forEach(({ type, value, modifiers, expression }) => {\n            switch (type) {\n                case 'on':\n                    var event = value\n                    this.registerListener(el, event, modifiers, expression)\n                    break;\n\n                case 'model':\n                    // If the element we are binding to is a select, a radio, or checkbox\n                    // we'll listen for the change event instead of the \"input\" event.\n                    var event = (el.tagName.toLowerCase() === 'select')\n                        || ['checkbox', 'radio'].includes(el.type)\n                        || modifiers.includes('lazy')\n                        ? 'change' : 'input'\n\n                    const listenerExpression = this.generateExpressionForXModelListener(el, modifiers, expression)\n\n                    this.registerListener(el, event, modifiers, listenerExpression)\n                    break;\n                default:\n                    break;\n            }\n        })\n    }\n\n    resolveBoundAttributes(el, initialUpdate = false) {\n        getXAttrs(el).forEach(({ type, value, modifiers, expression }) => {\n            switch (type) {\n                case 'model':\n                    var attrName = 'value'\n                    var output = this.evaluateReturnExpression(expression)\n                    this.updateAttributeValue(el, attrName, output)\n                    break;\n\n                case 'bind':\n                    var attrName = value\n                    var output = this.evaluateReturnExpression(expression)\n                    this.updateAttributeValue(el, attrName, output)\n                    break;\n\n                case 'text':\n                    var output = this.evaluateReturnExpression(expression)\n                    this.updateTextValue(el, output)\n                    break;\n\n                case 'html':\n                    var output = this.evaluateReturnExpression(expression)\n                    this.updateHtmlValue(el, output)\n                    break;\n\n                case 'show':\n                    var output = this.evaluateReturnExpression(expression)\n                    this.updateVisibility(el, output, initialUpdate)\n                    break;\n\n                case 'if':\n                    var output = this.evaluateReturnExpression(expression)\n                    this.updatePresence(el, output)\n                    break;\n\n                case 'cloak':\n                    el.removeAttribute('x-cloak')\n                    break;\n\n                default:\n                    break;\n            }\n        })\n    }\n\n    listenForNewElementsToInitialize() {\n        const targetNode = this.$el\n\n        const observerOptions = {\n            childList: true,\n            attributes: true,\n            subtree: true,\n        }\n\n        const observer = new MutationObserver((mutations) => {\n            for (let i=0; i < mutations.length; i++){\n                // Filter out mutations triggered from child components.\n                const closestParentComponent = mutations[i].target.closest('[x-data]')\n                if (! (closestParentComponent && closestParentComponent.isSameNode(this.$el))) return\n\n                if (mutations[i].type === 'attributes' && mutations[i].attributeName === 'x-data') {\n                    const rawData = saferEval(mutations[i].target.getAttribute('x-data'), {})\n\n                    Object.keys(rawData).forEach(key => {\n                        if (this.$data[key] !== rawData[key]) {\n                            this.$data[key] = rawData[key]\n                        }\n                    })\n                }\n\n                if (mutations[i].addedNodes.length > 0) {\n                    mutations[i].addedNodes.forEach(node => {\n                        if (node.nodeType !== 1) return\n\n                        if (node.matches('[x-data]')) {\n                            node.__x = new Component(node)\n                            return\n                        }\n\n                        this.initializeElements(node)\n                    })\n                }\n              }\n        })\n\n        observer.observe(targetNode, observerOptions);\n    }\n\n    generateExpressionForXModelListener(el, modifiers, dataKey) {\n        var rightSideOfExpression = ''\n        if (el.type === 'checkbox') {\n            // If the data we are binding to is an array, toggle it's value inside the array.\n            if (Array.isArray(this.$data[dataKey])) {\n                rightSideOfExpression = `$event.target.checked ? ${dataKey}.concat([$event.target.value]) : ${dataKey}.filter(i => i !== $event.target.value)`\n            } else {\n                rightSideOfExpression = `$event.target.checked`\n            }\n        } else if (el.tagName.toLowerCase() === 'select' && el.multiple) {\n            rightSideOfExpression = modifiers.includes('number')\n                ? 'Array.from($event.target.selectedOptions).map(option => { return parseFloat(option.value || option.text) })'\n                : 'Array.from($event.target.selectedOptions).map(option => { return option.value || option.text })'\n        } else {\n            rightSideOfExpression = modifiers.includes('number')\n                ? 'parseFloat($event.target.value)'\n                : (modifiers.includes('trim') ? '$event.target.value.trim()' : '$event.target.value')\n        }\n\n        if (el.type === 'radio') {\n            // Radio buttons only work properly when they share a name attribute.\n            // People might assume we take care of that for them, because\n            // they already set a shared \"x-model\" attribute.\n            if (! el.hasAttribute('name')) el.setAttribute('name', dataKey)\n        }\n\n        return `${dataKey} = ${rightSideOfExpression}`\n    }\n\n    registerListener(el, event, modifiers, expression) {\n        if (modifiers.includes('away')) {\n            const handler = e => {\n                // Don't do anything if the click came form the element or within it.\n                if (el.contains(e.target)) return\n\n                // Don't do anything if this element isn't currently visible.\n                if (el.offsetWidth < 1 && el.offsetHeight < 1) return\n\n                // Now that we are sure the element is visible, AND the click\n                // is from outside it, let's run the expression.\n                this.runListenerHandler(expression, e)\n\n                if (modifiers.includes('once')) {\n                    document.removeEventListener(event, handler)\n                }\n            }\n\n            // Listen for this event at the root level.\n            document.addEventListener(event, handler)\n        } else {\n            const listenerTarget = modifiers.includes('window')\n                ? window : (modifiers.includes('document') ? document : el)\n\n            const handler = e => {\n                const keyModifiers = modifiers.filter(i => i !== 'window').filter(i => i !== 'document')\n\n                // The user is scoping the keydown listener to a specific key using modifiers.\n                if (event === 'keydown' && keyModifiers.length > 0) {\n                    // The user is listening for a specific key.\n                    if (keyModifiers.length === 1 && ! keyModifiers.includes(keyToModifier(e.key))) return\n\n                    // The user is listening for key combinations.\n                    const systemKeyModifiers = ['ctrl', 'shift', 'alt', 'meta', 'cmd', 'super']\n                    const selectedSystemKeyModifiers = systemKeyModifiers.filter(modifier => keyModifiers.includes(modifier))\n\n                    if (selectedSystemKeyModifiers.length > 0) {\n                        const activelyPressedKeyModifiers = selectedSystemKeyModifiers.filter(modifier => {\n                            // Alias \"cmd\" and \"super\" to \"meta\"\n                            if (modifier === 'cmd' || modifier === 'super') modifier = 'meta'\n\n                            return e[`${modifier}Key`]\n                        })\n\n                        if (activelyPressedKeyModifiers.length === 0) return\n                    }\n                }\n\n                if (modifiers.includes('prevent')) e.preventDefault()\n                if (modifiers.includes('stop')) e.stopPropagation()\n\n                this.runListenerHandler(expression, e)\n\n                if (modifiers.includes('once')) {\n                    listenerTarget.removeEventListener(event, handler)\n                }\n            }\n\n            listenerTarget.addEventListener(event, handler)\n        }\n    }\n\n    runListenerHandler(expression, e) {\n        this.evaluateCommandExpression(expression, {\n            '$event': e,\n        })\n    }\n\n    evaluateReturnExpression(expression) {\n        return saferEval(expression, this.$data)\n    }\n\n    evaluateCommandExpression(expression, extraData) {\n        saferEvalNoReturn(expression, this.$data, extraData)\n    }\n\n    updateTextValue(el, value) {\n        el.innerText = value\n    }\n\n    updateHtmlValue(el, value) {\n        el.innerHTML = value\n    }\n\n    updateVisibility(el, value, initialUpdate = false) {\n        if (! value) {\n            transitionOut(el, () => {\n                el.style.display = 'none'\n            }, initialUpdate)\n        } else {\n            transitionIn(el, () => {\n                if (el.style.length === 1 && el.style.display !== '') {\n                    el.removeAttribute('style')\n                } else {\n                    el.style.removeProperty('display')\n                }\n            }, initialUpdate)\n        }\n    }\n\n    updatePresence(el, expressionResult) {\n        if (el.nodeName.toLowerCase() !== 'template') console.warn(`Alpine: [x-if] directive should only be added to <template> tags.`)\n\n        const elementHasAlreadyBeenAdded = el.nextElementSibling && el.nextElementSibling.__x_inserted_me === true\n\n        if (expressionResult && ! elementHasAlreadyBeenAdded) {\n            const clone = document.importNode(el.content, true);\n\n            el.parentElement.insertBefore(clone, el.nextElementSibling)\n\n            el.nextElementSibling.__x_inserted_me = true\n\n            transitionIn(el.nextElementSibling, () => {})\n        } else if (! expressionResult && elementHasAlreadyBeenAdded) {\n            transitionOut(el.nextElementSibling, () => {\n                el.nextElementSibling.remove()\n            })\n        }\n    }\n\n    updateAttributeValue(el, attrName, value) {\n        if (attrName === 'value') {\n            if (el.type === 'radio') {\n                el.checked = el.value == value\n            } else if (el.type === 'checkbox') {\n                if (Array.isArray(value)) {\n                    // I'm purposely not using Array.includes here because it's\n                    // strict, and because of Numeric/String mis-casting, I\n                    // want the \"includes\" to be \"fuzzy\".\n                    let valueFound = false\n                    value.forEach(val => {\n                        if (val == el.value) {\n                            valueFound = true\n                        }\n                    })\n\n                    el.checked = valueFound\n                } else {\n                    el.checked = !! value\n                }\n            } else if (el.tagName === 'SELECT') {\n                this.updateSelect(el, value)\n            } else {\n                el.value = value\n            }\n        } else if (attrName === 'class') {\n            if (Array.isArray(value)) {\n                const originalClasses = el.__originalClasses || []\n                el.setAttribute('class', arrayUnique(originalClasses.concat(value)).join(' '))\n            } else if (typeof value === 'object') {\n                Object.keys(value).forEach(classNames => {\n                    if (value[classNames]) {\n                        classNames.split(' ').forEach(className => el.classList.add(className))\n                    } else {\n                        classNames.split(' ').forEach(className => el.classList.remove(className))\n                    }\n                })\n            } else {\n                const originalClasses = el.__originalClasses || []\n                const newClasses = value.split(' ')\n                el.setAttribute('class', arrayUnique(originalClasses.concat(newClasses)).join(' '))\n            }\n        } else if (['disabled', 'readonly', 'required', 'checked', 'hidden'].includes(attrName)) {\n            // Boolean attributes have to be explicitly added and removed, not just set.\n            if (!! value) {\n                el.setAttribute(attrName, '')\n            } else {\n                el.removeAttribute(attrName)\n            }\n        } else {\n            el.setAttribute(attrName, value)\n        }\n    }\n\n    updateSelect(el, value) {\n        const arrayWrappedValue = [].concat(value).map(value => { return value + '' })\n\n        Array.from(el.options).forEach(option => {\n            option.selected = arrayWrappedValue.includes(option.value || option.text)\n        })\n    }\n\n    getRefsProxy() {\n        var self = this\n\n        // One of the goals of this is to not hold elements in memory, but rather re-evaluate\n        // the DOM when the system needs something from it. This way, the framework is flexible and\n        // friendly to outside DOM changes from libraries like Vue/Livewire.\n        // For this reason, I'm using an \"on-demand\" proxy to fake a \"$refs\" object.\n        return new Proxy({}, {\n            get(object, property) {\n                if (property === 'isRefsProxy') return true\n\n                var ref\n\n                // We can't just query the DOM because it's hard to filter out refs in\n                // nested components.\n                self.walkAndSkipNestedComponents(self.$el, el => {\n                    if (el.hasAttribute('x-ref') && el.getAttribute('x-ref') === property) {\n                        ref = el\n                    }\n                })\n\n                return ref\n            }\n        })\n    }\n}\n","import Component from './component'\nimport { domReady, isTesting } from './utils'\n\nconst Alpine = {\n    start: async function () {\n        if (! isTesting()) {\n            await domReady()\n        }\n\n        this.discoverComponents(el => {\n            this.initializeComponent(el)\n        })\n\n        // It's easier and more performant to just support Turbolinks than listen\n        // to MutationOberserver mutations at the document level.\n        document.addEventListener(\"turbolinks:load\", () => {\n            this.discoverUninitializedComponents(el => {\n                this.initializeComponent(el)\n            })\n        })\n\n        this.listenForNewUninitializedComponentsAtRunTime(el => {\n            this.initializeComponent(el)\n        })\n    },\n\n    discoverComponents: function (callback) {\n        const rootEls = document.querySelectorAll('[x-data]');\n\n        rootEls.forEach(rootEl => {\n            callback(rootEl)\n        })\n    },\n\n    discoverUninitializedComponents: function (callback) {\n        const rootEls = document.querySelectorAll('[x-data]');\n\n        Array.from(rootEls)\n            .filter(el => el.__x === undefined)\n            .forEach(rootEl => {\n                callback(rootEl)\n            })\n    },\n\n    listenForNewUninitializedComponentsAtRunTime: function (callback) {\n        const targetNode = document.querySelector('body');\n\n        const observerOptions = {\n            childList: true,\n            attributes: true,\n            subtree: true,\n        }\n\n        const observer = new MutationObserver((mutations) => {\n            for (let i=0; i < mutations.length; i++){\n                if (mutations[i].addedNodes.length > 0) {\n                    mutations[i].addedNodes.forEach(node => {\n                        // Discard non-element nodes (like line-breaks)\n                        if (node.nodeType !== 1) return\n\n                        // Discard any changes happening within an existing component.\n                        // They will take care of themselves.\n                        if (node.closest('[x-data]')) return\n\n                        // This is a new top-level component.\n                        if (node.matches('[x-data]')) callback(node)\n                    })\n                }\n              }\n        })\n\n        observer.observe(targetNode, observerOptions)\n    },\n\n    initializeComponent: function (el) {\n        el.__x = new Component(el)\n    }\n}\n\nif (! isTesting()) {\n    window.Alpine = Alpine\n    window.Alpine.start()\n}\n\nexport default Alpine\n"],"names":["arrayUnique","array","a","concat","i","length","j","splice","isTesting","navigator","userAgent","includes","saferEval","expression","dataContext","additionalHelperVariables","Function","Object","keys","values","saferEvalNoReturn","isXAttr","attr","name","replaceAtAndColonWithStandardSyntax","test","getXAttrs","el","type","Array","from","attributes","filter","map","typeMatch","match","valueMatch","modifiers","value","replace","startsWith","transitionIn","callback","forceSkip","attrs","transition","find","split","transitionOut","classesDuring","classesStart","classesEnd","hook1","hook2","classList","add","requestAnimationFrame","duration","Number","getComputedStyle","transitionDuration","remove","setTimeout","isConnected","Component","constructor","$el","dataAttr","this","getAttribute","dataExpression","initExpression","createdExpression","mountedExpression","unobservedData","initReturnedCallback","$data","wrapDataInObservable","$refs","getRefsProxy","nextTickStack","$nextTick","push","pauseReactivity","console","warn","initializeElements","listenForNewElementsToInitialize","call","data","self","proxyHandler","set","obj","property","setWasSuccessful","Reflect","func","wait","timeout","updateElements","shift","context","args","arguments","later","apply","clearTimeout","get","target","key","isRefsProxy","Node","Proxy","walkAndSkipNestedComponents","initializeComponentCallback","walk","node","firstElementChild","nextElementSibling","hasAttribute","isSameNode","__x","rootEl","initializeElement","__originalClasses","registerListeners","resolveBoundAttributes","updateElement","forEach","event","registerListener","tagName","toLowerCase","listenerExpression","generateExpressionForXModelListener","initialUpdate","attrName","output","evaluateReturnExpression","updateAttributeValue","updateTextValue","updateHtmlValue","updateVisibility","updatePresence","removeAttribute","targetNode","MutationObserver","mutations","closestParentComponent","closest","attributeName","rawData","addedNodes","nodeType","matches","observe","childList","subtree","dataKey","rightSideOfExpression","isArray","multiple","setAttribute","handler","e","contains","offsetWidth","offsetHeight","runListenerHandler","document","removeEventListener","addEventListener","listenerTarget","window","keyModifiers","keyToModifier","selectedSystemKeyModifiers","modifier","preventDefault","stopPropagation","evaluateCommandExpression","extraData","innerText","innerHTML","style","display","removeProperty","expressionResult","nodeName","elementHasAlreadyBeenAdded","__x_inserted_me","clone","importNode","content","parentElement","insertBefore","checked","valueFound","val","updateSelect","originalClasses","join","classNames","className","newClasses","arrayWrappedValue","options","option","selected","text","object","ref","Alpine","start","async","Promise","resolve","readyState","discoverComponents","initializeComponent","discoverUninitializedComponents","listenForNewUninitializedComponentsAtRunTime","querySelectorAll","rootEls","undefined","querySelector"],"mappings":"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"}