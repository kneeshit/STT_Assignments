{"version":3,"file":"alpine.js","sources":["../src/utils.js","../src/component.js","../src/index.js"],"sourcesContent":["\r\n// Thanks @stimulus:\r\n// https://github.com/stimulusjs/stimulus/blob/master/packages/%40stimulus/core/src/application.ts\r\nexport function domReady() {\r\n    return new Promise(resolve => {\r\n        if (document.readyState == \"loading\") {\r\n            document.addEventListener(\"DOMContentLoaded\", resolve)\r\n        } else {\r\n            resolve()\r\n        }\r\n    })\r\n}\r\n\r\nexport function isTesting() {\r\n    return navigator.userAgent, navigator.userAgent.includes(\"Node.js\")\r\n        || navigator.userAgent.includes(\"jsdom\")\r\n}\r\n\r\nexport function kebabCase(subject) {\r\n    return subject.replace(/([a-z])([A-Z])/g, '$1-$2').replace(/[_\\s]/, '-').toLowerCase()\r\n}\r\n\r\nexport function walkSkippingNestedComponents(el, callback, isRoot = true) {\r\n    if (el.hasAttribute('x-data') && ! isRoot) return\r\n\r\n    callback(el)\r\n\r\n    let node = el.firstElementChild\r\n\r\n    while (node) {\r\n        walkSkippingNestedComponents(node, callback, false)\r\n\r\n        node = node.nextElementSibling\r\n    }\r\n}\r\n\r\nexport function debounce(func, wait, immediate) {\r\n    var timeout;\r\n    return function () {\r\n        var context = this, args = arguments;\r\n        var later = function () {\r\n            timeout = null;\r\n            if (!immediate) func.apply(context, args);\r\n        };\r\n        var callNow = immediate && !timeout;\r\n        clearTimeout(timeout);\r\n        timeout = setTimeout(later, wait);\r\n        if (callNow) func.apply(context, args);\r\n    };\r\n};\r\n\r\nexport function onlyUnique(value, index, self) {\r\n    return self.indexOf(value) === index;\r\n}\r\n\r\nexport function saferEval(expression, dataContext, additionalHelperVariables = {}) {\r\n    return (new Function(['$data', ...Object.keys(additionalHelperVariables)], `var result; with($data) { result = ${expression} }; return result`))(\r\n        dataContext, ...Object.values(additionalHelperVariables)\r\n    )\r\n}\r\n\r\nexport function saferEvalNoReturn(expression, dataContext, additionalHelperVariables = {}) {\r\n    return (new Function(['$data', ...Object.keys(additionalHelperVariables)], `with($data) { ${expression} }`))(\r\n        dataContext, ...Object.values(additionalHelperVariables)\r\n    )\r\n}\r\n\r\nexport function isXAttr(attr) {\r\n    const name = replaceAtAndColonWithStandardSyntax(attr.name)\r\n\r\n    const xAttrRE = /x-(on|bind|data|text|html|model|if|show|cloak|transition|ref)/\r\n\r\n    return xAttrRE.test(name)\r\n}\r\n\r\nexport function getXAttrs(el, type) {\r\n    return Array.from(el.attributes)\r\n        .filter(isXAttr)\r\n        .map(attr => {\r\n            const name = replaceAtAndColonWithStandardSyntax(attr.name)\r\n\r\n            const typeMatch = name.match(/x-(on|bind|data|text|html|model|if|show|cloak|transition|ref)/)\r\n            const valueMatch = name.match(/:([a-zA-Z\\-]+)/)\r\n            const modifiers = name.match(/\\.[^.\\]]+(?=[^\\]]*$)/g) || []\r\n\r\n            return {\r\n                type: typeMatch ? typeMatch[1] : null,\r\n                value: valueMatch ? valueMatch[1] : null,\r\n                modifiers: modifiers.map(i => i.replace('.', '')),\r\n                expression: attr.value,\r\n            }\r\n        })\r\n        .filter(i => {\r\n            // If no type is passed in for filtering, bypassfilter\r\n            if (! type) return true\r\n\r\n            return i.type === type\r\n        })\r\n}\r\n\r\nexport function replaceAtAndColonWithStandardSyntax(name) {\r\n    if (name.startsWith('@')) {\r\n        return name.replace('@', 'x-on:')\r\n    } else if (name.startsWith(':')) {\r\n        return name.replace(':', 'x-bind:')\r\n    }\r\n\r\n    return name\r\n}\r\n\r\nexport function transitionIn(el, callback, forceSkip = false) {\r\n    if (forceSkip) callback()\r\n\r\n    const attrs = getXAttrs(el, 'transition')\r\n\r\n    if (attrs.length < 1) callback()\r\n\r\n    const enter = (attrs.find(i => i.value === 'enter') || { expression: '' }).expression.split(' ').filter(i => i !== '')\r\n    const enterStart = (attrs.find(i => i.value === 'enter-start') || { expression: '' }).expression.split(' ').filter(i => i !== '')\r\n    const enterEnd = (attrs.find(i => i.value === 'enter-end') || { expression: '' }).expression.split(' ').filter(i => i !== '')\r\n\r\n    transition(el, enter, enterStart, enterEnd, callback, () => {})\r\n}\r\n\r\nexport function transitionOut(el, callback, forceSkip = false) {\r\n    if (forceSkip) callback()\r\n\r\n    const attrs = getXAttrs(el, 'transition')\r\n\r\n    if (attrs.length < 1) callback()\r\n\r\n    const leave = (attrs.find(i => i.value === 'leave') || { expression: '' }).expression.split(' ').filter(i => i !== '')\r\n    const leaveStart = (attrs.find(i => i.value === 'leave-start') || { expression: '' }).expression.split(' ').filter(i => i !== '')\r\n    const leaveEnd = (attrs.find(i => i.value === 'leave-end') || { expression: '' }).expression.split(' ').filter(i => i !== '')\r\n\r\n    transition(el, leave, leaveStart, leaveEnd, () => {}, callback)\r\n}\r\n\r\nexport function transition(el, classesDuring, classesStart, classesEnd, hook1, hook2) {\r\n    el.classList.add(...classesStart)\r\n    el.classList.add(...classesDuring)\r\n\r\n    requestAnimationFrame(() => {\r\n        const duration = Number(getComputedStyle(el).transitionDuration.replace('s', '')) * 1000\r\n\r\n        hook1()\r\n\r\n        requestAnimationFrame(() => {\r\n            el.classList.remove(...classesStart)\r\n            el.classList.add(...classesEnd)\r\n\r\n            setTimeout(() => {\r\n                hook2()\r\n\r\n                // Adding an \"isConnected\" check, in case the callback\r\n                // removed the element from the DOM.\r\n                if (el.isConnected) {\r\n                    el.classList.remove(...classesDuring)\r\n                    el.classList.remove(...classesEnd)\r\n                }\r\n            }, duration);\r\n        })\r\n    });\r\n}\r\n","import { walkSkippingNestedComponents, kebabCase, saferEval, saferEvalNoReturn, getXAttrs, debounce, transitionIn, transitionOut } from './utils'\r\n\r\nexport default class Component {\r\n    constructor(el) {\r\n        this.el = el\r\n\r\n        // For $nextTick().\r\n        this.tickStack = []\r\n        this.collectingTickCallbacks = false\r\n\r\n        const rawData = saferEval(this.el.getAttribute('x-data'), {})\r\n\r\n        rawData.$refs =  this.getRefsProxy()\r\n\r\n        rawData.$nextTick =  (callback) => {\r\n            this.delayRunByATick(callback)\r\n        }\r\n\r\n        this.runXInit(this.el.getAttribute('x-init'), rawData)\r\n\r\n        this.data = this.wrapDataInObservable(rawData)\r\n\r\n        this.initializeElements()\r\n\r\n        this.listenForNewElementsToInitialize()\r\n    }\r\n\r\n    delayRunByATick(callback) {\r\n        if (this.collectingTickCallbacks) {\r\n            this.tickStack.push(callback)\r\n        } else {\r\n            callback()\r\n        }\r\n    }\r\n\r\n    startTick() {\r\n        this.collectingTickCallbacks = true\r\n    }\r\n\r\n    clearAndEndTick() {\r\n        this.tickStack.forEach(callable => callable())\r\n        this.tickStack = []\r\n\r\n        this.collectingTickCallbacks = false\r\n    }\r\n\r\n    runXInit(initExpression, rawData) {\r\n        initExpression && saferEvalNoReturn(initExpression, rawData)\r\n    }\r\n\r\n    wrapDataInObservable(data) {\r\n        this.concernedData = []\r\n\r\n        var self = this\r\n\r\n        const proxyHandler = keyPrefix => ({\r\n            set(obj, property, value) {\r\n                const propertyName = keyPrefix ? `${keyPrefix}.${property}` : property\r\n\r\n                const setWasSuccessful = Reflect.set(obj, property, value)\r\n\r\n                if (self.concernedData.indexOf(propertyName) === -1) {\r\n                    self.concernedData.push(propertyName)\r\n                }\r\n\r\n                self.refresh()\r\n\r\n                return setWasSuccessful\r\n            },\r\n            get(target, key) {\r\n                if (key === 'isProxy') return true\r\n\r\n                // If the property we are trying to get is a proxy, just return it.\r\n                if (target[key] && target[key].isProxy) return target[key]\r\n\r\n                if (typeof target[key] === 'object' && target[key] !== null) {\r\n                    const propertyName = keyPrefix ? `${keyPrefix}.${key}` : key\r\n\r\n                    return new Proxy(target[key], proxyHandler(propertyName))\r\n                }\r\n\r\n                return target[key]\r\n            }\r\n        })\r\n\r\n        return new Proxy(data, proxyHandler())\r\n    }\r\n\r\n    initializeElements() {\r\n        walkSkippingNestedComponents(this.el, el => {\r\n            this.initializeElement(el)\r\n        })\r\n    }\r\n\r\n    initializeElement(el) {\r\n        getXAttrs(el).forEach(({ type, value, modifiers, expression }) => {\r\n            switch (type) {\r\n                case 'on':\r\n                    var event = value\r\n                    this.registerListener(el, event, modifiers, expression)\r\n                    break;\r\n\r\n                case 'model':\r\n                    // If the element we are binding to is a select, a radio, or checkbox\r\n                    // we'll listen for the change event instead of the \"input\" event.\r\n                    var event = (el.tagName.toLowerCase() === 'select')\r\n                        || ['checkbox', 'radio'].includes(el.type)\r\n                        || modifiers.includes('lazy')\r\n                        ? 'change' : 'input'\r\n\r\n                    const listenerExpression = this.generateExpressionForXModelListener(el, modifiers, expression)\r\n\r\n                    this.registerListener(el, event, modifiers, listenerExpression)\r\n\r\n                    var attrName = 'value'\r\n                    var { output } = this.evaluateReturnExpression(expression)\r\n                    this.updateAttributeValue(el, attrName, output)\r\n                    break;\r\n\r\n                case 'bind':\r\n                    var attrName = value\r\n                    var { output } = this.evaluateReturnExpression(expression)\r\n                    this.updateAttributeValue(el, attrName, output)\r\n                    break;\r\n\r\n                case 'text':\r\n                    var { output } = this.evaluateReturnExpression(expression)\r\n                    this.updateTextValue(el, output)\r\n                    break;\r\n\r\n                case 'html':\r\n                    var { output } = this.evaluateReturnExpression(expression)\r\n                    this.updateHtmlValue(el, output)\r\n                    break;\r\n\r\n                case 'show':\r\n                    var { output } = this.evaluateReturnExpression(expression)\r\n                    this.updateVisibility(el, output, true)\r\n                    break;\r\n\r\n                case 'if':\r\n                    var { output } = this.evaluateReturnExpression(expression)\r\n                    this.updatePresence(el, output)\r\n                    break;\r\n\r\n                case 'cloak':\r\n                    el.removeAttribute('x-cloak')\r\n                    break;\r\n\r\n                default:\r\n                    break;\r\n            }\r\n        })\r\n    }\r\n\r\n    listenForNewElementsToInitialize() {\r\n        const targetNode = this.el\r\n\r\n        const observerOptions = {\r\n            childList: true,\r\n            attributes: true,\r\n            subtree: true,\r\n        }\r\n\r\n        const observer = new MutationObserver((mutations) => {\r\n            for (let i=0; i < mutations.length; i++){\r\n                // Filter out mutations triggered from child components.\r\n                if (! mutations[i].target.closest('[x-data]').isSameNode(this.el)) return\r\n\r\n                if (mutations[i].type === 'attributes' && mutations[i].attributeName === 'x-data') {\r\n                    const rawData = saferEval(mutations[i].target.getAttribute('x-data'), {})\r\n\r\n                    Object.keys(rawData).forEach(key => {\r\n                        if (this.data[key] !== rawData[key]) {\r\n                            this.data[key] = rawData[key]\r\n                        }\r\n                    })\r\n                }\r\n\r\n                if (mutations[i].addedNodes.length > 0) {\r\n                    mutations[i].addedNodes.forEach(node => {\r\n                        if (node.nodeType !== 1) return\r\n\r\n                        if (node.matches('[x-data]')) return\r\n\r\n                        if (getXAttrs(node).length > 0) {\r\n                            this.initializeElement(node)\r\n                        }\r\n                    })\r\n                }\r\n              }\r\n        })\r\n\r\n        observer.observe(targetNode, observerOptions);\r\n    }\r\n\r\n    refresh() {\r\n        var self = this\r\n\r\n        const actionByDirectiveType = {\r\n            'model': ({el, output}) => { self.updateAttributeValue(el, 'value', output) },\r\n            'bind': ({el, attrName, output}) => { self.updateAttributeValue(el, attrName, output) },\r\n            'text': ({el, output}) => { self.updateTextValue(el, output) },\r\n            'html': ({el, output}) => { self.updateHtmlValue(el, output) },\r\n            'show': ({el, output}) => { self.updateVisibility(el, output) },\r\n            'if': ({el, output}) => { self.updatePresence(el, output) },\r\n        }\r\n\r\n        const walkThenClearDependancyTracker = (rootEl, callback) => {\r\n            walkSkippingNestedComponents(rootEl, callback)\r\n\r\n            self.concernedData = []\r\n            self.clearAndEndTick()\r\n        }\r\n\r\n        this.startTick()\r\n\r\n        debounce(walkThenClearDependancyTracker, 5)(this.el, function (el) {\r\n            getXAttrs(el).forEach(({ type, value, expression }) => {\r\n                if (! actionByDirectiveType[type]) return\r\n\r\n                var { output, deps } = self.evaluateReturnExpression(expression)\r\n\r\n                if (self.concernedData.filter(i => deps.includes(i)).length > 0) {\r\n                    (actionByDirectiveType[type])({ el, attrName: value, output })\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    generateExpressionForXModelListener(el, modifiers, dataKey) {\r\n        var rightSideOfExpression = ''\r\n        if (el.type === 'checkbox') {\r\n            // If the data we are binding to is an array, toggle it's value inside the array.\r\n            if (Array.isArray(this.data[dataKey])) {\r\n                rightSideOfExpression = `$event.target.checked ? ${dataKey}.concat([$event.target.value]) : ${dataKey}.filter(i => i !== $event.target.value)`\r\n            } else {\r\n                rightSideOfExpression = `$event.target.checked`\r\n            }\r\n        } else if (el.tagName.toLowerCase() === 'select' && el.multiple) {\r\n            rightSideOfExpression = modifiers.includes('number')\r\n                ? 'Array.from($event.target.selectedOptions).map(option => { return parseFloat(option.value || option.text) })'\r\n                : 'Array.from($event.target.selectedOptions).map(option => { return option.value || option.text })'\r\n        } else {\r\n            rightSideOfExpression = modifiers.includes('number')\r\n                ? 'parseFloat($event.target.value)'\r\n                : (modifiers.includes('trim') ? '$event.target.value.trim()' : '$event.target.value')\r\n        }\r\n\r\n        if (el.type === 'radio') {\r\n            // Radio buttons only work properly when they share a name attribute.\r\n            // People might assume we take care of that for them, because\r\n            // they already set a shared \"x-model\" attribute.\r\n            if (! el.hasAttribute('name')) el.setAttribute('name', dataKey)\r\n        }\r\n\r\n        return `${dataKey} = ${rightSideOfExpression}`\r\n    }\r\n\r\n    registerListener(el, event, modifiers, expression) {\r\n        if (modifiers.includes('away')) {\r\n            const handler = e => {\r\n                // Don't do anything if the click came form the element or within it.\r\n                if (el.contains(e.target)) return\r\n\r\n                // Don't do anything if this element isn't currently visible.\r\n                if (el.offsetWidth < 1 && el.offsetHeight < 1) return\r\n\r\n                // Now that we are sure the element is visible, AND the click\r\n                // is from outside it, let's run the expression.\r\n                this.runListenerHandler(expression, e)\r\n\r\n                if (modifiers.includes('once')) {\r\n                    document.removeEventListener(event, handler)\r\n                }\r\n            }\r\n\r\n            // Listen for this event at the root level.\r\n            document.addEventListener(event, handler)\r\n        } else {\r\n            const listenerTarget = modifiers.includes('window')\r\n                ? window : (modifiers.includes('document') ? document : el)\r\n\r\n            const handler = e => {\r\n                const modifiersWithoutWindowOrDocument = modifiers\r\n                    .filter(i => i !== 'window').filter(i => i !== 'document')\r\n\r\n                if (event === 'keydown' && modifiersWithoutWindowOrDocument.length > 0 && ! modifiersWithoutWindowOrDocument.includes(kebabCase(e.key))) return\r\n\r\n                if (modifiers.includes('prevent')) e.preventDefault()\r\n                if (modifiers.includes('stop')) e.stopPropagation()\r\n\r\n                this.runListenerHandler(expression, e)\r\n\r\n                if (modifiers.includes('once')) {\r\n                    listenerTarget.removeEventListener(event, handler)\r\n                }\r\n            }\r\n\r\n            listenerTarget.addEventListener(event, handler)\r\n        }\r\n    }\r\n\r\n    runListenerHandler(expression, e) {\r\n        this.evaluateCommandExpression(expression, {\r\n            '$event': e,\r\n        })\r\n    }\r\n\r\n    evaluateReturnExpression(expression) {\r\n        var affectedDataKeys = []\r\n\r\n        const proxyHandler = prefix => ({\r\n            get(object, prop) {\r\n                // Sometimes non-proxyable values are accessed. These are of type \"symbol\".\r\n                // We can ignore them.\r\n                if (typeof prop === 'symbol') return\r\n\r\n                const propertyName = prefix ? `${prefix}.${prop}` : prop\r\n\r\n                // If we are accessing an object prop, we'll make this proxy recursive to build\r\n                // a nested dependancy key.\r\n                if (typeof object[prop] === 'object' && object[prop] !== null && ! Array.isArray(object[prop])) {\r\n                    return new Proxy(object[prop], proxyHandler(propertyName))\r\n                }\r\n\r\n                affectedDataKeys.push(propertyName)\r\n\r\n                return object[prop]\r\n            }\r\n        })\r\n\r\n        const proxiedData = new Proxy(this.data, proxyHandler())\r\n\r\n        const result = saferEval(expression, proxiedData)\r\n\r\n        return {\r\n            output: result,\r\n            deps: affectedDataKeys\r\n        }\r\n    }\r\n\r\n    evaluateCommandExpression(expression, extraData) {\r\n        saferEvalNoReturn(expression, this.data, extraData)\r\n    }\r\n\r\n    updateTextValue(el, value) {\r\n        el.innerText = value\r\n    }\r\n\r\n    updateHtmlValue(el, value) {\r\n        el.innerHTML = value\r\n    }\r\n\r\n    updateVisibility(el, value, initialUpdate = false) {\r\n        if (! value) {\r\n            transitionOut(el, () => {\r\n                el.style.display = 'none'\r\n            }, initialUpdate)\r\n        } else {\r\n            transitionIn(el, () => {\r\n                if (el.style.length === 1 && el.style.display !== '') {\r\n                    el.removeAttribute('style')\r\n                } else {\r\n                    el.style.removeProperty('display')\r\n                }\r\n            }, initialUpdate)\r\n        }\r\n\r\n    }\r\n\r\n    updatePresence(el, expressionResult) {\r\n        if (el.nodeName.toLowerCase() !== 'template') console.warn(`Alpine: [x-if] directive should only be added to <template> tags.`)\r\n\r\n        const elementHasAlreadyBeenAdded = el.nextElementSibling && el.nextElementSibling.__x_inserted_me === true\r\n\r\n        if (expressionResult && ! elementHasAlreadyBeenAdded) {\r\n            const clone = document.importNode(el.content, true);\r\n\r\n            el.parentElement.insertBefore(clone, el.nextElementSibling)\r\n\r\n            el.nextElementSibling.__x_inserted_me = true\r\n\r\n            transitionIn(el.nextElementSibling, () => {})\r\n        } else if (! expressionResult && elementHasAlreadyBeenAdded) {\r\n            transitionOut(el.nextElementSibling, () => {\r\n                el.nextElementSibling.remove()\r\n            })\r\n        }\r\n    }\r\n\r\n    updateAttributeValue(el, attrName, value) {\r\n        if (attrName === 'value') {\r\n            if (el.type === 'radio') {\r\n                el.checked = el.value == value\r\n            } else if (el.type === 'checkbox') {\r\n                if (Array.isArray(value)) {\r\n                    // I'm purposely not using Array.includes here because it's\r\n                    // strict, and because of Numeric/String mis-casting, I\r\n                    // want the \"includes\" to be \"fuzzy\".\r\n                    let valueFound = false\r\n                    value.forEach(val => {\r\n                        if (val == el.value) {\r\n                            valueFound = true\r\n                        }\r\n                    })\r\n\r\n                    el.checked = valueFound\r\n                } else {\r\n                    el.checked = !! value\r\n                }\r\n            } else if (el.tagName === 'SELECT') {\r\n                this.updateSelect(el, value)\r\n            } else {\r\n                el.value = value\r\n            }\r\n        } else if (attrName === 'class') {\r\n            if (typeof value === 'string') {\r\n                el.setAttribute('class', value)\r\n            } else if (Array.isArray(value)) {\r\n                el.setAttribute('class', value.join(' '))\r\n            } else {\r\n                // Use the class object syntax that vue uses to toggle them.\r\n                Object.keys(value).forEach(classNames => {\r\n                    if (value[classNames]) {\r\n                        classNames.split(' ').forEach(className => el.classList.add(className))\r\n                    } else {\r\n                        classNames.split(' ').forEach(className => el.classList.remove(className))\r\n                    }\r\n                })\r\n            }\r\n        } else if (['disabled', 'readonly', 'required', 'checked', 'hidden'].includes(attrName)) {\r\n            // Boolean attributes have to be explicitly added and removed, not just set.\r\n            if (!! value) {\r\n                el.setAttribute(attrName, '')\r\n            } else {\r\n                el.removeAttribute(attrName)\r\n            }\r\n        } else {\r\n            el.setAttribute(attrName, value)\r\n        }\r\n    }\r\n\r\n    updateSelect(el, value) {\r\n        const arrayWrappedValue = [].concat(value).map(value => { return value + '' })\r\n\r\n        Array.from(el.options).forEach(option => {\r\n            option.selected = arrayWrappedValue.includes(option.value || option.text)\r\n        })\r\n    }\r\n\r\n    getRefsProxy() {\r\n        var self = this\r\n\r\n        // One of the goals of this is to not hold elements in memory, but rather re-evaluate\r\n        // the DOM when the system needs something from it. This way, the framework is flexible and\r\n        // friendly to outside DOM changes from libraries like Vue/Livewire.\r\n        // For this reason, I'm using an \"on-demand\" proxy to fake a \"$refs\" object.\r\n        return new Proxy({}, {\r\n            get(object, property) {\r\n                if (property === 'isProxy') return true\r\n\r\n                var ref\r\n\r\n                // We can't just query the DOM because it's hard to filter out refs in\r\n                // nested components.\r\n                walkSkippingNestedComponents(self.el, el => {\r\n                    if (el.hasAttribute('x-ref') && el.getAttribute('x-ref') === property) {\r\n                        ref = el\r\n                    }\r\n                })\r\n\r\n                return ref\r\n            }\r\n        })\r\n    }\r\n}\r\n","import Component from './component'\r\nimport { domReady, isTesting } from './utils'\r\n\r\nconst Alpine = {\r\n    start: async function () {\r\n        if (! isTesting()) {\r\n            await domReady()\r\n        }\r\n\r\n        this.discoverComponents(el => {\r\n            this.initializeComponent(el)\r\n        })\r\n\r\n        // It's easier and more performant to just support Turbolinks than listen\r\n        // to MutationOberserver mutations at the document level.\r\n        document.addEventListener(\"turbolinks:load\", () => {\r\n            this.discoverUninitializedComponents(el => {\r\n                this.initializeComponent(el)\r\n            })\r\n        })\r\n\r\n        this.listenForNewUninitializedComponentsAtRunTime(el => {\r\n            this.initializeComponent(el)\r\n        })\r\n    },\r\n\r\n    discoverComponents: function (callback) {\r\n        const rootEls = document.querySelectorAll('[x-data]');\r\n\r\n        rootEls.forEach(rootEl => {\r\n            callback(rootEl)\r\n        })\r\n    },\r\n\r\n    discoverUninitializedComponents: function (callback) {\r\n        const rootEls = document.querySelectorAll('[x-data]');\r\n\r\n        Array.from(rootEls)\r\n            .filter(el => el.__x === undefined)\r\n            .forEach(rootEl => {\r\n                callback(rootEl)\r\n            })\r\n    },\r\n\r\n    listenForNewUninitializedComponentsAtRunTime: function (callback) {\r\n        const targetNode = document.querySelector('body');\r\n\r\n        const observerOptions = {\r\n            childList: true,\r\n            attributes: true,\r\n            subtree: true,\r\n        }\r\n\r\n        const observer = new MutationObserver((mutations) => {\r\n            for (let i=0; i < mutations.length; i++){\r\n                if (mutations[i].addedNodes.length > 0) {\r\n                    mutations[i].addedNodes.forEach(node => {\r\n                        if (node.nodeType !== 1) return\r\n\r\n                        if (node.matches('[x-data]')) callback(node)\r\n                    })\r\n                }\r\n              }\r\n        })\r\n\r\n        observer.observe(targetNode, observerOptions)\r\n    },\r\n\r\n    initializeComponent: function (el) {\r\n        el.__x = new Component(el)\r\n    }\r\n}\r\n\r\nif (! isTesting()) {\r\n    window.Alpine = Alpine\r\n    window.Alpine.start()\r\n}\r\n\r\nexport default Alpine\r\n"],"names":["isTesting","navigator","userAgent","includes","walkSkippingNestedComponents","el","callback","isRoot","hasAttribute","node","firstElementChild","nextElementSibling","saferEval","expression","dataContext","additionalHelperVariables","Function","Object","keys","values","saferEvalNoReturn","isXAttr","attr","name","replaceAtAndColonWithStandardSyntax","test","getXAttrs","type","Array","from","attributes","filter","map","typeMatch","match","valueMatch","modifiers","value","i","replace","startsWith","transitionIn","forceSkip","attrs","length","transition","find","split","transitionOut","classesDuring","classesStart","classesEnd","hook1","hook2","classList","add","requestAnimationFrame","duration","Number","getComputedStyle","transitionDuration","remove","setTimeout","isConnected","Component","constructor","tickStack","collectingTickCallbacks","rawData","this","getAttribute","$refs","getRefsProxy","$nextTick","delayRunByATick","runXInit","data","wrapDataInObservable","initializeElements","listenForNewElementsToInitialize","push","startTick","clearAndEndTick","forEach","callable","initExpression","concernedData","self","proxyHandler","keyPrefix","set","obj","property","propertyName","setWasSuccessful","Reflect","indexOf","refresh","get","target","key","isProxy","Proxy","initializeElement","event","registerListener","tagName","toLowerCase","listenerExpression","generateExpressionForXModelListener","attrName","output","evaluateReturnExpression","updateAttributeValue","updateTextValue","updateHtmlValue","updateVisibility","updatePresence","removeAttribute","targetNode","MutationObserver","mutations","closest","isSameNode","attributeName","addedNodes","nodeType","matches","observe","childList","subtree","actionByDirectiveType","func","wait","immediate","timeout","rootEl","context","args","arguments","later","apply","callNow","clearTimeout","deps","dataKey","rightSideOfExpression","isArray","multiple","setAttribute","handler","e","contains","offsetWidth","offsetHeight","runListenerHandler","document","removeEventListener","addEventListener","listenerTarget","window","modifiersWithoutWindowOrDocument","preventDefault","stopPropagation","evaluateCommandExpression","affectedDataKeys","prefix","object","prop","extraData","innerText","innerHTML","initialUpdate","style","display","removeProperty","expressionResult","nodeName","console","warn","elementHasAlreadyBeenAdded","__x_inserted_me","clone","importNode","content","parentElement","insertBefore","checked","valueFound","val","updateSelect","join","classNames","className","arrayWrappedValue","concat","options","option","selected","text","ref","Alpine","start","async","Promise","resolve","readyState","discoverComponents","initializeComponent","discoverUninitializedComponents","listenForNewUninitializedComponentsAtRunTime","querySelectorAll","rootEls","undefined","__x","querySelector"],"mappings":"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"}