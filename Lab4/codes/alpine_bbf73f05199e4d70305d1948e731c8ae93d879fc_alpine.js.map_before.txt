<<<<<<< HEAD
{"version":3,"file":"alpine.js","sources":["../src/utils.js","../src/directives/for.js","../src/directives/bind.js","../src/directives/on.js","../src/directives/model.js","../src/component.js","../src/directives/show.js","../src/directives/if.js","../src/index.js"],"sourcesContent":["\r\n// Thanks @stimulus:\r\n// https://github.com/stimulusjs/stimulus/blob/master/packages/%40stimulus/core/src/application.ts\r\nexport function domReady() {\r\n    return new Promise(resolve => {\r\n        if (document.readyState == \"loading\") {\r\n            document.addEventListener(\"DOMContentLoaded\", resolve)\r\n        } else {\r\n            resolve()\r\n        }\r\n    })\r\n}\r\n\r\nexport function arrayUnique(array) {\r\n    var a = array.concat();\r\n    for(var i=0; i<a.length; ++i) {\r\n        for(var j=i+1; j<a.length; ++j) {\r\n            if(a[i] === a[j])\r\n                a.splice(j--, 1);\r\n        }\r\n    }\r\n\r\n    return a;\r\n}\r\n\r\nexport function isTesting() {\r\n    return navigator.userAgent, navigator.userAgent.includes(\"Node.js\")\r\n        || navigator.userAgent.includes(\"jsdom\")\r\n}\r\n\r\nexport function kebabCase(subject) {\r\n    return subject.replace(/([a-z])([A-Z])/g, '$1-$2').replace(/[_\\s]/, '-').toLowerCase()\r\n}\r\n\r\nexport function walk(el, callback) {\r\n    if (callback(el) === false) return\r\n\r\n    let node = el.firstElementChild\r\n\r\n    while (node) {\r\n        walk(node, callback)\r\n\r\n        node = node.nextElementSibling\r\n    }\r\n}\r\n\r\nexport function debounce(func, wait) {\r\n    var timeout\r\n    return function () {\r\n        var context = this, args = arguments\r\n        var later = function () {\r\n            timeout = null\r\n            func.apply(context, args)\r\n        }\r\n        clearTimeout(timeout)\r\n        timeout = setTimeout(later, wait)\r\n    }\r\n}\r\n\r\nexport function saferEval(expression, dataContext, additionalHelperVariables = {}) {\r\n    return (new Function(['$data', ...Object.keys(additionalHelperVariables)], `var result; with($data) { result = ${expression} }; return result`))(\r\n        dataContext, ...Object.values(additionalHelperVariables)\r\n    )\r\n}\r\n\r\nexport function saferEvalNoReturn(expression, dataContext, additionalHelperVariables = {}) {\r\n    return (new Function(['dataContext', ...Object.keys(additionalHelperVariables)], `with(dataContext) { ${expression} }`))(\r\n        dataContext, ...Object.values(additionalHelperVariables)\r\n    )\r\n}\r\n\r\nexport function isXAttr(attr) {\r\n    const name = replaceAtAndColonWithStandardSyntax(attr.name)\r\n\r\n    const xAttrRE = /x-(on|bind|data|text|html|model|if|for|show|cloak|transition|ref)/\r\n\r\n    return xAttrRE.test(name)\r\n}\r\n\r\nexport function getXAttrs(el, type) {\r\n    return Array.from(el.attributes)\r\n        .filter(isXAttr)\r\n        .map(attr => {\r\n            const name = replaceAtAndColonWithStandardSyntax(attr.name)\r\n\r\n            const typeMatch = name.match(/x-(on|bind|data|text|html|model|if|for|show|cloak|transition|ref)/)\r\n            const valueMatch = name.match(/:([a-zA-Z\\-:]+)/)\r\n            const modifiers = name.match(/\\.[^.\\]]+(?=[^\\]]*$)/g) || []\r\n\r\n            return {\r\n                type: typeMatch ? typeMatch[1] : null,\r\n                value: valueMatch ? valueMatch[1] : null,\r\n                modifiers: modifiers.map(i => i.replace('.', '')),\r\n                expression: attr.value,\r\n            }\r\n        })\r\n        .filter(i => {\r\n            // If no type is passed in for filtering, bypassfilter\r\n            if (! type) return true\r\n\r\n            return i.type === type\r\n        })\r\n}\r\n\r\nexport function replaceAtAndColonWithStandardSyntax(name) {\r\n    if (name.startsWith('@')) {\r\n        return name.replace('@', 'x-on:')\r\n    } else if (name.startsWith(':')) {\r\n        return name.replace(':', 'x-bind:')\r\n    }\r\n\r\n    return name\r\n}\r\n\r\nexport function transitionIn(el, callback, forceSkip = false) {\r\n    if (forceSkip) return callback()\r\n\r\n    const attrs = getXAttrs(el, 'transition')\r\n\r\n    if (attrs.length < 1) return callback()\r\n\r\n    const enter = (attrs.find(i => i.value === 'enter') || { expression: '' }).expression.split(' ').filter(i => i !== '')\r\n    const enterStart = (attrs.find(i => i.value === 'enter-start') || { expression: '' }).expression.split(' ').filter(i => i !== '')\r\n    const enterEnd = (attrs.find(i => i.value === 'enter-end') || { expression: '' }).expression.split(' ').filter(i => i !== '')\r\n\r\n    transition(el, enter, enterStart, enterEnd, callback, () => {})\r\n}\r\n\r\nexport function transitionOut(el, callback, forceSkip = false) {\r\n    if (forceSkip) return callback()\r\n\r\n    const attrs = getXAttrs(el, 'transition')\r\n\r\n    if (attrs.length < 1) return callback()\r\n\r\n    const leave = (attrs.find(i => i.value === 'leave') || { expression: '' }).expression.split(' ').filter(i => i !== '')\r\n    const leaveStart = (attrs.find(i => i.value === 'leave-start') || { expression: '' }).expression.split(' ').filter(i => i !== '')\r\n    const leaveEnd = (attrs.find(i => i.value === 'leave-end') || { expression: '' }).expression.split(' ').filter(i => i !== '')\r\n\r\n    transition(el, leave, leaveStart, leaveEnd, () => {}, callback)\r\n}\r\n\r\nexport function transition(el, classesDuring, classesStart, classesEnd, hook1, hook2) {\r\n    const originalClasses = el.__x_original_classes || []\r\n    el.classList.add(...classesStart)\r\n    el.classList.add(...classesDuring)\r\n\r\n    requestAnimationFrame(() => {\r\n        const duration = Number(getComputedStyle(el).transitionDuration.replace('s', '')) * 1000\r\n\r\n        hook1()\r\n\r\n        requestAnimationFrame(() => {\r\n            // Don't remove classes that were in the original class attribute.\r\n            el.classList.remove(...classesStart.filter(i => !originalClasses.includes(i)))\r\n            el.classList.add(...classesEnd)\r\n\r\n            setTimeout(() => {\r\n                hook2()\r\n\r\n                // Adding an \"isConnected\" check, in case the callback\r\n                // removed the element from the DOM.\r\n                if (el.isConnected) {\r\n                    el.classList.remove(...classesDuring.filter(i => !originalClasses.includes(i)))\r\n                    el.classList.remove(...classesEnd.filter(i => !originalClasses.includes(i)))\r\n                }\r\n            }, duration);\r\n        })\r\n    });\r\n}\r\n","import { transitionIn, transitionOut, getXAttrs } from '../utils'\r\n\r\nexport function handleForDirective(component, el, expression, initialUpdate) {\r\n    const { single, bunch, iterator1, iterator2 } = parseFor(expression)\r\n\r\n    var items = component.evaluateReturnExpression(el, bunch)\r\n\r\n    // As we walk the array, we'll also walk the DOM (updating/creating as we go).\r\n    var previousEl = el\r\n    items.forEach((i, index, group) => {\r\n        const currentKey = getThisIterationsKeyFromTemplateTag(component, el, single, iterator1, iterator2, i, index, group)\r\n        let currentEl = previousEl.nextElementSibling\r\n\r\n        // Let's check and see if the x-for has already generated an element last time it ran.\r\n        if (currentEl && currentEl.__x_for_key !== undefined) {\r\n            // If the the key's don't match.\r\n            if (currentEl.__x_for_key !== currentKey) {\r\n                // We'll look ahead to see if we can find it further down.\r\n                var tmpCurrentEl = currentEl\r\n                while(tmpCurrentEl) {\r\n                    // If we found it later in the DOM.\r\n                    if (tmpCurrentEl.__x_for_key === currentKey) {\r\n                        // Move it to where it's supposed to be in the DOM.\r\n                        el.parentElement.insertBefore(tmpCurrentEl, currentEl)\r\n                        // And set it as the current element as if we just created it.\r\n                        currentEl = tmpCurrentEl\r\n                        break\r\n                    }\r\n\r\n                    tmpCurrentEl = (tmpCurrentEl.nextElementSibling && tmpCurrentEl.nextElementSibling.__x_for_key !== undefined) ? tmpCurrentEl.nextElementSibling : false\r\n                }\r\n            }\r\n\r\n            // Temporarily remove the key indicator to allow the normal \"updateElements\" to work\r\n            delete currentEl.__x_for_key\r\n\r\n            currentEl.__x_for_alias = single\r\n            currentEl.__x_for_value = i\r\n            component.updateElements(currentEl, () => {\r\n                return {[currentEl.__x_for_alias]: currentEl.__x_for_value}\r\n            })\r\n        } else {\r\n            // There are no more .__x_for_key elements, meaning the page is first loading, OR, there are\r\n            // extra items in the array that need to be added as new elements.\r\n\r\n            // Let's create a clone from the template.\r\n            const clone = document.importNode(el.content, true);\r\n            // Insert it where we are in the DOM.\r\n            el.parentElement.insertBefore(clone, currentEl)\r\n\r\n            // Set it as the current element.\r\n            currentEl = previousEl.nextElementSibling\r\n\r\n            // And transition it in if it's not the first page load.\r\n            transitionIn(currentEl, () => {}, initialUpdate)\r\n\r\n            // Now, let's walk the new DOM node and initialize everything,\r\n            // including new nested components.\r\n            // Note we are resolving the \"extraData\" alias stuff from the dom element value so that it's\r\n            // always up to date for listener handlers that don't get re-registered.\r\n            currentEl.__x_for_alias = single\r\n            currentEl.__x_for_value = i\r\n            component.initializeElements(currentEl, () => {\r\n                return {[currentEl.__x_for_alias]: currentEl.__x_for_value}\r\n            })\r\n        }\r\n\r\n        currentEl.__x_for_key = currentKey\r\n\r\n        previousEl = currentEl\r\n    })\r\n\r\n    // Now that we've added/updated/moved all the elements for the current state of the loop.\r\n    // Anything left over, we can get rid of.\r\n    var nextElementFromOldLoop = (previousEl.nextElementSibling && previousEl.nextElementSibling.__x_for_key !== undefined) ? previousEl.nextElementSibling : false\r\n\r\n    while(nextElementFromOldLoop) {\r\n        const nextElementFromOldLoopImmutable = nextElementFromOldLoop\r\n        const nextSibling = nextElementFromOldLoop.nextElementSibling\r\n\r\n        transitionOut(nextElementFromOldLoop, () => {\r\n            nextElementFromOldLoopImmutable.remove()\r\n        })\r\n\r\n        nextElementFromOldLoop = (nextSibling && nextSibling.__x_for_key !== undefined) ? nextSibling : false\r\n    }\r\n}\r\n\r\n// This was taken from VueJS 2.* core. Thanks Vue!\r\nfunction parseFor (expression) {\r\n    const forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/\r\n    const stripParensRE = /^\\(|\\)$/g\r\n    const forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/\r\n\r\n    const inMatch = expression.match(forAliasRE)\r\n    if (! inMatch) return\r\n    const res = {}\r\n    res.bunch = inMatch[2].trim()\r\n    const single = inMatch[1].trim().replace(stripParensRE, '')\r\n    const iteratorMatch = single.match(forIteratorRE)\r\n    if (iteratorMatch) {\r\n        res.single = single.replace(forIteratorRE, '').trim()\r\n        res.iterator1 = iteratorMatch[1].trim()\r\n        if (iteratorMatch[2]) {\r\n            res.iterator2 = iteratorMatch[2].trim()\r\n        }\r\n    } else {\r\n        res.single = single\r\n    }\r\n    return res\r\n  }\r\n\r\nfunction getThisIterationsKeyFromTemplateTag(component, el, single, iterator1, iterator2, i, index, group) {\r\n    const keyAttr = getXAttrs(el, 'bind').filter(attr => attr.value === 'key')[0]\r\n\r\n    let keyAliases = { [single]: i }\r\n    if (iterator1) keyAliases[iterator1] = index\r\n    if (iterator2) keyAliases[iterator2] = group\r\n\r\n    return keyAttr\r\n        ? component.evaluateReturnExpression(el, keyAttr.expression, () => keyAliases)\r\n        : index\r\n}\r\n","import { arrayUnique } from '../utils'\r\n\r\nexport function handleAttributeBindingDirective(component, el, attrName, expression, extraVars) {\r\n    var value = component.evaluateReturnExpression(el, expression, extraVars)\r\n\r\n    if (attrName === 'value') {\r\n        // If nested model key is undefined, set the default value to empty string.\r\n        if (value === undefined && expression.match(/\\./).length) {\r\n            value = ''\r\n        }\r\n\r\n        if (el.type === 'radio') {\r\n            el.checked = el.value == value\r\n        } else if (el.type === 'checkbox') {\r\n            if (Array.isArray(value)) {\r\n                // I'm purposely not using Array.includes here because it's\r\n                // strict, and because of Numeric/String mis-casting, I\r\n                // want the \"includes\" to be \"fuzzy\".\r\n                let valueFound = false\r\n                value.forEach(val => {\r\n                    if (val == el.value) {\r\n                        valueFound = true\r\n                    }\r\n                })\r\n\r\n                el.checked = valueFound\r\n            } else {\r\n                el.checked = !! value\r\n            }\r\n        } else if (el.tagName === 'SELECT') {\r\n            updateSelect(el, value)\r\n        } else {\r\n            el.value = value\r\n        }\r\n    } else if (attrName === 'class') {\r\n        if (Array.isArray(value)) {\r\n            const originalClasses = el.__x_original_classes || []\r\n            el.setAttribute('class', arrayUnique(originalClasses.concat(value)).join(' '))\r\n        } else if (typeof value === 'object') {\r\n            Object.keys(value).forEach(classNames => {\r\n                if (value[classNames]) {\r\n                    classNames.split(' ').forEach(className => el.classList.add(className))\r\n                } else {\r\n                    classNames.split(' ').forEach(className => el.classList.remove(className))\r\n                }\r\n            })\r\n        } else {\r\n            const originalClasses = el.__x_original_classes || []\r\n            const newClasses = value.split(' ')\r\n            el.setAttribute('class', arrayUnique(originalClasses.concat(newClasses)).join(' '))\r\n        }\r\n    } else if (['disabled', 'readonly', 'required', 'checked', 'hidden'].includes(attrName)) {\r\n        // Boolean attributes have to be explicitly added and removed, not just set.\r\n        if (!! value) {\r\n            el.setAttribute(attrName, '')\r\n        } else {\r\n            el.removeAttribute(attrName)\r\n        }\r\n    } else {\r\n        el.setAttribute(attrName, value)\r\n    }\r\n}\r\n\r\nfunction updateSelect(el, value) {\r\n    const arrayWrappedValue = [].concat(value).map(value => { return value + '' })\r\n\r\n    Array.from(el.options).forEach(option => {\r\n        option.selected = arrayWrappedValue.includes(option.value || option.text)\r\n    })\r\n}\r\n","import { kebabCase } from '../utils'\r\n\r\nexport function registerListener(component, el, event, modifiers, expression, extraVars = {}) {\r\n    if (modifiers.includes('away')) {\r\n        const handler = e => {\r\n            // Don't do anything if the click came form the element or within it.\r\n            if (el.contains(e.target)) return\r\n\r\n            // Don't do anything if this element isn't currently visible.\r\n            if (el.offsetWidth < 1 && el.offsetHeight < 1) return\r\n\r\n            // Now that we are sure the element is visible, AND the click\r\n            // is from outside it, let's run the expression.\r\n            runListenerHandler(component, expression, e, extraVars)\r\n\r\n            if (modifiers.includes('once')) {\r\n                document.removeEventListener(event, handler)\r\n            }\r\n        }\r\n\r\n        // Listen for this event at the root level.\r\n        document.addEventListener(event, handler)\r\n    } else {\r\n        const listenerTarget = modifiers.includes('window')\r\n            ? window : (modifiers.includes('document') ? document : el)\r\n\r\n        const handler = e => {\r\n            if (isKeyEvent(event)) {\r\n                if (isListeningForASpecificKeyThatHasntBeenPressed(e, modifiers)) {\r\n                    return\r\n                }\r\n            }\r\n\r\n            if (modifiers.includes('prevent')) e.preventDefault()\r\n            if (modifiers.includes('stop')) e.stopPropagation()\r\n\r\n            runListenerHandler(component, expression, e, extraVars)\r\n\r\n            if (modifiers.includes('once')) {\r\n                listenerTarget.removeEventListener(event, handler)\r\n            }\r\n        }\r\n\r\n        listenerTarget.addEventListener(event, handler)\r\n    }\r\n}\r\n\r\nfunction runListenerHandler(component, expression, e, extraVars) {\r\n    component.evaluateCommandExpression(e.target, expression, () => {\r\n        return {...extraVars(), '$event': e}\r\n    })\r\n}\r\n\r\nfunction isKeyEvent(event) {\r\n    return ['keydown', 'keyup'].includes(event)\r\n}\r\n\r\nfunction isListeningForASpecificKeyThatHasntBeenPressed(e, modifiers) {\r\n    let keyModifiers = modifiers.filter(i => {\r\n        return ! ['window', 'document', 'prevent', 'stop'].includes(i)\r\n    })\r\n\r\n    // If no modifier is specified, we'll call it a press.\r\n    if (keyModifiers.length === 0) return false\r\n\r\n    // If one is passed, AND it matches the key pressed, we'll call it a press.\r\n    if (keyModifiers.length === 1 && keyModifiers[0] === keyToModifier(e.key)) return false\r\n\r\n    // The user is listening for key combinations.\r\n    const systemKeyModifiers = ['ctrl', 'shift', 'alt', 'meta', 'cmd', 'super']\r\n    const selectedSystemKeyModifiers = systemKeyModifiers.filter(modifier => keyModifiers.includes(modifier))\r\n\r\n    keyModifiers = keyModifiers.filter(i => ! selectedSystemKeyModifiers.includes(i))\r\n\r\n    if (selectedSystemKeyModifiers.length > 0) {\r\n        const activelyPressedKeyModifiers = selectedSystemKeyModifiers.filter(modifier => {\r\n            // Alias \"cmd\" and \"super\" to \"meta\"\r\n            if (modifier === 'cmd' || modifier === 'super') modifier = 'meta'\r\n\r\n            return e[`${modifier}Key`]\r\n        })\r\n\r\n        // If all the modifiers selected are pressed, ...\r\n        if (activelyPressedKeyModifiers.length === selectedSystemKeyModifiers.length) {\r\n            // AND the remaining key is pressed as well. It's a press.\r\n            if (keyModifiers[0] === keyToModifier(e.key)) return false\r\n        }\r\n    }\r\n\r\n    // We'll call it NOT a valid keypress.\r\n    return true\r\n}\r\n\r\nfunction keyToModifier(key) {\r\n    switch (key) {\r\n        case '/':\r\n            return 'slash'\r\n        case ' ':\r\n        case 'Spacebar':\r\n            return 'space'\r\n        default:\r\n            return kebabCase(key)\r\n    }\r\n}\r\n","import { registerListener } from './on'\r\n\r\nexport function registerModelListener(component, el, modifiers, expression, extraVars = {}) {\r\n    // If the element we are binding to is a select, a radio, or checkbox\r\n    // we'll listen for the change event instead of the \"input\" event.\r\n    var event = (el.tagName.toLowerCase() === 'select')\r\n        || ['checkbox', 'radio'].includes(el.type)\r\n        || modifiers.includes('lazy')\r\n        ? 'change' : 'input'\r\n\r\n    const listenerExpression = modelListenerExpression(component, el, modifiers, expression)\r\n\r\n    registerListener(component, el, event, modifiers, listenerExpression, extraVars)\r\n}\r\n\r\nfunction modelListenerExpression(component, el, modifiers, dataKey) {\r\n    var rightSideOfExpression = ''\r\n    if (el.type === 'checkbox') {\r\n        // If the data we are binding to is an array, toggle it's value inside the array.\r\n        if (Array.isArray(component.$data[dataKey])) {\r\n            rightSideOfExpression = `$event.target.checked ? ${dataKey}.concat([$event.target.value]) : ${dataKey}.filter(i => i !== $event.target.value)`\r\n        } else {\r\n            rightSideOfExpression = `$event.target.checked`\r\n        }\r\n    } else if (el.tagName.toLowerCase() === 'select' && el.multiple) {\r\n        rightSideOfExpression = modifiers.includes('number')\r\n            ? 'Array.from($event.target.selectedOptions).map(option => { return parseFloat(option.value || option.text) })'\r\n            : 'Array.from($event.target.selectedOptions).map(option => { return option.value || option.text })'\r\n    } else {\r\n        rightSideOfExpression = modifiers.includes('number')\r\n            ? 'parseFloat($event.target.value)'\r\n            : (modifiers.includes('trim') ? '$event.target.value.trim()' : '$event.target.value')\r\n    }\r\n\r\n    if (el.type === 'radio') {\r\n        // Radio buttons only work properly when they share a name attribute.\r\n        // People might assume we take care of that for them, because\r\n        // they already set a shared \"x-model\" attribute.\r\n        if (! el.hasAttribute('name')) el.setAttribute('name', dataKey)\r\n    }\r\n\r\n    return `${dataKey} = ${rightSideOfExpression}`\r\n}\r\n","import { walk, saferEval, saferEvalNoReturn, getXAttrs, debounce } from './utils'\r\nimport { handleForDirective } from './directives/for'\r\nimport { handleAttributeBindingDirective } from './directives/bind'\r\nimport { handleShowDirective } from './directives/show'\r\nimport { handleIfDirective } from './directives/if'\r\nimport { registerModelListener } from './directives/model'\r\nimport { registerListener } from './directives/on'\r\n\r\nexport default class Component {\r\n    constructor(el) {\r\n        this.$el = el\r\n\r\n        const dataAttr = this.$el.getAttribute('x-data')\r\n        const dataExpression = dataAttr === '' ? '{}' : dataAttr\r\n        const initExpression = this.$el.getAttribute('x-init')\r\n        const createdExpression = this.$el.getAttribute('x-created')\r\n        const mountedExpression = this.$el.getAttribute('x-mounted')\r\n\r\n        const unobservedData = saferEval(dataExpression, {})\r\n\r\n        // Add our magic properties to the original data for access.\r\n        unobservedData.$el = this.$el\r\n        unobservedData.$refs = this.getRefsProxy()\r\n\r\n        this.nextTickStack = []\r\n        unobservedData.$nextTick = (callback) => {\r\n            this.nextTickStack.push(callback)\r\n        }\r\n\r\n        // Construct a Proxy-based observable. This will be used to handle reactivity.\r\n        this.$data = this.wrapDataInObservable(unobservedData)\r\n\r\n        var initReturnedCallback\r\n        if (initExpression) {\r\n            // We want to allow data manipulation, but not trigger DOM updates just yet.\r\n            // We haven't even initialized the elements with their Alpine bindings. I mean c'mon.\r\n            this.pauseReactivity = true\r\n            initReturnedCallback = saferEval(this.$el.getAttribute('x-init'), this.$data)\r\n            this.pauseReactivity = false\r\n        }\r\n\r\n        if (createdExpression) {\r\n            console.warn('AlpineJS Warning: \"x-created\" is deprecated and will be removed in the next major version. Use \"x-init\" instead.')\r\n            this.pauseReactivity = true\r\n            saferEvalNoReturn(this.$el.getAttribute('x-created'), this.$data)\r\n            this.pauseReactivity = false\r\n        }\r\n\r\n        // Register all our listeners and set all our attribute bindings.\r\n        this.initializeElements(this.$el)\r\n\r\n        // Use mutation observer to detect new elements being added within this component at run-time.\r\n        // Alpine's just so darn flexible amirite?\r\n        this.listenForNewElementsToInitialize()\r\n\r\n        if (typeof initReturnedCallback === 'function') {\r\n            // Run the callback returned form the \"x-init\" hook to allow the user to do stuff after\r\n            // Alpine's got it's grubby little paws all over everything.\r\n            initReturnedCallback.call(this.$data)\r\n        }\r\n\r\n        if (mountedExpression) {\r\n            console.warn('AlpineJS Warning: \"x-mounted\" is deprecated and will be removed in the next major version. Use \"x-init\" (with a callback return) for the same behavior.')\r\n            // Run an \"x-mounted\" hook to allow the user to do stuff after\r\n            // Alpine's got it's grubby little paws all over everything.\r\n            saferEvalNoReturn(mountedExpression, this.$data)\r\n        }\r\n    }\r\n\r\n    wrapDataInObservable(data) {\r\n        var self = this\r\n\r\n        const proxyHandler = {\r\n            set(obj, property, value) {\r\n                const setWasSuccessful = Reflect.set(obj, property, value)\r\n\r\n                // Don't react to data changes for cases like the `x-created` hook.\r\n                if (self.pauseReactivity) return\r\n\r\n                debounce(() => {\r\n                    self.updateElements(self.$el)\r\n\r\n                    // Walk through the $nextTick stack and clear it as we go.\r\n                    while (self.nextTickStack.length > 0) {\r\n                        self.nextTickStack.shift()()\r\n                    }\r\n                }, 0)()\r\n\r\n                return setWasSuccessful\r\n            },\r\n            get(target, key) {\r\n                // If the property we are trying to get is a proxy, just return it.\r\n                // Like in the case of $refs\r\n                if (target[key] && target[key].isRefsProxy) return target[key]\r\n\r\n                // If property is a DOM node, just return it. (like in the case of this.$el)\r\n                if (target[key] && target[key] instanceof Node) return target[key]\r\n\r\n                // If accessing a nested property, retur this proxy recursively.\r\n                // This enables reactivity on setting nested data.\r\n                if (typeof target[key] === 'object' && target[key] !== null) {\r\n                    return new Proxy(target[key], proxyHandler)\r\n                }\r\n\r\n                // If none of the above, just return the flippin' value. Gawsh.\r\n                return target[key]\r\n            }\r\n        }\r\n\r\n        return new Proxy(data, proxyHandler)\r\n    }\r\n\r\n    walkAndSkipNestedComponents(el, callback, initializeComponentCallback = () => {}) {\r\n        walk(el, el => {\r\n            // We've hit a component.\r\n            if (el.hasAttribute('x-data')) {\r\n                // If it's not the current one.\r\n                if (! el.isSameNode(this.$el)) {\r\n                    // Initialize it if it's not.\r\n                    if (! el.__x) initializeComponentCallback(el)\r\n\r\n                    // Now we'll let that sub-component deal with itself.\r\n                    return false\r\n                }\r\n            }\r\n\r\n            return callback(el)\r\n        })\r\n    }\r\n\r\n    initializeElements(rootEl, extraVars = () => {}) {\r\n        this.walkAndSkipNestedComponents(rootEl, el => {\r\n            // Don't touch spawns from for loop\r\n            if (el.__x_for_key !== undefined) return false\r\n\r\n            this.initializeElement(el, extraVars)\r\n        }, el => {\r\n            el.__x = new Component(el)\r\n        })\r\n\r\n        // Walk through the $nextTick stack and clear it as we go.\r\n        while (this.nextTickStack.length > 0) {\r\n            this.nextTickStack.shift()()\r\n        }\r\n    }\r\n\r\n    initializeElement(el, extraVars) {\r\n        // To support class attribute merging, we have to know what the element's\r\n        // original class attribute looked like for reference.\r\n        if (el.hasAttribute('class') && getXAttrs(el).length > 0) {\r\n            el.__x_original_classes = el.getAttribute('class').split(' ')\r\n        }\r\n\r\n        this.registerListeners(el, extraVars)\r\n        this.resolveBoundAttributes(el, true, extraVars)\r\n    }\r\n\r\n    updateElements(rootEl, extraVars = () => {}) {\r\n        this.walkAndSkipNestedComponents(rootEl, el => {\r\n            // Don't touch spawns from for loop (and check if the root is actually a for loop in a parent, don't skip it.)\r\n            if (el.__x_for_key !== undefined && ! el.isSameNode(this.$el)) return false\r\n\r\n            this.updateElement(el, extraVars)\r\n        }, el => {\r\n            el.__x = new Component(el)\r\n        })\r\n    }\r\n\r\n    updateElement(el, extraVars) {\r\n        this.resolveBoundAttributes(el, false, extraVars)\r\n    }\r\n\r\n    registerListeners(el, extraVars) {\r\n        getXAttrs(el).forEach(({ type, value, modifiers, expression }) => {\r\n            switch (type) {\r\n                case 'on':\r\n                    registerListener(this, el, value, modifiers, expression, extraVars)\r\n                    break;\r\n\r\n                case 'model':\r\n                    registerModelListener(this, el, modifiers, expression, extraVars)\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        })\r\n    }\r\n\r\n    resolveBoundAttributes(el, initialUpdate = false, extraVars) {\r\n        getXAttrs(el).forEach(({ type, value, modifiers, expression }) => {\r\n            switch (type) {\r\n                case 'model':\r\n                    handleAttributeBindingDirective(this, el, 'value', expression, extraVars)\r\n                    break;\r\n\r\n                case 'bind':\r\n                    // The :key binding on an x-for is special, ignore it.\r\n                    if (el.tagName.toLowerCase() === 'template' && value === 'key') return\r\n\r\n                    handleAttributeBindingDirective(this, el, value, expression, extraVars)\r\n                    break;\r\n\r\n                case 'text':\r\n                    var output = this.evaluateReturnExpression(el, expression, extraVars);\r\n\r\n                    // If nested model key is undefined, set the default value to empty string.\r\n                    if (output === undefined && expression.match(/\\./).length) {\r\n                        output = ''\r\n                    }\r\n\r\n                    el.innerText = output\r\n                    break;\r\n\r\n                case 'html':\r\n                    el.innerHTML = this.evaluateReturnExpression(el, expression, extraVars)\r\n                    break;\r\n\r\n                case 'show':\r\n                    var output = this.evaluateReturnExpression(el, expression, extraVars)\r\n\r\n                    handleShowDirective(el, output, initialUpdate)\r\n                    break;\r\n\r\n                case 'if':\r\n                    var output = this.evaluateReturnExpression(el, expression, extraVars)\r\n\r\n                    handleIfDirective(el, output, initialUpdate)\r\n                    break;\r\n\r\n                case 'for':\r\n                    handleForDirective(this, el, expression, initialUpdate)\r\n                    break;\r\n\r\n                case 'cloak':\r\n                    el.removeAttribute('x-cloak')\r\n                    break;\r\n\r\n                default:\r\n                    break;\r\n            }\r\n        })\r\n    }\r\n\r\n    evaluateReturnExpression(el, expression, extraVars = () => {}) {\r\n        return saferEval(expression, this.$data, {\r\n            ...extraVars(),\r\n            $dispatch: this.getDispatchFunction(el),\r\n        })\r\n    }\r\n\r\n    evaluateCommandExpression(el, expression, extraVars = () => {}) {\r\n        saferEvalNoReturn(expression, this.$data, {\r\n            ...extraVars(),\r\n            $dispatch: this.getDispatchFunction(el),\r\n        })\r\n    }\r\n\r\n    getDispatchFunction (el) {\r\n        return (event, detail = {}) => {\r\n            el.dispatchEvent(new CustomEvent(event, {\r\n                detail,\r\n                bubbles: true,\r\n            }))\r\n        }\r\n    }\r\n\r\n    listenForNewElementsToInitialize() {\r\n        const targetNode = this.$el\r\n\r\n        const observerOptions = {\r\n            childList: true,\r\n            attributes: true,\r\n            subtree: true,\r\n        }\r\n\r\n        const observer = new MutationObserver((mutations) => {\r\n            for (let i=0; i < mutations.length; i++){\r\n                // Filter out mutations triggered from child components.\r\n                const closestParentComponent = mutations[i].target.closest('[x-data]')\r\n                if (! (closestParentComponent && closestParentComponent.isSameNode(this.$el))) return\r\n\r\n                if (mutations[i].type === 'attributes' && mutations[i].attributeName === 'x-data') {\r\n                    const rawData = saferEval(mutations[i].target.getAttribute('x-data'), {})\r\n\r\n                    Object.keys(rawData).forEach(key => {\r\n                        if (this.$data[key] !== rawData[key]) {\r\n                            this.$data[key] = rawData[key]\r\n                        }\r\n                    })\r\n                }\r\n\r\n                if (mutations[i].addedNodes.length > 0) {\r\n                    mutations[i].addedNodes.forEach(node => {\r\n                        if (node.nodeType !== 1) return\r\n\r\n                        if (node.matches('[x-data]')) {\r\n                            node.__x = new Component(node)\r\n                            return\r\n                        }\r\n\r\n                        this.initializeElements(node)\r\n                    })\r\n                }\r\n              }\r\n        })\r\n\r\n        observer.observe(targetNode, observerOptions);\r\n    }\r\n\r\n    getRefsProxy() {\r\n        var self = this\r\n\r\n        var refObj = {}\r\n\r\n        // If we are in IE, since the polyfill needs all properties to be defined before building the proxy,\r\n        // we just loop on the element, look for any x-ref and create a the property on a fake object.\r\n        // We don't need to put a real value since it will be resolved by the proxy class\r\n        if (window.document.documentMode) {\r\n            this.walkAndSkipNestedComponents(self.$el, el => {\r\n                if (el.hasAttribute('x-ref')) {\r\n                    refObj.el = true\r\n                }\r\n            })\r\n        }\r\n\r\n        // One of the goals of this is to not hold elements in memory, but rather re-evaluate\r\n        // the DOM when the system needs something from it. This way, the framework is flexible and\r\n        // friendly to outside DOM changes from libraries like Vue/Livewire.\r\n        // For this reason, I'm using an \"on-demand\" proxy to fake a \"$refs\" object.\r\n        return new Proxy(refObj, {\r\n            get(object, property) {\r\n                if (property === 'isRefsProxy') return true\r\n\r\n                var ref\r\n\r\n                // We can't just query the DOM because it's hard to filter out refs in\r\n                // nested components.\r\n                self.walkAndSkipNestedComponents(self.$el, el => {\r\n                    if (el.hasAttribute('x-ref') && el.getAttribute('x-ref') === property) {\r\n                        ref = el\r\n                    }\r\n                })\r\n\r\n                return ref\r\n            }\r\n        })\r\n    }\r\n}\r\n","import { transitionIn, transitionOut } from '../utils'\r\n\r\nexport function handleShowDirective(el, value, initialUpdate = false) {\r\n    if (! value) {\r\n        transitionOut(el, () => {\r\n            el.style.display = 'none'\r\n        }, initialUpdate)\r\n    } else {\r\n        transitionIn(el, () => {\r\n            if (el.style.length === 1 && el.style.display !== '') {\r\n                el.removeAttribute('style')\r\n            } else {\r\n                el.style.removeProperty('display')\r\n            }\r\n        }, initialUpdate)\r\n    }\r\n}\r\n","import { transitionIn, transitionOut } from '../utils'\r\n\r\nexport function handleIfDirective(el, expressionResult, initialUpdate) {\r\n    if (el.nodeName.toLowerCase() !== 'template') console.warn(`Alpine: [x-if] directive should only be added to <template> tags. See https://github.com/alpinejs/alpine#x-if`)\r\n\r\n    const elementHasAlreadyBeenAdded = el.nextElementSibling && el.nextElementSibling.__x_inserted_me === true\r\n\r\n    if (expressionResult && ! elementHasAlreadyBeenAdded) {\r\n        const clone = document.importNode(el.content, true);\r\n\r\n        el.parentElement.insertBefore(clone, el.nextElementSibling)\r\n\r\n        el.nextElementSibling.__x_inserted_me = true\r\n\r\n        transitionIn(el.nextElementSibling, () => {}, initialUpdate)\r\n    } else if (! expressionResult && elementHasAlreadyBeenAdded) {\r\n        transitionOut(el.nextElementSibling, () => {\r\n            el.nextElementSibling.remove()\r\n        }, initialUpdate)\r\n    }\r\n}\r\n","import Component from './component'\r\nimport { domReady, isTesting } from './utils'\r\n\r\nconst Alpine = {\r\n    start: async function () {\r\n        if (! isTesting()) {\r\n            await domReady()\r\n        }\r\n\r\n        this.discoverComponents(el => {\r\n            this.initializeComponent(el)\r\n        })\r\n\r\n        // It's easier and more performant to just support Turbolinks than listen\r\n        // to MutationOberserver mutations at the document level.\r\n        document.addEventListener(\"turbolinks:load\", () => {\r\n            this.discoverUninitializedComponents(el => {\r\n                this.initializeComponent(el)\r\n            })\r\n        })\r\n\r\n        this.listenForNewUninitializedComponentsAtRunTime(el => {\r\n            this.initializeComponent(el)\r\n        })\r\n    },\r\n\r\n    discoverComponents: function (callback) {\r\n        const rootEls = document.querySelectorAll('[x-data]');\r\n\r\n        rootEls.forEach(rootEl => {\r\n            callback(rootEl)\r\n        })\r\n    },\r\n\r\n    discoverUninitializedComponents: function (callback, el = null) {\r\n        const rootEls = (el || document).querySelectorAll('[x-data]');\r\n\r\n        Array.from(rootEls)\r\n            .filter(el => el.__x === undefined)\r\n            .forEach(rootEl => {\r\n                callback(rootEl)\r\n            })\r\n    },\r\n\r\n    listenForNewUninitializedComponentsAtRunTime: function (callback) {\r\n        const targetNode = document.querySelector('body');\r\n\r\n        const observerOptions = {\r\n            childList: true,\r\n            attributes: true,\r\n            subtree: true,\r\n        }\r\n\r\n        const observer = new MutationObserver((mutations) => {\r\n            for (let i=0; i < mutations.length; i++){\r\n                if (mutations[i].addedNodes.length > 0) {\r\n                    mutations[i].addedNodes.forEach(node => {\r\n                        // Discard non-element nodes (like line-breaks)\r\n                        if (node.nodeType !== 1) return\r\n\r\n                        // Discard any changes happening within an existing component.\r\n                        // They will take care of themselves.\r\n                        if (node.parentElement.closest('[x-data]')) return\r\n\r\n                        this.discoverUninitializedComponents((el) => {\r\n                            this.initializeComponent(el)\r\n                        }, node.parentElement)\r\n                    })\r\n                }\r\n              }\r\n        })\r\n\r\n        observer.observe(targetNode, observerOptions)\r\n    },\r\n\r\n    initializeComponent: function (el) {\r\n        if (! el.__x) {\r\n            el.__x = new Component(el)\r\n        }\r\n    }\r\n}\r\n\r\nif (! isTesting()) {\r\n    window.Alpine = Alpine\r\n    window.Alpine.start()\r\n}\r\n\r\nexport default Alpine\r\n"],"names":["arrayUnique","array","a","concat","i","length","j","splice","isTesting","navigator","userAgent","includes","saferEval","expression","dataContext","additionalHelperVariables","Function","Object","keys","values","saferEvalNoReturn","isXAttr","attr","name","replaceAtAndColonWithStandardSyntax","test","getXAttrs","el","type","Array","from","attributes","filter","map","typeMatch","match","valueMatch","modifiers","value","replace","startsWith","transitionIn","callback","forceSkip","attrs","transition","find","split","transitionOut","classesDuring","classesStart","classesEnd","hook1","hook2","originalClasses","__x_original_classes","classList","add","requestAnimationFrame","duration","Number","getComputedStyle","transitionDuration","remove","setTimeout","isConnected","handleForDirective","component","initialUpdate","single","bunch","iterator1","iterator2","forIteratorRE","inMatch","res","trim","iteratorMatch","parseFor","items","evaluateReturnExpression","previousEl","forEach","index","group","currentKey","keyAttr","keyAliases","getThisIterationsKeyFromTemplateTag","currentEl","nextElementSibling","undefined","__x_for_key","tmpCurrentEl","parentElement","insertBefore","__x_for_alias","__x_for_value","updateElements","clone","document","importNode","content","initializeElements","nextElementFromOldLoop","nextElementFromOldLoopImmutable","nextSibling","handleAttributeBindingDirective","attrName","extraVars","checked","isArray","valueFound","val","tagName","arrayWrappedValue","options","option","selected","text","updateSelect","setAttribute","join","classNames","className","newClasses","removeAttribute","registerListener","event","handler","e","contains","target","offsetWidth","offsetHeight","runListenerHandler","removeEventListener","addEventListener","listenerTarget","window","isKeyEvent","keyModifiers","keyToModifier","key","selectedSystemKeyModifiers","modifier","isListeningForASpecificKeyThatHasntBeenPressed","preventDefault","stopPropagation","evaluateCommandExpression","toLowerCase","registerModelListener","listenerExpression","dataKey","rightSideOfExpression","$data","multiple","hasAttribute","modelListenerExpression","Component","constructor","$el","dataAttr","this","getAttribute","dataExpression","initExpression","createdExpression","mountedExpression","unobservedData","initReturnedCallback","$refs","getRefsProxy","nextTickStack","$nextTick","push","wrapDataInObservable","pauseReactivity","console","warn","listenForNewElementsToInitialize","call","data","self","proxyHandler","set","obj","property","setWasSuccessful","Reflect","func","wait","timeout","shift","context","args","arguments","later","apply","clearTimeout","get","isRefsProxy","Node","Proxy","walkAndSkipNestedComponents","initializeComponentCallback","walk","node","firstElementChild","isSameNode","__x","rootEl","initializeElement","registerListeners","resolveBoundAttributes","updateElement","output","innerText","innerHTML","style","display","removeProperty","handleShowDirective","expressionResult","nodeName","elementHasAlreadyBeenAdded","__x_inserted_me","handleIfDirective","$dispatch","getDispatchFunction","detail","dispatchEvent","CustomEvent","bubbles","targetNode","MutationObserver","mutations","closestParentComponent","closest","attributeName","rawData","addedNodes","nodeType","matches","observe","childList","subtree","refObj","documentMode","object","ref","Alpine","start","async","Promise","resolve","readyState","discoverComponents","initializeComponent","discoverUninitializedComponents","listenForNewUninitializedComponentsAtRunTime","querySelectorAll","rootEls","querySelector"],"mappings":"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"}
=======
{"version":3,"file":"alpine.js","sources":["../src/utils.js","../src/directives/for.js","../src/directives/bind.js","../src/directives/on.js","../src/directives/model.js","../src/component.js","../src/directives/show.js","../src/directives/if.js","../src/index.js"],"sourcesContent":["\n// Thanks @stimulus:\n// https://github.com/stimulusjs/stimulus/blob/master/packages/%40stimulus/core/src/application.ts\nexport function domReady() {\n    return new Promise(resolve => {\n        if (document.readyState == \"loading\") {\n            document.addEventListener(\"DOMContentLoaded\", resolve)\n        } else {\n            resolve()\n        }\n    })\n}\n\nexport function arrayUnique(array) {\n    var a = array.concat();\n    for(var i=0; i<a.length; ++i) {\n        for(var j=i+1; j<a.length; ++j) {\n            if(a[i] === a[j])\n                a.splice(j--, 1);\n        }\n    }\n\n    return a;\n}\n\nexport function isTesting() {\n    return navigator.userAgent, navigator.userAgent.includes(\"Node.js\")\n        || navigator.userAgent.includes(\"jsdom\")\n}\n\nexport function kebabCase(subject) {\n    return subject.replace(/([a-z])([A-Z])/g, '$1-$2').replace(/[_\\s]/, '-').toLowerCase()\n}\n\nexport function walk(el, callback) {\n    if (callback(el) === false) return\n\n    let node = el.firstElementChild\n\n    while (node) {\n        walk(node, callback)\n\n        node = node.nextElementSibling\n    }\n}\n\nexport function debounce(func, wait) {\n    var timeout\n    return function () {\n        var context = this, args = arguments\n        var later = function () {\n            timeout = null\n            func.apply(context, args)\n        }\n        clearTimeout(timeout)\n        timeout = setTimeout(later, wait)\n    }\n}\n\nexport function saferEval(expression, dataContext, additionalHelperVariables = {}) {\n    return (new Function(['$data', ...Object.keys(additionalHelperVariables)], `var result; with($data) { result = ${expression} }; return result`))(\n        dataContext, ...Object.values(additionalHelperVariables)\n    )\n}\n\nexport function saferEvalNoReturn(expression, dataContext, additionalHelperVariables = {}) {\n    return (new Function(['dataContext', ...Object.keys(additionalHelperVariables)], `with(dataContext) { ${expression} }`))(\n        dataContext, ...Object.values(additionalHelperVariables)\n    )\n}\n\nexport function isXAttr(attr) {\n    const name = replaceAtAndColonWithStandardSyntax(attr.name)\n\n    const xAttrRE = /x-(on|bind|data|text|html|model|if|for|show|cloak|transition|ref)/\n\n    return xAttrRE.test(name)\n}\n\nexport function getXAttrs(el, type) {\n    return Array.from(el.attributes)\n        .filter(isXAttr)\n        .map(attr => {\n            const name = replaceAtAndColonWithStandardSyntax(attr.name)\n\n            const typeMatch = name.match(/x-(on|bind|data|text|html|model|if|for|show|cloak|transition|ref)/)\n            const valueMatch = name.match(/:([a-zA-Z\\-:]+)/)\n            const modifiers = name.match(/\\.[^.\\]]+(?=[^\\]]*$)/g) || []\n\n            return {\n                type: typeMatch ? typeMatch[1] : null,\n                value: valueMatch ? valueMatch[1] : null,\n                modifiers: modifiers.map(i => i.replace('.', '')),\n                expression: attr.value,\n            }\n        })\n        .filter(i => {\n            // If no type is passed in for filtering, bypassfilter\n            if (! type) return true\n\n            return i.type === type\n        })\n}\n\nexport function replaceAtAndColonWithStandardSyntax(name) {\n    if (name.startsWith('@')) {\n        return name.replace('@', 'x-on:')\n    } else if (name.startsWith(':')) {\n        return name.replace(':', 'x-bind:')\n    }\n\n    return name\n}\n\nexport function transitionIn(el, callback, forceSkip = false) {\n    if (forceSkip) return callback()\n\n    const attrs = getXAttrs(el, 'transition')\n\n    if (attrs.length < 1) return callback()\n\n    const enter = (attrs.find(i => i.value === 'enter') || { expression: '' }).expression.split(' ').filter(i => i !== '')\n    const enterStart = (attrs.find(i => i.value === 'enter-start') || { expression: '' }).expression.split(' ').filter(i => i !== '')\n    const enterEnd = (attrs.find(i => i.value === 'enter-end') || { expression: '' }).expression.split(' ').filter(i => i !== '')\n\n    transition(el, enter, enterStart, enterEnd, callback, () => {})\n}\n\nexport function transitionOut(el, callback, forceSkip = false) {\n    if (forceSkip) return callback()\n\n    const attrs = getXAttrs(el, 'transition')\n\n    if (attrs.length < 1) return callback()\n\n    const leave = (attrs.find(i => i.value === 'leave') || { expression: '' }).expression.split(' ').filter(i => i !== '')\n    const leaveStart = (attrs.find(i => i.value === 'leave-start') || { expression: '' }).expression.split(' ').filter(i => i !== '')\n    const leaveEnd = (attrs.find(i => i.value === 'leave-end') || { expression: '' }).expression.split(' ').filter(i => i !== '')\n\n    transition(el, leave, leaveStart, leaveEnd, () => {}, callback)\n}\n\nexport function transition(el, classesDuring, classesStart, classesEnd, hook1, hook2) {\n    const originalClasses = el.__x_original_classes || []\n    el.classList.add(...classesStart)\n    el.classList.add(...classesDuring)\n\n    requestAnimationFrame(() => {\n        const duration = Number(getComputedStyle(el).transitionDuration.replace('s', '')) * 1000\n\n        hook1()\n\n        requestAnimationFrame(() => {\n            // Don't remove classes that were in the original class attribute.\n            el.classList.remove(...classesStart.filter(i => !originalClasses.includes(i)))\n            el.classList.add(...classesEnd)\n\n            setTimeout(() => {\n                hook2()\n\n                // Adding an \"isConnected\" check, in case the callback\n                // removed the element from the DOM.\n                if (el.isConnected) {\n                    el.classList.remove(...classesDuring.filter(i => !originalClasses.includes(i)))\n                    el.classList.remove(...classesEnd.filter(i => !originalClasses.includes(i)))\n                }\n            }, duration);\n        })\n    });\n}\n","import { transitionIn, transitionOut, getXAttrs } from '../utils'\n\nexport function handleForDirective(component, el, expression, initialUpdate) {\n    const { single, bunch, iterator1, iterator2 } = parseFor(expression)\n\n    var items = component.evaluateReturnExpression(el, bunch)\n\n    // As we walk the array, we'll also walk the DOM (updating/creating as we go).\n    var previousEl = el\n    items.forEach((i, index, group) => {\n        const currentKey = getThisIterationsKeyFromTemplateTag(component, el, single, iterator1, iterator2, i, index, group)\n        let currentEl = previousEl.nextElementSibling\n\n        // Let's check and see if the x-for has already generated an element last time it ran.\n        if (currentEl && currentEl.__x_for_key !== undefined) {\n            // If the the key's don't match.\n            if (currentEl.__x_for_key !== currentKey) {\n                // We'll look ahead to see if we can find it further down.\n                var tmpCurrentEl = currentEl\n                while(tmpCurrentEl) {\n                    // If we found it later in the DOM.\n                    if (tmpCurrentEl.__x_for_key === currentKey) {\n                        // Move it to where it's supposed to be in the DOM.\n                        el.parentElement.insertBefore(tmpCurrentEl, currentEl)\n                        // And set it as the current element as if we just created it.\n                        currentEl = tmpCurrentEl\n                        break\n                    }\n\n                    tmpCurrentEl = (tmpCurrentEl.nextElementSibling && tmpCurrentEl.nextElementSibling.__x_for_key !== undefined) ? tmpCurrentEl.nextElementSibling : false\n                }\n            }\n\n            // Temporarily remove the key indicator to allow the normal \"updateElements\" to work\n            delete currentEl.__x_for_key\n\n            currentEl.__x_for_alias = single\n            currentEl.__x_for_value = i\n            component.updateElements(currentEl, () => {\n                return {[currentEl.__x_for_alias]: currentEl.__x_for_value}\n            })\n        } else {\n            // There are no more .__x_for_key elements, meaning the page is first loading, OR, there are\n            // extra items in the array that need to be added as new elements.\n\n            // Let's create a clone from the template.\n            const clone = document.importNode(el.content, true);\n            // Insert it where we are in the DOM.\n            el.parentElement.insertBefore(clone, currentEl)\n\n            // Set it as the current element.\n            currentEl = previousEl.nextElementSibling\n\n            // And transition it in if it's not the first page load.\n            transitionIn(currentEl, () => {}, initialUpdate)\n\n            // Now, let's walk the new DOM node and initialize everything,\n            // including new nested components.\n            // Note we are resolving the \"extraData\" alias stuff from the dom element value so that it's\n            // always up to date for listener handlers that don't get re-registered.\n            currentEl.__x_for_alias = single\n            currentEl.__x_for_value = i\n            component.initializeElements(currentEl, () => {\n                return {[currentEl.__x_for_alias]: currentEl.__x_for_value}\n            })\n        }\n\n        currentEl.__x_for_key = currentKey\n\n        previousEl = currentEl\n    })\n\n    // Now that we've added/updated/moved all the elements for the current state of the loop.\n    // Anything left over, we can get rid of.\n    var nextElementFromOldLoop = (previousEl.nextElementSibling && previousEl.nextElementSibling.__x_for_key !== undefined) ? previousEl.nextElementSibling : false\n\n    while(nextElementFromOldLoop) {\n        const nextElementFromOldLoopImmutable = nextElementFromOldLoop\n        const nextSibling = nextElementFromOldLoop.nextElementSibling\n\n        transitionOut(nextElementFromOldLoop, () => {\n            nextElementFromOldLoopImmutable.remove()\n        })\n\n        nextElementFromOldLoop = (nextSibling && nextSibling.__x_for_key !== undefined) ? nextSibling : false\n    }\n}\n\n// This was taken from VueJS 2.* core. Thanks Vue!\nfunction parseFor (expression) {\n    const forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/\n    const stripParensRE = /^\\(|\\)$/g\n    const forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/\n\n    const inMatch = expression.match(forAliasRE)\n    if (! inMatch) return\n    const res = {}\n    res.bunch = inMatch[2].trim()\n    const single = inMatch[1].trim().replace(stripParensRE, '')\n    const iteratorMatch = single.match(forIteratorRE)\n    if (iteratorMatch) {\n        res.single = single.replace(forIteratorRE, '').trim()\n        res.iterator1 = iteratorMatch[1].trim()\n        if (iteratorMatch[2]) {\n            res.iterator2 = iteratorMatch[2].trim()\n        }\n    } else {\n        res.single = single\n    }\n    return res\n  }\n\nfunction getThisIterationsKeyFromTemplateTag(component, el, single, iterator1, iterator2, i, index, group) {\n    const keyAttr = getXAttrs(el, 'bind').filter(attr => attr.value === 'key')[0]\n\n    let keyAliases = { [single]: i }\n    if (iterator1) keyAliases[iterator1] = index\n    if (iterator2) keyAliases[iterator2] = group\n\n    return keyAttr\n        ? component.evaluateReturnExpression(el, keyAttr.expression, () => keyAliases)\n        : index\n}\n","import { arrayUnique } from '../utils'\n\nexport function handleAttributeBindingDirective(component, el, attrName, expression, extraVars) {\n    var value = component.evaluateReturnExpression(el, expression, extraVars)\n\n    if (attrName === 'value') {\n        // If nested model key is undefined, set the default value to empty string.\n        if (value === undefined && expression.match(/\\./).length) {\n            value = ''\n        }\n\n        if (el.type === 'radio') {\n            el.checked = el.value == value\n        } else if (el.type === 'checkbox') {\n            if (Array.isArray(value)) {\n                // I'm purposely not using Array.includes here because it's\n                // strict, and because of Numeric/String mis-casting, I\n                // want the \"includes\" to be \"fuzzy\".\n                let valueFound = false\n                value.forEach(val => {\n                    if (val == el.value) {\n                        valueFound = true\n                    }\n                })\n\n                el.checked = valueFound\n            } else {\n                el.checked = !! value\n            }\n        } else if (el.tagName === 'SELECT') {\n            updateSelect(el, value)\n        } else {\n            el.value = value\n        }\n    } else if (attrName === 'class') {\n        if (Array.isArray(value)) {\n            const originalClasses = el.__x_original_classes || []\n            el.setAttribute('class', arrayUnique(originalClasses.concat(value)).join(' '))\n        } else if (typeof value === 'object') {\n            Object.keys(value).forEach(classNames => {\n                if (value[classNames]) {\n                    classNames.split(' ').forEach(className => el.classList.add(className))\n                } else {\n                    classNames.split(' ').forEach(className => el.classList.remove(className))\n                }\n            })\n        } else {\n            const originalClasses = el.__x_original_classes || []\n            const newClasses = value.split(' ')\n            el.setAttribute('class', arrayUnique(originalClasses.concat(newClasses)).join(' '))\n        }\n    } else if (['disabled', 'readonly', 'required', 'checked', 'hidden'].includes(attrName)) {\n        // Boolean attributes have to be explicitly added and removed, not just set.\n        if (!! value) {\n            el.setAttribute(attrName, '')\n        } else {\n            el.removeAttribute(attrName)\n        }\n    } else {\n        el.setAttribute(attrName, value)\n    }\n}\n\nfunction updateSelect(el, value) {\n    const arrayWrappedValue = [].concat(value).map(value => { return value + '' })\n\n    Array.from(el.options).forEach(option => {\n        option.selected = arrayWrappedValue.includes(option.value || option.text)\n    })\n}\n","import { kebabCase } from '../utils'\n\nexport function registerListener(component, el, event, modifiers, expression, extraVars = {}) {\n    if (modifiers.includes('away')) {\n        const handler = e => {\n            // Don't do anything if the click came form the element or within it.\n            if (el.contains(e.target)) return\n\n            // Don't do anything if this element isn't currently visible.\n            if (el.offsetWidth < 1 && el.offsetHeight < 1) return\n\n            // Now that we are sure the element is visible, AND the click\n            // is from outside it, let's run the expression.\n            runListenerHandler(component, expression, e, extraVars)\n\n            if (modifiers.includes('once')) {\n                document.removeEventListener(event, handler)\n            }\n        }\n\n        // Listen for this event at the root level.\n        document.addEventListener(event, handler)\n    } else {\n        const listenerTarget = modifiers.includes('window')\n            ? window : (modifiers.includes('document') ? document : el)\n\n        const handler = e => {\n            if (isKeyEvent(event)) {\n                if (isListeningForASpecificKeyThatHasntBeenPressed(e, modifiers)) {\n                    return\n                }\n            }\n\n            if (modifiers.includes('prevent')) e.preventDefault()\n            if (modifiers.includes('stop')) e.stopPropagation()\n\n            runListenerHandler(component, expression, e, extraVars)\n\n            if (modifiers.includes('once')) {\n                listenerTarget.removeEventListener(event, handler)\n            }\n        }\n\n        listenerTarget.addEventListener(event, handler)\n    }\n}\n\nfunction runListenerHandler(component, expression, e, extraVars) {\n    component.evaluateCommandExpression(e.target, expression, () => {\n        return {...extraVars(), '$event': e}\n    })\n}\n\nfunction isKeyEvent(event) {\n    return ['keydown', 'keyup'].includes(event)\n}\n\nfunction isListeningForASpecificKeyThatHasntBeenPressed(e, modifiers) {\n    let keyModifiers = modifiers.filter(i => {\n        return ! ['window', 'document', 'prevent', 'stop'].includes(i)\n    })\n\n    // If no modifier is specified, we'll call it a press.\n    if (keyModifiers.length === 0) return false\n\n    // If one is passed, AND it matches the key pressed, we'll call it a press.\n    if (keyModifiers.length === 1 && keyModifiers[0] === keyToModifier(e.key)) return false\n\n    // The user is listening for key combinations.\n    const systemKeyModifiers = ['ctrl', 'shift', 'alt', 'meta', 'cmd', 'super']\n    const selectedSystemKeyModifiers = systemKeyModifiers.filter(modifier => keyModifiers.includes(modifier))\n\n    keyModifiers = keyModifiers.filter(i => ! selectedSystemKeyModifiers.includes(i))\n\n    if (selectedSystemKeyModifiers.length > 0) {\n        const activelyPressedKeyModifiers = selectedSystemKeyModifiers.filter(modifier => {\n            // Alias \"cmd\" and \"super\" to \"meta\"\n            if (modifier === 'cmd' || modifier === 'super') modifier = 'meta'\n\n            return e[`${modifier}Key`]\n        })\n\n        // If all the modifiers selected are pressed, ...\n        if (activelyPressedKeyModifiers.length === selectedSystemKeyModifiers.length) {\n            // AND the remaining key is pressed as well. It's a press.\n            if (keyModifiers[0] === keyToModifier(e.key)) return false\n        }\n    }\n\n    // We'll call it NOT a valid keypress.\n    return true\n}\n\nfunction keyToModifier(key) {\n    switch (key) {\n        case '/':\n            return 'slash'\n        case ' ':\n        case 'Spacebar':\n            return 'space'\n        default:\n            return kebabCase(key)\n    }\n}\n","import { registerListener } from './on'\n\nexport function registerModelListener(component, el, modifiers, expression, extraVars = {}) {\n    // If the element we are binding to is a select, a radio, or checkbox\n    // we'll listen for the change event instead of the \"input\" event.\n    var event = (el.tagName.toLowerCase() === 'select')\n        || ['checkbox', 'radio'].includes(el.type)\n        || modifiers.includes('lazy')\n        ? 'change' : 'input'\n\n    const listenerExpression = modelListenerExpression(component, el, modifiers, expression)\n\n    registerListener(component, el, event, modifiers, listenerExpression, extraVars)\n}\n\nfunction modelListenerExpression(component, el, modifiers, dataKey) {\n    var rightSideOfExpression = ''\n    if (el.type === 'checkbox') {\n        // If the data we are binding to is an array, toggle it's value inside the array.\n        if (Array.isArray(component.$data[dataKey])) {\n            rightSideOfExpression = `$event.target.checked ? ${dataKey}.concat([$event.target.value]) : ${dataKey}.filter(i => i !== $event.target.value)`\n        } else {\n            rightSideOfExpression = `$event.target.checked`\n        }\n    } else if (el.tagName.toLowerCase() === 'select' && el.multiple) {\n        rightSideOfExpression = modifiers.includes('number')\n            ? 'Array.from($event.target.selectedOptions).map(option => { return parseFloat(option.value || option.text) })'\n            : 'Array.from($event.target.selectedOptions).map(option => { return option.value || option.text })'\n    } else {\n        rightSideOfExpression = modifiers.includes('number')\n            ? 'parseFloat($event.target.value)'\n            : (modifiers.includes('trim') ? '$event.target.value.trim()' : '$event.target.value')\n    }\n\n    if (el.type === 'radio') {\n        // Radio buttons only work properly when they share a name attribute.\n        // People might assume we take care of that for them, because\n        // they already set a shared \"x-model\" attribute.\n        if (! el.hasAttribute('name')) el.setAttribute('name', dataKey)\n    }\n\n    return `${dataKey} = ${rightSideOfExpression}`\n}\n","import { walk, saferEval, saferEvalNoReturn, getXAttrs, debounce } from './utils'\nimport { handleForDirective } from './directives/for'\nimport { handleAttributeBindingDirective } from './directives/bind'\nimport { handleShowDirective } from './directives/show'\nimport { handleIfDirective } from './directives/if'\nimport { registerModelListener } from './directives/model'\nimport { registerListener } from './directives/on'\n\nexport default class Component {\n    constructor(el) {\n        this.$el = el\n\n        const dataAttr = this.$el.getAttribute('x-data')\n        const dataExpression = dataAttr === '' ? '{}' : dataAttr\n        const initExpression = this.$el.getAttribute('x-init')\n        const createdExpression = this.$el.getAttribute('x-created')\n        const mountedExpression = this.$el.getAttribute('x-mounted')\n\n        const unobservedData = saferEval(dataExpression, {})\n\n        // Construct a Proxy-based observable. This will be used to handle reactivity.\n        this.$data = this.wrapDataInObservable(unobservedData)\n\n        // After making user-supplied data methods reactive, we can now add\n        // our magic properties to the original data for access.\n        unobservedData.$el = this.$el\n        unobservedData.$refs = this.getRefsProxy()\n\n        this.nextTickStack = []\n        unobservedData.$nextTick = (callback) => {\n            this.nextTickStack.push(callback)\n        }\n\n        var initReturnedCallback\n        if (initExpression) {\n            // We want to allow data manipulation, but not trigger DOM updates just yet.\n            // We haven't even initialized the elements with their Alpine bindings. I mean c'mon.\n            this.pauseReactivity = true\n            initReturnedCallback = saferEval(this.$el.getAttribute('x-init'), this.$data)\n            this.pauseReactivity = false\n        }\n\n        if (createdExpression) {\n            console.warn('AlpineJS Warning: \"x-created\" is deprecated and will be removed in the next major version. Use \"x-init\" instead.')\n            this.pauseReactivity = true\n            saferEvalNoReturn(this.$el.getAttribute('x-created'), this.$data)\n            this.pauseReactivity = false\n        }\n\n        // Register all our listeners and set all our attribute bindings.\n        this.initializeElements(this.$el)\n\n        // Use mutation observer to detect new elements being added within this component at run-time.\n        // Alpine's just so darn flexible amirite?\n        this.listenForNewElementsToInitialize()\n\n        if (typeof initReturnedCallback === 'function') {\n            // Run the callback returned form the \"x-init\" hook to allow the user to do stuff after\n            // Alpine's got it's grubby little paws all over everything.\n            initReturnedCallback.call(this.$data)\n        }\n\n        if (mountedExpression) {\n            console.warn('AlpineJS Warning: \"x-mounted\" is deprecated and will be removed in the next major version. Use \"x-init\" (with a callback return) for the same behavior.')\n            // Run an \"x-mounted\" hook to allow the user to do stuff after\n            // Alpine's got it's grubby little paws all over everything.\n            saferEvalNoReturn(mountedExpression, this.$data)\n        }\n    }\n\n    wrapDataInObservable(data) {\n        var self = this\n\n        const proxyHandler = {\n            set(obj, property, value) {\n                const setWasSuccessful = Reflect.set(obj, property, value)\n\n                // Don't react to data changes for cases like the `x-created` hook.\n                if (self.pauseReactivity) return\n\n                debounce(() => {\n                    self.updateElements(self.$el)\n\n                    // Walk through the $nextTick stack and clear it as we go.\n                    while (self.nextTickStack.length > 0) {\n                        self.nextTickStack.shift()()\n                    }\n                }, 0)()\n\n                return setWasSuccessful\n            },\n            get(target, key) {\n                // If the property we are trying to get is a proxy, just return it.\n                // Like in the case of $refs\n                if (target[key] && target[key].isRefsProxy) return target[key]\n\n                // If property is a DOM node, just return it. (like in the case of this.$el)\n                if (target[key] && target[key] instanceof Node) return target[key]\n\n                // If accessing a nested property, retur this proxy recursively.\n                // This enables reactivity on setting nested data.\n                if (typeof target[key] === 'object' && target[key] !== null) {\n                    return new Proxy(target[key], proxyHandler)\n                }\n\n                // If none of the above, just return the flippin' value. Gawsh.\n                return target[key]\n            }\n        }\n\n        return new Proxy(data, proxyHandler)\n    }\n\n    walkAndSkipNestedComponents(el, callback, initializeComponentCallback = () => {}) {\n        walk(el, el => {\n            // We've hit a component.\n            if (el.hasAttribute('x-data')) {\n                // If it's not the current one.\n                if (! el.isSameNode(this.$el)) {\n                    // Initialize it if it's not.\n                    if (! el.__x) initializeComponentCallback(el)\n\n                    // Now we'll let that sub-component deal with itself.\n                    return false\n                }\n            }\n\n            return callback(el)\n        })\n    }\n\n    initializeElements(rootEl, extraVars = () => {}) {\n        this.walkAndSkipNestedComponents(rootEl, el => {\n            // Don't touch spawns from for loop\n            if (el.__x_for_key !== undefined) return false\n\n            this.initializeElement(el, extraVars)\n        }, el => {\n            el.__x = new Component(el)\n        })\n\n        // Walk through the $nextTick stack and clear it as we go.\n        while (this.nextTickStack.length > 0) {\n            this.nextTickStack.shift()()\n        }\n    }\n\n    initializeElement(el, extraVars) {\n        // To support class attribute merging, we have to know what the element's\n        // original class attribute looked like for reference.\n        if (el.hasAttribute('class') && getXAttrs(el).length > 0) {\n            el.__x_original_classes = el.getAttribute('class').split(' ')\n        }\n\n        this.registerListeners(el, extraVars)\n        this.resolveBoundAttributes(el, true, extraVars)\n    }\n\n    updateElements(rootEl, extraVars = () => {}) {\n        this.walkAndSkipNestedComponents(rootEl, el => {\n            // Don't touch spawns from for loop (and check if the root is actually a for loop in a parent, don't skip it.)\n            if (el.__x_for_key !== undefined && ! el.isSameNode(this.$el)) return false\n\n            this.updateElement(el, extraVars)\n        }, el => {\n            el.__x = new Component(el)\n        })\n    }\n\n    updateElement(el, extraVars) {\n        this.resolveBoundAttributes(el, false, extraVars)\n    }\n\n    registerListeners(el, extraVars) {\n        getXAttrs(el).forEach(({ type, value, modifiers, expression }) => {\n            switch (type) {\n                case 'on':\n                    registerListener(this, el, value, modifiers, expression, extraVars)\n                    break;\n\n                case 'model':\n                    registerModelListener(this, el, modifiers, expression, extraVars)\n                    break;\n                default:\n                    break;\n            }\n        })\n    }\n\n    resolveBoundAttributes(el, initialUpdate = false, extraVars) {\n        getXAttrs(el).forEach(({ type, value, modifiers, expression }) => {\n            switch (type) {\n                case 'model':\n                    handleAttributeBindingDirective(this, el, 'value', expression, extraVars)\n                    break;\n\n                case 'bind':\n                    // The :key binding on an x-for is special, ignore it.\n                    if (el.tagName.toLowerCase() === 'template' && value === 'key') return\n\n                    handleAttributeBindingDirective(this, el, value, expression, extraVars)\n                    break;\n\n                case 'text':\n                    var output = this.evaluateReturnExpression(el, expression, extraVars);\n\n                    // If nested model key is undefined, set the default value to empty string.\n                    if (output === undefined && expression.match(/\\./).length) {\n                        output = ''\n                    }\n\n                    el.innerText = output\n                    break;\n\n                case 'html':\n                    el.innerHTML = this.evaluateReturnExpression(el, expression, extraVars)\n                    break;\n\n                case 'show':\n                    var output = this.evaluateReturnExpression(el, expression, extraVars)\n\n                    handleShowDirective(el, output, initialUpdate)\n                    break;\n\n                case 'if':\n                    var output = this.evaluateReturnExpression(el, expression, extraVars)\n\n                    handleIfDirective(el, output, initialUpdate)\n                    break;\n\n                case 'for':\n                    handleForDirective(this, el, expression, initialUpdate)\n                    break;\n\n                case 'cloak':\n                    el.removeAttribute('x-cloak')\n                    break;\n\n                default:\n                    break;\n            }\n        })\n    }\n\n    evaluateReturnExpression(el, expression, extraVars = () => {}) {\n        return saferEval(expression, this.$data, {\n            ...extraVars(),\n            $dispatch: this.getDispatchFunction(el),\n        })\n    }\n\n    evaluateCommandExpression(el, expression, extraVars = () => {}) {\n        saferEvalNoReturn(expression, this.$data, {\n            ...extraVars(),\n            $dispatch: this.getDispatchFunction(el),\n        })\n    }\n\n    getDispatchFunction (el) {\n        return (event, detail = {}) => {\n            el.dispatchEvent(new CustomEvent(event, {\n                detail,\n                bubbles: true,\n            }))\n        }\n    }\n\n    listenForNewElementsToInitialize() {\n        const targetNode = this.$el\n\n        const observerOptions = {\n            childList: true,\n            attributes: true,\n            subtree: true,\n        }\n\n        const observer = new MutationObserver((mutations) => {\n            for (let i=0; i < mutations.length; i++){\n                // Filter out mutations triggered from child components.\n                const closestParentComponent = mutations[i].target.closest('[x-data]')\n                if (! (closestParentComponent && closestParentComponent.isSameNode(this.$el))) return\n\n                if (mutations[i].type === 'attributes' && mutations[i].attributeName === 'x-data') {\n                    const rawData = saferEval(mutations[i].target.getAttribute('x-data'), {})\n\n                    Object.keys(rawData).forEach(key => {\n                        if (this.$data[key] !== rawData[key]) {\n                            this.$data[key] = rawData[key]\n                        }\n                    })\n                }\n\n                if (mutations[i].addedNodes.length > 0) {\n                    mutations[i].addedNodes.forEach(node => {\n                        if (node.nodeType !== 1) return\n\n                        if (node.matches('[x-data]')) {\n                            node.__x = new Component(node)\n                            return\n                        }\n\n                        this.initializeElements(node)\n                    })\n                }\n              }\n        })\n\n        observer.observe(targetNode, observerOptions);\n    }\n\n    getRefsProxy() {\n        var self = this\n\n        // One of the goals of this is to not hold elements in memory, but rather re-evaluate\n        // the DOM when the system needs something from it. This way, the framework is flexible and\n        // friendly to outside DOM changes from libraries like Vue/Livewire.\n        // For this reason, I'm using an \"on-demand\" proxy to fake a \"$refs\" object.\n        return new Proxy({}, {\n            get(object, property) {\n                if (property === 'isRefsProxy') return true\n\n                var ref\n\n                // We can't just query the DOM because it's hard to filter out refs in\n                // nested components.\n                self.walkAndSkipNestedComponents(self.$el, el => {\n                    if (el.hasAttribute('x-ref') && el.getAttribute('x-ref') === property) {\n                        ref = el\n                    }\n                })\n\n                return ref\n            }\n        })\n    }\n}\n","import { transitionIn, transitionOut } from '../utils'\n\nexport function handleShowDirective(el, value, initialUpdate = false) {\n    if (! value) {\n        transitionOut(el, () => {\n            el.style.display = 'none'\n        }, initialUpdate)\n    } else {\n        transitionIn(el, () => {\n            if (el.style.length === 1 && el.style.display !== '') {\n                el.removeAttribute('style')\n            } else {\n                el.style.removeProperty('display')\n            }\n        }, initialUpdate)\n    }\n}\n","import { transitionIn, transitionOut } from '../utils'\n\nexport function handleIfDirective(el, expressionResult, initialUpdate) {\n    if (el.nodeName.toLowerCase() !== 'template') console.warn(`Alpine: [x-if] directive should only be added to <template> tags. See https://github.com/alpinejs/alpine#x-if`)\n\n    const elementHasAlreadyBeenAdded = el.nextElementSibling && el.nextElementSibling.__x_inserted_me === true\n\n    if (expressionResult && ! elementHasAlreadyBeenAdded) {\n        const clone = document.importNode(el.content, true);\n\n        el.parentElement.insertBefore(clone, el.nextElementSibling)\n\n        el.nextElementSibling.__x_inserted_me = true\n\n        transitionIn(el.nextElementSibling, () => {}, initialUpdate)\n    } else if (! expressionResult && elementHasAlreadyBeenAdded) {\n        transitionOut(el.nextElementSibling, () => {\n            el.nextElementSibling.remove()\n        }, initialUpdate)\n    }\n}\n","import Component from './component'\nimport { domReady, isTesting } from './utils'\n\nconst Alpine = {\n    start: async function () {\n        if (! isTesting()) {\n            await domReady()\n        }\n\n        this.discoverComponents(el => {\n            this.initializeComponent(el)\n        })\n\n        // It's easier and more performant to just support Turbolinks than listen\n        // to MutationOberserver mutations at the document level.\n        document.addEventListener(\"turbolinks:load\", () => {\n            this.discoverUninitializedComponents(el => {\n                this.initializeComponent(el)\n            })\n        })\n\n        this.listenForNewUninitializedComponentsAtRunTime(el => {\n            this.initializeComponent(el)\n        })\n    },\n\n    discoverComponents: function (callback) {\n        const rootEls = document.querySelectorAll('[x-data]');\n\n        rootEls.forEach(rootEl => {\n            callback(rootEl)\n        })\n    },\n\n    discoverUninitializedComponents: function (callback, el = null) {\n        const rootEls = (el || document).querySelectorAll('[x-data]');\n\n        Array.from(rootEls)\n            .filter(el => el.__x === undefined)\n            .forEach(rootEl => {\n                callback(rootEl)\n            })\n    },\n\n    listenForNewUninitializedComponentsAtRunTime: function (callback) {\n        const targetNode = document.querySelector('body');\n\n        const observerOptions = {\n            childList: true,\n            attributes: true,\n            subtree: true,\n        }\n\n        const observer = new MutationObserver((mutations) => {\n            for (let i=0; i < mutations.length; i++){\n                if (mutations[i].addedNodes.length > 0) {\n                    mutations[i].addedNodes.forEach(node => {\n                        // Discard non-element nodes (like line-breaks)\n                        if (node.nodeType !== 1) return\n\n                        // Discard any changes happening within an existing component.\n                        // They will take care of themselves.\n                        if (node.parentElement.closest('[x-data]')) return\n\n                        this.discoverUninitializedComponents((el) => {\n                            this.initializeComponent(el)\n                        }, node.parentElement)\n                    })\n                }\n              }\n        })\n\n        observer.observe(targetNode, observerOptions)\n    },\n\n    initializeComponent: function (el) {\n        if (! el.__x) {\n            el.__x = new Component(el)\n        }\n    }\n}\n\nif (! isTesting()) {\n    window.Alpine = Alpine\n    window.Alpine.start()\n}\n\nexport default Alpine\n"],"names":["arrayUnique","array","a","concat","i","length","j","splice","isTesting","navigator","userAgent","includes","saferEval","expression","dataContext","additionalHelperVariables","Function","Object","keys","values","saferEvalNoReturn","isXAttr","attr","name","replaceAtAndColonWithStandardSyntax","test","getXAttrs","el","type","Array","from","attributes","filter","map","typeMatch","match","valueMatch","modifiers","value","replace","startsWith","transitionIn","callback","forceSkip","attrs","enter","find","split","enterStart","enterEnd","transition","transitionOut","leave","leaveStart","leaveEnd","classesDuring","classesStart","classesEnd","hook1","hook2","originalClasses","__x_original_classes","classList","add","requestAnimationFrame","duration","Number","getComputedStyle","transitionDuration","remove","setTimeout","isConnected","handleForDirective","component","initialUpdate","single","bunch","iterator1","iterator2","forIteratorRE","inMatch","res","trim","iteratorMatch","parseFor","items","evaluateReturnExpression","previousEl","forEach","index","group","currentKey","keyAttr","keyAliases","getThisIterationsKeyFromTemplateTag","currentEl","nextElementSibling","undefined","__x_for_key","tmpCurrentEl","parentElement","insertBefore","__x_for_alias","__x_for_value","updateElements","clone","document","importNode","content","initializeElements","nextElementFromOldLoop","nextElementFromOldLoopImmutable","nextSibling","handleAttributeBindingDirective","attrName","extraVars","checked","isArray","valueFound","val","tagName","arrayWrappedValue","options","option","selected","text","updateSelect","setAttribute","join","classNames","className","newClasses","removeAttribute","registerListener","event","handler","e","contains","target","offsetWidth","offsetHeight","runListenerHandler","removeEventListener","addEventListener","listenerTarget","window","isKeyEvent","isListeningForASpecificKeyThatHasntBeenPressed","preventDefault","stopPropagation","evaluateCommandExpression","keyModifiers","keyToModifier","key","selectedSystemKeyModifiers","modifier","toLowerCase","modelListenerExpression","dataKey","rightSideOfExpression","$data","multiple","hasAttribute","Component","constructor","$el","dataAttr","this","getAttribute","dataExpression","initExpression","createdExpression","mountedExpression","unobservedData","initReturnedCallback","wrapDataInObservable","$refs","getRefsProxy","nextTickStack","$nextTick","push","pauseReactivity","console","warn","listenForNewElementsToInitialize","call","data","self","proxyHandler","set","obj","property","setWasSuccessful","Reflect","func","wait","timeout","shift","context","args","arguments","later","apply","clearTimeout","get","isRefsProxy","Node","Proxy","walkAndSkipNestedComponents","initializeComponentCallback","walk","node","firstElementChild","isSameNode","__x","rootEl","initializeElement","registerListeners","resolveBoundAttributes","updateElement","listenerExpression","registerModelListener","output","innerText","innerHTML","style","display","removeProperty","handleShowDirective","expressionResult","nodeName","elementHasAlreadyBeenAdded","__x_inserted_me","handleIfDirective","$dispatch","getDispatchFunction","detail","dispatchEvent","CustomEvent","bubbles","targetNode","MutationObserver","mutations","closestParentComponent","closest","attributeName","rawData","addedNodes","nodeType","matches","observe","childList","subtree","object","ref","Alpine","start","async","Promise","resolve","readyState","discoverComponents","initializeComponent","discoverUninitializedComponents","listenForNewUninitializedComponentsAtRunTime","querySelectorAll","rootEls","querySelector"],"mappings":"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"}
>>>>>>> master
